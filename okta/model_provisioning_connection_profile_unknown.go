/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

Copyright 2018 - Present Okta, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

API version: 5.1.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package okta

import (
	"encoding/json"
)

// ProvisioningConnectionProfileUnknown Unknown provisioning connection
type ProvisioningConnectionProfileUnknown struct {
	// Defines the method of authentication
	AuthScheme           string `json:"authScheme"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningConnectionProfileUnknown ProvisioningConnectionProfileUnknown

// NewProvisioningConnectionProfileUnknown instantiates a new ProvisioningConnectionProfileUnknown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningConnectionProfileUnknown(authScheme string) *ProvisioningConnectionProfileUnknown {
	this := ProvisioningConnectionProfileUnknown{}
	this.AuthScheme = authScheme
	return &this
}

// NewProvisioningConnectionProfileUnknownWithDefaults instantiates a new ProvisioningConnectionProfileUnknown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningConnectionProfileUnknownWithDefaults() *ProvisioningConnectionProfileUnknown {
	this := ProvisioningConnectionProfileUnknown{}
	return &this
}

// GetAuthScheme returns the AuthScheme field value
func (o *ProvisioningConnectionProfileUnknown) GetAuthScheme() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthScheme
}

// GetAuthSchemeOk returns a tuple with the AuthScheme field value
// and a boolean to check if the value has been set.
func (o *ProvisioningConnectionProfileUnknown) GetAuthSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthScheme, true
}

// SetAuthScheme sets field value
func (o *ProvisioningConnectionProfileUnknown) SetAuthScheme(v string) {
	o.AuthScheme = v
}

func (o ProvisioningConnectionProfileUnknown) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authScheme"] = o.AuthScheme
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProvisioningConnectionProfileUnknown) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningConnectionProfileUnknown := _ProvisioningConnectionProfileUnknown{}

	err = json.Unmarshal(bytes, &varProvisioningConnectionProfileUnknown)
	if err == nil {
		*o = ProvisioningConnectionProfileUnknown(varProvisioningConnectionProfileUnknown)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "authScheme")
		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullableProvisioningConnectionProfileUnknown struct {
	value *ProvisioningConnectionProfileUnknown
	isSet bool
}

func (v NullableProvisioningConnectionProfileUnknown) Get() *ProvisioningConnectionProfileUnknown {
	return v.value
}

func (v *NullableProvisioningConnectionProfileUnknown) Set(val *ProvisioningConnectionProfileUnknown) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningConnectionProfileUnknown) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningConnectionProfileUnknown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningConnectionProfileUnknown(val *ProvisioningConnectionProfileUnknown) *NullableProvisioningConnectionProfileUnknown {
	return &NullableProvisioningConnectionProfileUnknown{value: val, isSet: true}
}

func (v NullableProvisioningConnectionProfileUnknown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningConnectionProfileUnknown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
