/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

Copyright 2018 - Present Okta, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

API version: 5.1.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package okta

import (
	"encoding/json"
	"reflect"
	"strings"
)

// OINAutoLoginApplicationSettingsSignOn struct for OINAutoLoginApplicationSettingsSignOn
type OINAutoLoginApplicationSettingsSignOn struct {
	OINApplicationSettingsSignOn
	SignOnMode interface{} `json:"signOnMode,omitempty"`
	// Primary URL of the sign-in page for this app
	LoginUrl string `json:"loginUrl"`
	// Secondary URL of the sign-in page for this app
	RedirectUrl          *string `json:"redirectUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OINAutoLoginApplicationSettingsSignOn OINAutoLoginApplicationSettingsSignOn

// NewOINAutoLoginApplicationSettingsSignOn instantiates a new OINAutoLoginApplicationSettingsSignOn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOINAutoLoginApplicationSettingsSignOn(loginUrl string) *OINAutoLoginApplicationSettingsSignOn {
	this := OINAutoLoginApplicationSettingsSignOn{}
	this.LoginUrl = loginUrl
	return &this
}

// NewOINAutoLoginApplicationSettingsSignOnWithDefaults instantiates a new OINAutoLoginApplicationSettingsSignOn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOINAutoLoginApplicationSettingsSignOnWithDefaults() *OINAutoLoginApplicationSettingsSignOn {
	this := OINAutoLoginApplicationSettingsSignOn{}
	return &this
}

// GetSignOnMode returns the SignOnMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OINAutoLoginApplicationSettingsSignOn) GetSignOnMode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SignOnMode
}

// GetSignOnModeOk returns a tuple with the SignOnMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OINAutoLoginApplicationSettingsSignOn) GetSignOnModeOk() (*interface{}, bool) {
	if o == nil || o.SignOnMode == nil {
		return nil, false
	}
	return &o.SignOnMode, true
}

// HasSignOnMode returns a boolean if a field has been set.
func (o *OINAutoLoginApplicationSettingsSignOn) HasSignOnMode() bool {
	if o != nil && o.SignOnMode != nil {
		return true
	}

	return false
}

// SetSignOnMode gets a reference to the given interface{} and assigns it to the SignOnMode field.
func (o *OINAutoLoginApplicationSettingsSignOn) SetSignOnMode(v interface{}) {
	o.SignOnMode = v
}

// GetLoginUrl returns the LoginUrl field value
func (o *OINAutoLoginApplicationSettingsSignOn) GetLoginUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value
// and a boolean to check if the value has been set.
func (o *OINAutoLoginApplicationSettingsSignOn) GetLoginUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginUrl, true
}

// SetLoginUrl sets field value
func (o *OINAutoLoginApplicationSettingsSignOn) SetLoginUrl(v string) {
	o.LoginUrl = v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *OINAutoLoginApplicationSettingsSignOn) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OINAutoLoginApplicationSettingsSignOn) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *OINAutoLoginApplicationSettingsSignOn) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *OINAutoLoginApplicationSettingsSignOn) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o OINAutoLoginApplicationSettingsSignOn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedOINApplicationSettingsSignOn, errOINApplicationSettingsSignOn := json.Marshal(o.OINApplicationSettingsSignOn)
	if errOINApplicationSettingsSignOn != nil {
		return []byte{}, errOINApplicationSettingsSignOn
	}
	errOINApplicationSettingsSignOn = json.Unmarshal([]byte(serializedOINApplicationSettingsSignOn), &toSerialize)
	if errOINApplicationSettingsSignOn != nil {
		return []byte{}, errOINApplicationSettingsSignOn
	}
	if o.SignOnMode != nil {
		toSerialize["signOnMode"] = o.SignOnMode
	}
	if true {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if o.RedirectUrl != nil {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OINAutoLoginApplicationSettingsSignOn) UnmarshalJSON(bytes []byte) (err error) {
	type OINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct struct {
		SignOnMode interface{} `json:"signOnMode,omitempty"`
		// Primary URL of the sign-in page for this app
		LoginUrl string `json:"loginUrl"`
		// Secondary URL of the sign-in page for this app
		RedirectUrl *string `json:"redirectUrl,omitempty"`
	}

	varOINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct := OINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct{}

	err = json.Unmarshal(bytes, &varOINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct)
	if err == nil {
		varOINAutoLoginApplicationSettingsSignOn := _OINAutoLoginApplicationSettingsSignOn{}
		varOINAutoLoginApplicationSettingsSignOn.SignOnMode = varOINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct.SignOnMode
		varOINAutoLoginApplicationSettingsSignOn.LoginUrl = varOINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct.LoginUrl
		varOINAutoLoginApplicationSettingsSignOn.RedirectUrl = varOINAutoLoginApplicationSettingsSignOnWithoutEmbeddedStruct.RedirectUrl
		*o = OINAutoLoginApplicationSettingsSignOn(varOINAutoLoginApplicationSettingsSignOn)
	} else {
		return err
	}

	varOINAutoLoginApplicationSettingsSignOn := _OINAutoLoginApplicationSettingsSignOn{}

	err = json.Unmarshal(bytes, &varOINAutoLoginApplicationSettingsSignOn)
	if err == nil {
		o.OINApplicationSettingsSignOn = varOINAutoLoginApplicationSettingsSignOn.OINApplicationSettingsSignOn
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "signOnMode")
		delete(additionalProperties, "loginUrl")
		delete(additionalProperties, "redirectUrl")

		// remove fields from embedded structs
		reflectOINApplicationSettingsSignOn := reflect.ValueOf(o.OINApplicationSettingsSignOn)
		for i := 0; i < reflectOINApplicationSettingsSignOn.Type().NumField(); i++ {
			t := reflectOINApplicationSettingsSignOn.Type().Field(i)

			if jsonTag := t.Tag.Get("json"); jsonTag != "" {
				fieldName := ""
				if commaIdx := strings.Index(jsonTag, ","); commaIdx > 0 {
					fieldName = jsonTag[:commaIdx]
				} else {
					fieldName = jsonTag
				}
				if fieldName != "AdditionalProperties" {
					delete(additionalProperties, fieldName)
				}
			}
		}

		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullableOINAutoLoginApplicationSettingsSignOn struct {
	value *OINAutoLoginApplicationSettingsSignOn
	isSet bool
}

func (v NullableOINAutoLoginApplicationSettingsSignOn) Get() *OINAutoLoginApplicationSettingsSignOn {
	return v.value
}

func (v *NullableOINAutoLoginApplicationSettingsSignOn) Set(val *OINAutoLoginApplicationSettingsSignOn) {
	v.value = val
	v.isSet = true
}

func (v NullableOINAutoLoginApplicationSettingsSignOn) IsSet() bool {
	return v.isSet
}

func (v *NullableOINAutoLoginApplicationSettingsSignOn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOINAutoLoginApplicationSettingsSignOn(val *OINAutoLoginApplicationSettingsSignOn) *NullableOINAutoLoginApplicationSettingsSignOn {
	return &NullableOINAutoLoginApplicationSettingsSignOn{value: val, isSet: true}
}

func (v NullableOINAutoLoginApplicationSettingsSignOn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOINAutoLoginApplicationSettingsSignOn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
