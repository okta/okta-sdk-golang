openapi: 3.0.3
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta Management APIs
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta Admin Management
  version: 2024.06.1
  x-logo:
    url: logo.svg
    backgroundColor: transparent
    altText: Okta Developer
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/reference/core-okta-api/#design-principles
servers:
- url: "https://{yourOktaDomain}"
  variables:
    yourOktaDomain:
      default: subdomain.okta.com
      description: "The domain of your organization. This can be a provided subdomain\
        \ of an official okta domain (okta.com, oktapreview.com, etc) or one of your\
        \ configured custom domains."
tags:
- description: The Agent Pools API provides operation to manage the update settings
    of the agents for your organization.
  name: AgentPools
  x-displayName: Agent Pools
- description: |
    This API provides operations to manage API service integration instances in your organization.

    For a current list of available API service integrations, see the [Okta Integration Network catalog](https://www.okta.com/integrations/?capability=api).

    See [Add an API Service Integration](https://help.okta.com/okta_help.htm?type=oie&id=ext-add-api-service-integration) for corresponding admin instructions using the Admin Console.
    If you want to build an API service integration, see [API service integrations in the OIN](https://developer.okta.com/docs/guides/oin-api-service-overview/).
  name: ApiServiceIntegrations
  x-displayName: API Service Integrations
- description: The API Tokens API provides operations to manage SSWS API tokens for
    your organization.
  name: ApiToken
  x-displayName: API Tokens
- description: |-
    The Applications API provides operations to manage apps in your org.

    To create a custom app integration instance, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) operation with the schema provided in the request payload.

    To create an app instance from the Okta Integration Network (OIN), use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication)
    operation with the corresponding OIN app schema in the request body.
  name: Application
  x-displayName: Applications
- description: |
    The Application Connections API provides operations for configuring connections to an app.

    Okta supports token-based and OAuth 2.0-based provisioning connections for supported apps.
    The following available provisioning connections are supported by the indicated apps:
      | <div style="width:200px">Connection</div> | Apps&nbsp;supported | Description   |
      | -------------------- | -------------- | ----------- |
      | Token  | Okta Org2Org (`okta_org2org`)<br>Zscaler 2.0 (`zscalerbyz`) | The provisioning API connection is based on bearer token authentication. |
      | OAuth 2.0  | Google Workspace (`google`)<br>Microsoft Office 365 (`office365`)<br>Okta Org2Org (`okta_org2org`)<br>Slack (`slack`)<br>Zoom (`zoomus`) | The provisioning API connection is based on OAuth 2.0 authentication. |

      > **Note:** The Okta Org2Org (`okta_org2org`) app isn't available in Okta Developer Edition orgs. If you need to test this feature in your Developer Edition org, contact your Okta account team.
  name: ApplicationConnections
  x-displayName: Application Connections
- description: |
    Specifies credentials and scheme for the application's `signOnMode`

    ### Application Key Credential
    The application Key Credential object defines a [JSON Web Key](https://datatracker.ietf.org/doc/html/rfc7517) for a signature or encryption credential for an application.

    > **Notes:**
    > * To update the app, you can provide just the Signing Credential object instead of the entire Application Credential object.
    > * Currently only the X.509 JWK format is supported for applications with the `SAML_2_0` sign-on mode.
  name: ApplicationCredentials
  x-displayName: Application Credentials
- description: |
    The Application Features API supports operations to configure app feature settings.

    You must have app provisioning enabled to configure provisioning features. See [Update the default Provisioning Connection](/openapi/okta-management/management/tag/ApplicationConnections/#tag/ApplicationConnections/operation/updateDefaultProvisioningConnectionForApplication).

    The following available provisioning features are supported by the indicated apps:

    | <div style="width:200px">Feature</div> | Apps&nbsp;supported | Description   |
    | -------------------- | -------------- | ----------- |
    | `USER_PROVISIONING`  | Google Workspace (`google`)<br>Microsoft Office 365 (`office365`)<br>Okta Org2Org (`okta_org2org`)<br>Slack (`slack`)<br>Zoom (`zoomus`)<br>Zscaler 2.0 (`zscalerbyz`) | Similar to the app **Provisioning** > **To App** setting in the Admin Console, user profiles are pushed from Okta to the third-party app. You can configure rules for creating users, deactivating users, and syncing passwords. |
    | `INBOUND_PROVISIONING` | Google Workspace (`google`)<br>Microsoft Office 365 (`office365`)<br>Okta Org2Org (`okta_org2org`)<br>Slack (`slack`)<br>Zoom (`zoomus`) | Similar to the app **Provisioning** > **To Okta** provisioning setting in the Admin Console, user profiles are imported from the third-party app into Okta. You can schedule user import and configure rules for user creation and matching. |

    > **Note:** The Okta Org2Org (`okta_org2org`) app isn't available in Okta Developer Edition orgs. If you need to test this feature in your Developer Edition org, contact your Okta account team.
  name: ApplicationFeatures
  x-displayName: Application Features
- description: |
    The Application Grants API provides a set of operations to manage scope consent grants for an app.

    A scope consent grant represents an app's permission to include specific Okta scopes in OAuth 2.0 Bearer tokens.
    If the app doesn't have permission to grant consent for a particular Okta scope, token requests that contain the scope are denied.
  name: ApplicationGrants
  x-displayName: Application Grants
- description: The Application Groups API provides a set of operations to manage group
    assignment for an app.
  name: ApplicationGroups
  x-displayName: Application Groups
- description: Provides a resource to manage the application instance logo
  name: ApplicationLogos
  x-displayName: Application Logos
- description: Provides a resource to manage authentication policies associated with
    an application
  name: ApplicationPolicies
  x-displayName: Application Policies
- description: Provides a Single Sign-On (SSO) resource for an application
  name: ApplicationSSO
  x-displayName: Application SSO
- description: |
    Resource to manage OAuth 2.0 tokens for an app
    > **Note:** To configure refresh tokens for an app, see
    > [grant_types](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication!path=4/settings/oauthClient/grant_types&t=request)
    > and [refresh_token](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication!path=4/settings/oauthClient/refresh_token&t=request).
  name: ApplicationTokens
  x-displayName: Application Tokens
- description: |
    The Application Users API provides operations to manage app users and their assignments.
    The object returned from assigning a user to an app is known as the Application User.

    You can assign users to apps for:
      * SSO only
      * SSO and provisioning
  name: ApplicationUsers
  x-displayName: Application Users
- description: The Attack Protection API provides operations to configure the User
    Lockout Settings and the Authenticator Settings in your org to protect against
    password abuse.
  name: AttackProtection
  x-displayName: Attack Protection
- description: |-
    The Authenticators Administration API provides operations to configure which Authenticators are available to end users for use when they sign in to applications.

    End users are required to use one or more Authenticators based on the security requirements of the authentication policy.

    Okta Identity Engine currently supports Authenticators for the following factors:

    **Knowledge-based:**
    * Password
    * Security Question

    **Possession-based:**
    * Phone (SMS, voice call)
    * Email
    * WebAuthn
    * Duo
    * Custom app
  name: Authenticator
  x-displayName: Authenticators
- description: |-
    Authorization Servers generate OAuth 2.0 and OpenID Connect tokens, including access tokens and ID tokens. The Okta Management API gives you the ability to configure and manage Authorization Servers and the security policies that are attached to them.

    **Work with the Default Authorization Server**

    Okta provides a pre-configured Custom Authorization Server with the name `default`. This Default Authorization Server includes a basic access policy and rule, which you can edit to control access. It allows you to specify `default` instead of the `authorizationServerId` in requests to it:

    `https://${yourOktaDomain}/api/v1/authorizationServers/default`

    vs

    `https://${yourOktaDomain}/api/v1/authorizationServers/${authorizationServerId}` for other Custom Authorization Servers
  name: AuthorizationServer
  x-displayName: Authorization Servers
- description: "Associated authorization servers allow you to designate a trusted\
    \ authorization server that you associate with another authorization server. This\
    \ type of association provides a way to configure [token exchange](https://developer.okta.com/docs/guides/set-up-token-exchange/main/#trusted-servers)\
    \ between other authorization servers under the same Okta tenant."
  name: AuthorizationServerAssoc
  x-displayName: Authorization Server Associated Servers
- description: Provides operations to manage custom token claims for the given `authServerId`
    and `claimId`
  name: AuthorizationServerClaims
  x-displayName: Authorization Server Claims
- description: |-
    These endpoints allow you to manage tokens issued by an authorization server for a particular client. For example, you can revoke every active refresh token for a specific client. You can also revoke specific tokens or manage tokens at the User level.

    Read [Validate access tokens](https://developer.okta.com/docs/guides/validate-access-tokens/dotnet/main/) and [Validate ID tokens](https://developer.okta.com/docs/guides/validate-id-tokens/main/) to understand more about how OAuth 2.0 tokens work.
  name: AuthorizationServerClients
  x-displayName: Authorization Server Clients
- description: Provides operations to manage credential keys for the given `authServerId`.
  name: AuthorizationServerKeys
  x-displayName: Authorization Server Keys
- description: Provides operations to manage policies for the given `authServerId`.
  name: AuthorizationServerPolicies
  x-displayName: Authorization Server Policies
- description: "Provides operations to manage policy rules for the given `authServerId`,\
    \ `policyId`, and `ruleId`."
  name: AuthorizationServerRules
  x-displayName: Authorization Server Rules
- description: Provides operations to manage custom token scopes for the given `authServerId`
    and `scopeId`.
  name: AuthorizationServerScopes
  x-displayName: Authorization Server Scopes
- description: The Behavior Rules API provides operations to manage the behavior detection
    rules for your organization.
  name: Behavior
  x-displayName: Behavior Rules
- description: |-
    These endpoints allow you to manage Brands, and their metadata, in your orgs. With Brands, you can customize the following:
    * [The Okta-hosted sign-in page](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/CustomPages/)
    * [The sign-out page](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/CustomPages/)
    * [Error pages](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/CustomPages/)
    * [Email templates](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/CustomTemplates/)
    * [The Okta End-User Dashboard](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Themes/)

    > **Note:**  Some of the curl code examples on this page include SSWS API token authentication. However, Okta recommends using scoped OAuth 2.0 and OIDC access tokens to authenticate with Okta management APIs. OAuth 2.0 and OIDC access tokens provide fine-grain control over the bearer's actions on specific endpoints. See [Okta API authentication methods](https://developer.okta.com/docs/api/openapi/okta-oauth/guides/overview/).
  name: Brands
  x-displayName: Brands
- description: |-
    As an option to increase org security, Okta supports CAPTCHA services to prevent automated sign-in attempts. You can integrate one of two providers: [hCaptcha](https://www.hcaptcha.com/) or [reCAPTCHA v2](https://developers.google.com/recaptcha/docs/invisible).

    The vendor implementations supported by Okta are both invisible. They each run risk-analysis software in the background during user sign in to determine the likelihood that the user is a bot. This risk analysis is based on the settings that you configure with the provider that you choose.

    Before you configure your org to use CAPTCHA, sign in to the vendor of your choice or sign up for an account. For more details, refer to [CAPTCHA integration](https://help.okta.com/okta_help.htm?type=oie&id=csh-captcha).
  name: CAPTCHA
  x-displayName: CAPTCHAs
- description: The Custom Domains API provides operations to manage custom domains
    for your organization.
  name: CustomDomain
  x-displayName: Custom Domains
- description: |-
    These endpoints allow you to customize the contents of various pages, including:
    * The Okta-hosted sign-in page
    * Error pages
    * The sign-out page

    > **Note:**  Some of the curl code examples on this page include SSWS API token authentication. However, Okta recommends using scoped OAuth 2.0 and OIDC access tokens to authenticate with Okta management APIs. OAuth 2.0 and OIDC access tokens provide fine-grain control over the bearer's actions on specific endpoints. See [Okta API authentication methods](https://developer.okta.com/docs/api/openapi/okta-oauth/guides/overview/).
  name: CustomPages
  x-displayName: Custom Pages
- description: |-
    These endpoints allow you to programmatically manage email customizations.

    Okta provides many customizable email templates. For example, the `UserActivation` email template allows users to activate their account. Use email customizations to override a template's default content. See the [list of email templates](https://developer.okta.com/docs/guides/custom-email/main/#use-customizable-email-templates).

    Each template has default content that Okta translates to any one of the supported languages. The following settings determine the language for emails sent from Okta to a user, if the user hasn't selected a specific display language:
    * The user's locale property value (if specified)
    * The org's display language

    See [Supported languages](https://developer.okta.com/docs/guides/custom-email/main/#supported-languages).

    The following constraints apply to email customizations:
    * If an email template has any customizations at all, exactly one of them must be the default (where `isDefault` is `true`). Okta uses the default customization when no other customization applies to the user's language settings.
    * Each email template can have only one customization for each supported language.

    ### Enable other locales
    <ApiLifecycle access="ea" />

    Use the [BCP 47 format](https://www.rfc-editor.org/info/bcp47) to enable more locales than Okta's 27 default languages.

    Once you create a customization with the new locale, the locale appears in the Admin Console along with the default-supported locales.

    Include `null` in the subject or body of the email customization. Okta replaces `null` with a default value based on the following order of priority:

    - An existing default email customization, if one exists
    - Okta-provided translated content for the specified language, if one exists
    - Okta-provided translated content for the brand locale, if it's set
    - Okta-provided content in English
  name: CustomTemplates
  x-displayName: Custom Email Templates
- description: |-
    The Okta Devices API provides a centralized integration platform to fetch and manage device information. Okta administrators can use these APIs to manage workforce identity Device object information.

    The Devices API supports the following **Device Operations**:
    * Get, Delete Device objects.
    * Perform lifecycle transitions on the Device objects.
      Device lifecycle is defined as transitions of the Device Status by the associated operations. The Device object follows a predefined lifecycle transition flow. Device Lifecycle operations are idempotent and its calls are synchronous.

    The Devices API supports the following **Authorization Schemes**:
    * SSWS - [API tokens](https://developer.okta.com/docs/reference/core-okta-api/#authentication)
    * Bearer - [OAuth2.0 and OpenID Connect](https://developer.okta.com/docs/concepts/oauth-openid/)

    > **Note:** For devices to enroll in Okta and show up in the Devices API, the following actions are required:
    > 1. Admins - Enable Okta FastPass. See [Enable FastPass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-enable)
    > 2. End users with existing mobile Okta Verify enrollments - After you upgrade your org to Okta Identity Engine, direct end users with existing Okta Verify enrollments to use [FastPass](https://help.okta.com/okta_help.htm?type=oie&id=csh-fp-main).

    > **Note:** End users with a new enrollment in Okta Verify on an Okta Identity Engine org have a device record created in the device inventory by default.
    See [Device Registration](https://help.okta.com/okta_help.htm?type=oie&id=csh-device-registration), [Login Using Okta Verify](https://help.okta.com/okta_help.htm?type=eu&id=ext-ov-user-overview).
  name: Device
  x-displayName: Devices
- description: The Device Assurance Policies API provides operations to manage device
    assurance policies in your organization.
  name: DeviceAssurance
  x-displayName: Device Assurance Policies
- description: |-
    > **Note:** Your Okta org needs to have the AD bidirectional group management feature enabled. Contact your Okta account team to enable this feature.

    The Directories Integration API provides operations to manage Active Directory objects in a connected on-premises directory through Okta.
  name: DirectoriesIntegration
  x-displayName: Directories Integration
- description: The Email Domains API provides operations to manage email domains for
    your organization.
  name: EmailDomain
  x-displayName: Email Domains
- description: "The Email Servers API allows you to configure a custom external email\
    \ provider to send email notifications. By default, notifications such as the\
    \ welcome email or an account recovery email are sent through an Okta-managed\
    \ SMTP server. Adding a custom email provider gives you more control over your\
    \ email delivery."
  name: EmailServer
  x-displayName: Email Servers
- description: |-
    The Event Hooks API provides operations to manage event hooks for your organization.

    For general information on event hooks and how to create and use them, see [Event hooks](https://developer.okta.com/docs/concepts/event-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering event hooks.

    For a step-by-step guide on implementing an example event hook, see the [Event hook](https://developer.okta.com/docs/guides/event-hook-implementation/) guide.

    When you create an event hook, you need to specify which events you want to subscribe to. To see the list of event types currently eligible for use in event hooks, use the [Event Types](https://developer.okta.com/docs/reference/api/event-types/#catalog) catalog and search with the parameter `event-hook-eligible`.
  name: EventHook
  x-displayName: Event Hooks
- description: |-
    The Okta Features API provides operations to manage self-service Early Access (EA) and Beta features in your org.

    > **Note:** Important background information for this API is available on the [Feature Lifecycle Management](https://developer.okta.com/docs/concepts/feature-lifecycle-management/) page.
  name: Feature
  x-displayName: Features
- description: The Groups API provides operations to manage Okta Groups and their
    user members for your organization.
  name: Group
  x-displayName: Groups
- description: |-
    The Group Owners API provides operations to manage owners of Okta Groups for your organization.

    > **Note**: This API is only available if you're subscribed to [Okta Identity Governance](https://www.okta.com/products/identity-governance/). Contact your Customer Success Manager or Account Executive for more information.
  name: GroupOwner
  x-displayName: Group Owners
- description: The Hook Keys API provides operations to manage hook keys for your
    organization.
  name: HookKey
  x-displayName: Hook Keys
- description: "The Identity Providers API provides operations to manage federations\
    \ with external Identity Providers (IdP). For example, your app can support signing\
    \ in with credentials from Apple, Facebook, Google, LinkedIn, Microsoft, an enterprise\
    \ IdP using SAML 2.0, or an IdP using the OpenID Connect (`OIDC`) protocol."
  name: IdentityProvider
  x-displayName: Identity Providers
- description: The Okta Identity Source API provides a mechanism to synchronize an
    HR source (the custom identity source) with Okta user profiles in an org.
  name: IdentitySource
  x-displayName: Identity Sources
- description: |-
    The Inline Hooks API provides operations to manage inline hooks for your organization.

    For general information on inline hooks and how to create and use them, see [inline hooks](https://developer.okta.com/docs/concepts/inline-hooks/). The following documentation is only for the management API, which provides a CRUD interface for registering inline hooks.
  name: InlineHook
  x-displayName: Inline Hooks
- description: |-
    Users have relationships to each other, like manager and subordinate or customer and sales representative. You can create users with relationships by using the Linked Objects API to represent the relationship.

    1. Create a Linked Object definition such as Manager:Subordinate or Case Worker:Client. These pairs are represented by a `primary` attribute and an `associated` attribute.
    2. Link users together to create the relationship between the two. You create a Linked Object value with a single request that links one `primary` and one `associated` user.

    For each relationship:

    * A user has at most one `primary` link (a user has a single manager), but can have many `associated` links (a user can have many subordinates).
    * A user can be the `primary` in one relationship and the `associated` in another.
    * A user can be both the `primary` and `associated` in the same relationship.

    Okta Expression Language function for [Linked Objects](https://developer.okta.com/docs/reference/okta-expression-language/#linked-object-function) provides access to the details about a linked user.

    > **Note:** The Linked Objects feature isn't available for OpenID Connect claims.

    ## Example usage

    Okta allows you to create up to 200 Linked Object definitions. These definitions are one-to-many, for example:

    * A manager has many subordinates. Each subordinate has one manager.
    * A sales representative has many customers. Each customer has one sales rep.
    * A case worker has many clients. Each client has one case worker.

    Most organizations have more than one manager or sales representative. You can create the Linked Object definition once, and then assign the `primary` relationship to as many users as you have people in that relationship.

    You can assign the `associated` relationship for a single `primary` user to as many users as needed. The `associated` user can be related to only one `primary` per Linked Object definition. But a user can be assigned to more than one Linked Object definition.

    For example, assume that you've created one Linked Object definition for manager (`primary`) and for subordinates (`associated`):

    * Joe is Frank's manager.
    * Bob is Joe's manager, but Jane's subordinate.
    * Jane is the CEO, so she reports to herself.

    Thus, you can create chains of relationships (Jane > Bob > Joe > Frank) or terminal relationships (Jane is both `primary` and `associated` user).

    Then, if you create another Linked Object relationship for scrum team membership, you could assign relationships to the same four users:

    * Bob is the scrum lead for the Identity Scrum team.
    * Joe and Frank are both contributors to the team.

    Bob can be the `primary` for a Manager:Subordinate, an `associated` user for that same Linked Object definition, and also the `primary` for the Scrumlead:Contributor Linked Object definition.

    To represent a relationship, create a Linked Object definition that specifies a `primary` (parent) relationship and an `associated` (child) relationship, and then add a link in which the appropriate user is assigned to each side of that link type.

    ## Links between User Types

    If you created multiple User Types (see [User Types](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/)), they all share the same Linked Object definitions. For example, if you have separate User Types for employees and contractors, a link could designate an employee as the manager for a contractor, with the contractor being a subordinate of that employee.

    ## Link definition operations

    Link definition operations allow you to manage the creation and removal of the link definitions. If you remove a link definition, links based on that definition are unavailable.

    > **Note:** Links reappear if you recreate the definition. However, Okta is likely to change this behavior so that links don't reappear. Don't rely on this behavior in production environments.
  name: LinkedObject
  x-displayName: Linked Objects
- description: The Log Streaming API provides operations to manage Log Stream configurations
    for an org. You can configure up to two Log Stream integrations per org.
  name: LogStream
  x-displayName: Log Streaming
- description: |-
    The Network Zones API provides operations to manage system default and custom zones in your Okta org.
    Network Zones are configurable boundaries that you can use to grant or restrict access to resources in your organization.
    They're used for two purposes:
    * `POLICY`: Network Zones used to guide policy decisions
    * `BLOCKLIST`: Network Zones used to deny access from certain IP addresses, locations, Autonomous System Numbers (ASNs), proxy types, or IP service categories before policy evaluation
    > **Note:** The Network Zone blocklist applies to all URLs for the org.

    See [Network zones](https://help.okta.com/okta_help.htm?id=ext_Security_Network) in the Okta product documentation.

    Your Okta org provides the following default system Network Zones that you can modify and use:
    * `LegacyIpZone`: The system default IP Network Zone
    * `BlockedIpZone`: The system default IP Blocklist Network Zone
    * <x-lifecycle class="ea"></x-lifecycle> `DefaultEnhancedDynamicZone`: The system default Enhanced Dynamic Network Zone

    You can create and use the following custom Network Zones:
    * IP Network Zone (`IP`): Allows you to define network perimeters around a set of IPs
    * Dynamic Network Zone (`DYNAMIC`): Allows you to define network perimeters around location, IP type, or ASNs
    * <x-lifecycle class="ea"></x-lifecycle> Enhanced Dynamic Network Zone (`DYNAMIC_V2`): Extends the Dynamic Network Zone and allows you to include or exclude specific locations, ASNs, or IP service categories

    > **Notes:**
    > * To create multiple Network Zones, you must have Adaptive MFA enabled in your Okta org.
    > * Enhanced Dynamic Network Zones is a [self-service Early Access (EA)](/openapi/okta-management/guides/release-lifecycle/#early-access-ea) feature. You must enable **Enhanced Dynamic Network Zones** in your Org settings to access this API. See [Manage Early Access and Beta features](https://help.okta.com/okta_help.htm?id=ext_secur_manage_ea_bata).
  name: NetworkZone
  x-displayName: Network Zones
- description: The Okta Application Settings API provides operations to manage settings
    for Okta apps in your org.
  name: OktaApplicationSettings
  x-displayName: Okta Application Settings
- description: "The Org Settings API provides operations to manage your org account\
    \ settings such as contact information, granting Okta Support access, and more."
  name: OrgSetting
  x-displayName: Org Settings
- description: |-
    The Okta Policy API enables an Administrator to perform Policy and Policy Rule operations. The Policy framework is used by Okta to control Rules and settings that govern, among other things, user session lifetime, whether multi-factor authentication is required when logging in, what MFA factors may be employed, password complexity requirements, what types of self-service operations are permitted under various circumstances, and what identity provider to route users to.

    Policy settings for a particular Policy type, such as Sign On Policy, consist of one or more Policy objects, each of which contains one or more Policy Rules. Policies and Rules contain conditions that determine whether they are applicable to a particular user at a particular time.
  name: Policy
  x-displayName: Policies
- description: The Principal Rate Limits API provides operations to manage Principal
    Rate Limits for your organization.
  name: PrincipalRateLimit
  x-displayName: Principal Rate Limits
- description: "The Mappings API provides operations to manage the mapping of Profile\
    \ properties between an Okta User and an App User using [Okta Expression Language](https://developer.okta.com/docs/reference/okta-expression-language).\
    \ More information on Okta User and App User Profiles can be found in Okta's [User\
    \ profiles](https://developer.okta.com/docs/concepts/user-profiles/#what-is-the-okta-universal-directory)."
  name: ProfileMapping
  x-displayName: Profile Mappings
- description: |-
    The Okta Push Providers API provides a centralized integration platform to fetch and manage push provider configurations. Okta administrators can use these APIs to provide their push provider credentials, for example from APNs and FCM, so that Okta can send push notifications to their own custom app authenticator applications.

    The Push Providers API supports the following **Authorization Schemes**:
    * SSWS - [API tokens](https://developer.okta.com/docs/reference/core-okta-api/#authentication)
    * Bearer - [OAuth2.0 and OpenID Connect](https://developer.okta.com/docs/concepts/oauth-openid/)

    > **Notes:**
    > * Some of the curl code examples on this page include SSWS API token authentication. However, Okta recommends using scoped OAuth 2.0 and OIDC access tokens to authenticate with Okta management APIs. OAuth 2.0 and OIDC access tokens provide fine-grain control over the bearer's actions on specific endpoints. See [Okta API authentication methods](https://developer.okta.com/docs/reference/core-okta-api/#authentication).
    > * You can use the Push Providers API as part of the "Create a custom authenticator" flow. See the [Custom authenticator integration guide](https://developer.okta.com/docs/guides/authenticators-custom-authenticator/android/main/).
  name: PushProvider
  x-displayName: Push Providers
  x-okta-lifecycle:
    lifecycle: GA
    isGenerallyAvailable: false
    SKUs: []
- description: The Rate Limit Settings APIs provide operations to manage settings
    and configurations surrounding rate limiting in your Okta organization.
  name: RateLimitSettings
  x-displayName: Rate Limit Settings
- description: The Realms API provides operations to manage realms
  name: Realm
  x-displayName: Realms
- description: The Realm Assignments API provides operations to manage Realm Assignments
  name: RealmAssignment
  x-displayName: Realm Assignments
- description: "The Resource Sets API provides operations to manage Resource Sets\
    \ as custom collections of resources. You can use Resource Sets to assign Custom\
    \ Roles to administrators who are scoped to the designated resources. See [Supported\
    \ Resources](/openapi/okta-management/guides/roles/#supported-resources)."
  name: ResourceSet
  x-displayName: Resource Sets
- description: "The Risk Events API provides the ability for third-party risk providers\
    \ to send risk events to Okta. See [Third-party risk provider integration](https://developer.okta.com/docs/guides/third-party-risk-integration/)\
    \ for guidance on integrating third-party risk providers with Okta."
  name: RiskEvent
  x-displayName: Risk Events
- description: "The Risk Providers API provides the ability to manage the Risk Providers\
    \ within Okta. See [Third-party risk provider integration](https://developer.okta.com/docs/guides/third-party-risk-integration/)\
    \ for guidance on integrating third-party risk providers with Okta."
  name: RiskProvider
  x-displayName: Risk Providers
- description: |-
    The Roles API provides operations to manage administrative Role assignments for a User.

    Role listing APIs provide a union of both standard and Custom Roles assigned to a User or Group.
  name: Role
  x-displayName: Roles
- description: "The Role Assignments APIs allow you to assign custom roles, and designate\
    \ third-party admin status, to users, groups and public client apps."
  name: RoleAssignment
  x-displayName: Role Assignments
- description: |-
    Role targets are a way of defining permissions for admin roles into a smaller subset of Groups or Apps within your org. Targets limit an admin's permissions to a targeted area of the org. You can define admin roles to target Groups, Applications, and Application Instances.

    * **Group targets:** Grant an admin permission to manage only a specified Group. For example, an admin role may be assigned to manage only the IT Group.
    * **App targets:** Grant an admin permission to manage all instances of the specified Apps. Target Apps are Okta catalog Apps. For example, you can have multiple configurations of an Okta catalog App, such as Salesforce or Facebook. When you add a Salesforce or Facebook App as a target, that grants the admin permission to manage all the instances of those Apps and create new instances of them.
    * **App Instance targets:** Grant an admin permission to manage an instance of one App or instances of multiple Apps. App Instances are specific Apps that admins have created in their org. For example, there may be a Salesforce App configured differently for each sales region of a company. When you create an App Instance target, you can assign an admin to manage only two instances of the configured Salesforce Apps and then also to manage an instance of another configured App such as Workday.

    > **Note:** Don't use these operations with a Custom Role ID. Custom Role assignments always require a target Resource Set. See [Role Assignments](https://developer.okta.com/docs/concepts/role-assignment/) for more information.
  name: RoleTarget
  x-displayName: Role Targets
- description: |-
    <x-lifecycle class="ea"></x-lifecycle> <x-lifecycle class="oie"></x-lifecycle>
    > **Note:** This is an EA release feature that's currently available to a selected audience.
    > This feature is only available as a part of Okta Identity Engine. Your Okta org must have the SSF Receiver API feature enabled.
    > Contact your Okta account team to enable this feature.

    Okta uses the [Shared Signals Framework (SSF)](https://sharedsignals.guide/) to receive security-related events and other data-subject signals from third-party security vendors. In this scenario, commonly used terms for third-party vendors that send signals are "transmitters", Okta is the "receiver", and the connection between the two entities is referred to as a "stream."

    The SSF Receiver API allows you to manage SSF vendor stream configurations between the transmitter and Okta. A stream is configured by [creating a Security Events Provider](/openapi/okta-management/management/tag/SSFReceiver/#tag/SSFReceiver/operation/createSecurityEventsProviderInstance) object in your Okta org. You can create a Security Events Provider object in Okta with a published well-known URL or an issuer-and-JWKS combination.

    After the Security Events Provider object is created for a transmitter, the provider can use the [SSF Security Event Tokens](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/SSFSecurityEventToken/) API to publish events to Okta. While the SSF allows ingestion through push and poll-based operations, Okta currently supports only push-based operations.
  name: SSFReceiver
  x-displayName: SSF Receiver
- description: |-
    <x-lifecycle class="ea"></x-lifecycle> <x-lifecycle class="oie"></x-lifecycle>
    > **Note:** This is an EA release feature that's currently available to a selected audience.
    > This feature is only available as a part of Okta Identity Engine. Your Okta org needs to have the SSF Security Event Tokens API feature enabled.
    > Contact your Okta account team to enable this feature.

    The Shared Signals Framework (SSF) Security Event Tokens API allows third-party security event providers to send Security Event Tokens (SETs) to Okta. The provider must be configured in Okta as a Security Events Provider instance before transmitting a SET to Okta. See [Create a Security Events Provider](/openapi/okta-management/management/tag/SSFReceiver/#tag/SSFReceiver/operation/createSecurityEventsProviderInstance). After the token is verified, any appropriate action is performed upon ingestion.

    Okta uses the Shared Signals Framework (SSF) defined by the [OpenID Shared Signals and Events Framework specification](https://openid.net/specs/openid-sse-framework-1_0.html). A risk signal is ingested as a Security Event Token (SET), a type of JSON Web Token (JWT) that must comply with the SET standard: [RFC 8417 - Security Event Token(SET)](https://datatracker.ietf.org/doc/html/rfc8417). The `security.events.provider.receive_event` System Log event is created when a SET is published to Okta successfully.
  name: SSFSecurityEventToken
  x-displayName: SSF Security Event Tokens
- description: |-
    <x-lifecycle class="ea"></x-lifecycle> <x-lifecycle class="oie"></x-lifecycle>
    > **Note:** The SSF Transmitter API is a [self-service Early Access (EA)](/openapi/okta-management/guides/release-lifecycle/#early-access-ea) feature. You must enable the **Enable Managed Apple ID federation and provisioning** feature in your Org settings to access this feature. See [Manage Early Access and Beta features](https://help.okta.com/okta_help.htm?id=ext_secur_manage_ea_bata).

    Okta uses the [Shared Signals Framework (SSF)](https://sharedsignals.guide) to send security-related events and other data-subject signals to third-party security vendors. In this scenario, commonly used terms for third-party vendors that receive signals are "receivers", Okta is the "transmitter", and the connection between the two entities is referred to as a "stream."

    The SSF Transmitter API allows you to manage SSF stream configurations between the receiver that receives signals transmitted by Okta. Okta sends signals in the form of [Security Event Tokens (SETs)](https://datatracker.ietf.org/doc/html/rfc8417) to a third-party SSF receiver. To enable the transmission of signals from Okta, you must create an SSF Stream using the SSF Transmitter API and configure the third-party receiver to accept signals from Okta.
  name: SSFTransmitter
  x-displayName: SSF Transmitter
- description: |-
    The Schemas API provides operations to manage custom User profiles as well as endpoints to discover the structure of the Log Stream configuration.

    Okta's [Universal Directory](https://help.okta.com/okta_help.htm?id=ext_About_Universal_Directory) allows administrators to define custom User profiles for Okta Users and Applications.
    Okta adopts a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) as the schema language to describe and validate extensible User profiles.
    For Log Stream Schemas, Okta uses [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).
    [JSON Schema](http://json-schema.org/) is a lightweight declarative format for describing the structure, constraints, and validation of JSON documents.

    > **Note:** Okta implements only a subset of [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html). This document describes which parts apply to Okta, and any extensions Okta has made to [JSON Schema Draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) and [JSON Schema Draft 2020-12](https://json-schema.org/specification.html).
  name: Schema
  x-displayName: Schemas
- description: |-
    Okta uses a cookie-based authentication mechanism to maintain a user's authentication Session across web requests. The Okta Sessions API provides operations to create and manage authentication Sessions for users in your Okta organization.

    >**Notes:**
    > * Some browsers block third-party cookies by default, which disrupts Okta functionality in certain flows. See [Mitigate the impact of third-party cookie deprecation](https://help.okta.com/okta_help.htm?type=oie&id=ext-third-party-cookies).
    > * The Sessions API doesn't support direct authentication. Direct authentication is supported through the [Authentication API](https://developer.okta.com/docs/reference/api/authn/#authentication-operations) or through OIDC using the [Resource Owner Password flow](https://developer.okta.com/docs/guides/implement-grant-type/ropassword/main/).

    ### Session cookie

    Okta uses an HTTP session cookie to provide access to your Okta organization and applications across web requests for an interactive user agent such as a web browser. A session cookie has an expiration configurable by an administrator for the organization and is valid until the cookie expires or the user closes the Session (logout) or browser application.

    ### Session token

    A [session token](https://developer.okta.com/docs/reference/api/authn/#session-token) is a one-time bearer token that provides proof of authentication and may be redeemed for an interactive SSO session in Okta in a user agent. Session tokens can only be used **once** to establish a Session for a user and are revoked when the token expires.

    Okta provides a very rich [Authentication API](https://developer.okta.com/docs/reference/api/authn/) to validate a [user's primary credentials](https://developer.okta.com/docs/reference/api/authn/#primary-authentication) and secondary [MFA factor](https://developer.okta.com/docs/reference/api/authn/#verify-factor). A session token is returned after successful authentication, which can be later exchanged for a session cookie that uses one of the following flows:

    - [Retrieve a session cookie by visiting the OpenID Connect Authorization Endpoint](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-through-the-openid-connect-authorization-endpoint)
    - [Retrieve a session cookie by visiting a session redirect link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-a-session-redirect-link)
    - [Retrieve a session cookie by visiting an application embed link](https://developer.okta.com/docs/guides/session-cookie/main/#retrieve-a-session-cookie-by-visiting-an-application-embed-link)

    >**Note:** **Session tokens** are secrets and should be protected at rest and during transit. A session token for a user is equivalent to having the user's actual credentials.
  name: Session
  x-displayName: Sessions
- description: The Subscriptions API provides operations to manage email subscription
    settings for Okta administrator notifications.
  name: Subscription
  x-displayName: Subscriptions
- description: |-
    The System Log records system events that are related to your organization in order to provide an audit trail that can be used to understand platform activity and to diagnose problems.

    The System Log API provides near real-time, read-only access to your organization's system log and is the programmatic counterpart of the [System Log UI](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog).

    The terms "event" and "log event" are often used interchangeably. In the context of this API, an "event" is an occurrence of interest within the system, and a "log" or "log event" is the recorded fact.

    The System Log API supports these primary use cases:
      * Event data export into a security information and event management system (SIEM)
      * System monitoring
      * Development debugging
      * Event introspection and audit

    The System Log API isn't intended for use as a Database as a Service (DBaaS) or to serve data directly to downstream consumers without an intermediate data store.

    See [Events API Migration](https://developer.okta.com/docs/concepts/events-api-migration/) for information on migrating from the Events API to the System Log API.
  name: SystemLog
  x-displayName: System Log
- description: |-
    The SMS Templates API provides operations to manage custom SMS templates for verification.

    > **Note:** Only SMS custom Templates are available through the API.

    SMS Templates customize the SMS message that is sent to users. One default SMS Template is provided. All custom Templates must have the variable `${code}` as part of the text. The `${code}` variable is replaced with the actual SMS code when the message is sent. Optionally, you can also use the variable `${org.name}`. If a Template contains `${org.name}`, it is replaced with the organization name before the SMS message is sent.

    ### SMS Template macros

    Only two macros are supported for SMS Templates:
    | <div style="width:200px">Type</div> | Description   |
    | -------------------- | ----------- |
    | ${code}  | The one-time verification code that's required for a user to sign in. |
    | ${org.name} | The Okta org name that the user is trying to authenticate into. |

    >**Note:** The length of your SMS message can't exceed 160 characters. If the verification code portion of the message falls outside of the 160-character limit, your message isn't sent.
  name: Template
  x-displayName: SMS Templates
- description: |-
    These endpoints allow you to customize the look and feel of pages and templates, including the following:
    * The Okta-hosted sign-in page
    * The sign-out page
    * Error pages
    * Email templates
    * The Okta End-User Dashboard

    Each new org contains Okta default branding. You can upload your own assets (colors, background image, logo, and favicon) to replace the default assets. Then you can publish these assets directly to your pages and templates.

    > **Notes:**
    > * Some of the curl code examples on this page include SSWS API token authentication. However, Okta recommends scoped OAuth 2.0 and OIDC access tokens to authenticate with Okta management APIs. OAuth 2.0 and OIDC access tokens provide fine-grain control over the bearer's actions on specific endpoints. See [Okta API authentication methods](https://developer.okta.com/docs/api/openapi/okta-oauth/guides/overview/).
    > * Okta optimizes the `primaryColorContrastHex` and `secondaryColorContrastHex` properties for the highest contrast between the font color and the background or button color. To disable or override the contrast auto-detection, update either contrast value with an accepted contrast hex code. Any update disables future automatic optimizations for the contrast hex.
    > * Contrast color is used by pages to optimize the opacity of text color when primary or secondary color is used as the background.
  name: Themes
  x-displayName: Themes
- description: |-
    [Okta ThreatInsight](https://help.okta.com/okta_help.htm?id=ext_threatinsight) maintains a
    constantly evolving list of IP addresses that consistently exhibit malicious activity.
    Authentication requests that are associated with an IP in this list can be logged to the
    [System Log](https://help.okta.com/okta_help.htm?id=ext_Reports_SysLog) and blocked.
    ThreatInsight also covers non-authentication requests in limited capacity depending on the attack patterns of these malicious IPs.

    The ThreatInsight API provides operations to manage your org ThreatInsight configuration.

    > **Note:** To prevent abuse, Okta ThreatInsight works in a limited capacity for free trial edition orgs. Please contact Okta support if fully functional Okta ThreatInsight is required.
  name: ThreatInsight
  x-displayName: ThreatInsight
- description: "The Trusted Origins API provides operations to manage Trusted Origins\
    \ and sources.\n\nWhen external URLs are requested during sign-in, sign-out, or\
    \ recovery operations, Okta checks those URLs against the allowed list of Trusted\
    \ Origins. Trusted Origins also enable browser-based applications to access Okta\
    \ APIs from JavaScript (CORS). If the origins aren't specified, the related operation\
    \ (redirect or Okta API access) isn't permitted.\n\nYou can also configure Trusted\
    \ Origins to allow iFrame embedding of Okta resources, such as Okta sign-in pages\
    \ and the Okta End-User Dashboard, within that origin.\n\n> **Notes:**  \n> *\
    \ This feature is supported for Okta domains only. It isn't currently supported\
    \ for custom domains.\n> * Some of the curl code examples on this page include\
    \ SSWS API token authentication. However, Okta recommends using scoped OAuth 2.0\
    \ and OIDC access tokens to authenticate with Okta management APIs. OAuth 2.0\
    \ and OIDC access tokens provide fine-grain control over the bearer's actions\
    \ on specific endpoints. See [Okta API authentication methods](https://developer.okta.com/docs/api/openapi/okta-oauth/guides/overview/)."
  name: TrustedOrigin
  x-displayName: Trusted Origins
- description: |-
    The Okta UI Schema API allows you to control how inputs appear on an enrollment form. The UI Schema API is only available as a part of Okta Identity Engine.

    If you're not sure which solution you're using, check the footer on any page of the Admin Console. The version number is appended with E for Identity Engine orgs and C for Classic Engine orgs.
  name: UISchema
  x-displayName: UI Schema
- description: The User API provides operations to manage users in your organization.
  name: User
  x-displayName: Users
- description: |-
    The Factors API provides operations to enroll, manage, and verify factors for multifactor authentication (MFA). Generally, authentication involves verifying a different one-time passcode (OTP). Manage both administration and end-user accounts, or verify an individual factor at any time.
    Okta supports several different types of Factors:
    | Factor Type           | Description |
    |-----------------------|-------------|
    | `call`                | Software OTP sent using a voice call to a registered phone number |
    | `sms`                 | Software OTP sent using SMS to a registered phone number |
    | `email`               | Software OTP sent using email |
    | `question`            | Additional knowledge-based security question |
    | `push`                | Out-of-band verification using a push notification to a device and transaction verification with digital signature |
    | `token`               | Software or hardware OTP sent to a device |
    | `token:hardware`      | Hardware OTP sent to a device |
    | `token:hotp`          | Custom [TOTP](https://www.ietf.org/rfc/rfc6238.txt) factor that uses an extension of the HMAC-based one-time passcode (HOTP) algorithm |
    | `token:software:totp` | Software time-based one-time passcode (TOTP) |
    | `u2f`                 | Hardware Universal 2nd Factor (U2F) device |
    | `web`                 | HTML inline frame (iframe) for embedding verification from a third party |
    | `webauthn`            | Hardware WebAuthn device |
    | `signed_nonce`        | Okta Fastpass (device-bound authentication). This is available for OIE orgs if the org has users that have enrolled with Okta Verify after the org started using OIE. |
  name: UserFactor
  x-displayName: User Factors
- description: The User Types API provides operations to manage User Types.
  name: UserType
  x-displayName: User Types
paths:
  /.well-known/app-authenticator-configuration:
    get:
      description: "Retrieves the well-known app authenticator configuration. Includes\
        \ an app authenticator's settings, supported methods, and other details."
      operationId: getWellKnownAppAuthenticatorConfiguration
      parameters:
      - description: Filters app authenticator configurations by `oauthClientId`
        explode: true
        in: query
        name: oauthClientId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                AuthenticatorConfiguration:
                  $ref: '#/components/examples/WellKnownAppAuthenticatorConfigurationCustomApp'
              schema:
                items:
                  $ref: '#/components/schemas/WellKnownAppAuthenticatorConfiguration'
                type: array
          description: Success
        "400":
          content:
            application/json:
              examples:
                MissingRequiredParameter:
                  $ref: '#/components/examples/ErrorMissingRequiredParameter'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security: []
      summary: Retrieve the Well-Known App Authenticator Configuration
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /.well-known/okta-organization:
    get:
      description: "Retrieves the well-known org metadata, which includes the id,\
        \ configured custom domains, authentication pipeline, and various other org\
        \ settings"
      operationId: getWellknownOrgMetadata
      responses:
        "200":
          content:
            application/json:
              examples:
                Identity Engine Org with Custom Domain:
                  $ref: '#/components/examples/WellKnownOrgMetadataResponseCustomUrlOie'
                Classic Org:
                  $ref: '#/components/examples/WellKnownOrgMetadataResponseClassic'
              schema:
                $ref: '#/components/schemas/WellKnownOrgMetadata'
          description: Success
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security: []
      summary: Retrieve the Well-Known Org Metadata
      tags:
      - OrgSetting
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /.well-known/ssf-configuration:
    get:
      description: "Retrieves SSF Transmitter configuration metadata. This includes\
        \ all supported endpoints and key information about certain properties of\
        \ the Okta org as the transmitter, such as `delivery_methods_supported`, `issuer`,\
        \ and `jwks_uri`."
      operationId: getWellknownSsfMetadata
      responses:
        "200":
          content:
            application/json:
              examples:
                wellKnownSSFMetadataExample:
                  $ref: '#/components/examples/wellKnownSSFMetadataExample'
              schema:
                $ref: '#/components/schemas/WellKnownSSFMetadata'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security: []
      summary: Retrieve the SSF Transmitter metadata
      tags:
      - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/agentPools:
    get:
      description: Lists all agent pools with pagination support
      operationId: listAgentPools
      parameters:
      - description: Maximum number of AgentPools being returned
        explode: true
        in: query
        name: limitPerPoolType
        required: false
        schema:
          default: 5
          type: integer
        style: form
      - description: Agent type to search for
        explode: true
        in: query
        name: poolType
        required: false
        schema:
          $ref: '#/components/schemas/AgentType'
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentPool'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.read
      summary: List all Agent Pools
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates:
    get:
      description: Lists all agent pool updates
      operationId: listAgentPoolsUpdates
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Scope the list only to scheduled or ad-hoc updates. If the parameter
          is not provided we will return the whole list of updates.
        explode: true
        in: query
        name: scheduled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentPoolUpdate'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.read
      summary: List all Agent Pool updates
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Creates an Agent pool update \\n For user flow 2 manual update,\
        \ starts the update immediately. \\n For user flow 3, schedules the update\
        \ based on the configured update window and delay."
      operationId: createAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Create an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/settings:
    get:
      description: Retrieves the current state of the agent pool update instance settings
      operationId: getAgentPoolsUpdateSettings
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.read
      summary: Retrieve an Agent Pool update's settings
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates an agent pool update settings
      operationId: updateAgentPoolsUpdateSettings
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateSetting'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
          description: Updated
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Update an Agent Pool update settings
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}:
    delete:
      description: Deletes Agent pool update
      operationId: deleteAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Delete an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves Agent pool update from updateId
      operationId: getAgentPoolsUpdateInstance
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.read
      summary: Retrieve an Agent Pool update by id
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates Agent pool update and return latest agent pool update
      operationId: updateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Updated
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Update an Agent Pool update by id
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:
    post:
      description: Activates scheduled Agent pool update
      operationId: activateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Activated
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Activate an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:
    post:
      description: Deactivates scheduled Agent pool update
      operationId: deactivateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Deactivated
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Deactivate an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:
    post:
      description: Pauses running or queued Agent pool update
      operationId: pauseAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Paused
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Pause an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:
    post:
      description: Resumes running or queued Agent pool update
      operationId: resumeAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Resumed
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Resume an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:
    post:
      description: Retries Agent pool update
      operationId: retryAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Retried
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Retry an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:
    post:
      description: Stops Agent pool update
      operationId: stopAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Stopped
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.agentPools.manage
      summary: Stop an Agent Pool update
      tags:
      - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/api-tokens:
    get:
      description: Lists all the metadata of the active API tokens
      operationId: listApiTokens
      responses:
        "200":
          content:
            application/json:
              examples:
                List Tokens:
                  $ref: '#/components/examples/ApiTokenListMetadataResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ApiToken'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apiTokens.read
      summary: List all API Token Metadata
      tags:
      - ApiToken
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/api-tokens/current:
    delete:
      description: Revokes the API token provided in the Authorization header
      operationId: revokeCurrentApiToken
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      summary: Revoke the Current API Token
      tags:
      - ApiToken
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/api-tokens/{apiTokenId}:
    delete:
      description: Revokes an API token by `apiTokenId`
      operationId: revokeApiToken
      parameters:
      - description: id of the API Token
        explode: false
        in: path
        name: apiTokenId
        required: true
        schema:
          example: 00Tabcdefg1234567890
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apiTokens.manage
      summary: Revoke an API Token
      tags:
      - ApiToken
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves the metadata for an active API token by `apiTokenId`
      operationId: getApiToken
      parameters:
      - description: id of the API Token
        explode: false
        in: path
        name: apiTokenId
        required: true
        schema:
          example: 00Tabcdefg1234567890
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/ApiTokenMetadataResponse'
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apiTokens.read
      summary: Retrieve an API Token's Metadata
      tags:
      - ApiToken
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Upserts an API Token Network Condition by `apiTokenId`
      operationId: upsertApiToken
      parameters:
      - description: id of the API Token
        explode: false
        in: path
        name: apiTokenId
        required: true
        schema:
          example: 00Tabcdefg1234567890
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: api_token_name
              clientName: client_name
              userId: 00uabcdefg1234567890
              network:
                connection: ANYWHERE
              created: 2021-11-09T20:38:10.000Z
            schema:
              $ref: '#/components/schemas/ApiTokenUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/ApiTokenMetadataResponse'
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apiTokens.manage
      summary: Upsert an API Token Network Condition
      tags:
      - ApiToken
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: true
  /api/v1/apps:
    get:
      description: Lists all applications with pagination. A subset of apps can be
        returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: "Filters apps by status, user.id, group.id or credentials.signing.kid\
          \ expression"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |-
          An optional parameter used for link expansion to embed more resources in the response.
          Only supports `expand=user/{userId}` and must be used with the `user.id eq "{userId}"` filter query for the same user.
          Returns the assigned [Application User](/openapi/okta-management/management/tag/ApplicationUsers/) in the `_embedded` property.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: "user/{userId}"
          type: string
        style: form
      - explode: true
        in: query
        name: includeNonDeleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Applications
      tags:
      - Application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new application to your Okta organization
      operationId: createApplication
      parameters:
      - description: Executes activation lifecycle operation when creating the app
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: header
        name: OktaAccessGateway-Agent
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listApplications_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Create an Application
      tags:
      - Application
      x-codegen-request-body-name: application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/google/{appId}/oauth2/callback: {}
  /api/v1/apps/office365/{appId}/oauth2/callback: {}
  /api/v1/apps/{appId}:
    delete:
      description: Deletes an inactive application
      operationId: deleteApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Delete an Application
      tags:
      - Application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an application from your Okta organization by `id`
      operationId: getApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve an Application
      tags:
      - Application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces an application
      operationId: replaceApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listApplications_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Replace an Application
      tags:
      - Application
      x-codegen-request-body-name: application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/connections/default:
    get:
      description: Retrieves the default Provisioning Connection for an app
      operationId: getDefaultProvisioningConnectionForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ProvisioningConnectionTokenZscalerEx:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseWithProfileZscalerEx'
                ProvisioningConnectionTokenOrg2OrgEx:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseWithProfileOrg2OrgEx'
                ProvisioningConnectionOauthO365Ex:
                  $ref: '#/components/examples/ProvisioningConnectionOauthResponseEx'
              schema:
                $ref: '#/components/schemas/ProvisioningConnectionResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve the default Provisioning Connection
      tags:
      - ApplicationConnections
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates the default Provisioning Connection for an app
      operationId: updateDefaultProvisioningConnectionForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: Activates the Provisioning Connection
        explode: true
        in: query
        name: activate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              ProvisioningConnectionTokenZscalerEx:
                $ref: '#/components/examples/ProvisioningConnectionTokenRequestEx'
              ProvisioningConnectionTokenOrg2OrgEx:
                $ref: '#/components/examples/ProvisioningConnectionTokenOrg2OrgRequestEx'
              ProvisioningConnectionOauthO365Ex:
                $ref: '#/components/examples/ProvisioningConnectionOauthO365RequestEx'
            schema:
              $ref: '#/components/schemas/updateDefaultProvisioningConnectionForApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnectionResponse'
          description: OK
        "201":
          content:
            application/json:
              examples:
                ProvisioningConnectionTokenZscalerEx:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseWithProfileZscalerEx'
                ProvisioningConnectionTokenOrg2OrgEx:
                  $ref: '#/components/examples/ProvisioningConnectionTokenResponseWithProfileOrg2OrgEx'
                ProvisioningConnectionOauthO365Ex:
                  $ref: '#/components/examples/ProvisioningConnectionOauthResponseEx'
              schema:
                $ref: '#/components/schemas/ProvisioningConnectionResponse'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Update the default Provisioning Connection
      tags:
      - ApplicationConnections
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    post:
      description: Activates the default Provisioning Connection for an app
      operationId: activateDefaultProvisioningConnectionForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Activate the default Provisioning Connection
      tags:
      - ApplicationConnections
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    post:
      description: Deactivates the default Provisioning Connection for an app
      operationId: deactivateDefaultProvisioningConnectionForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Deactivate the default Provisioning Connection
      tags:
      - ApplicationConnections
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/csrs:
    get:
      description: Lists all Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Csr'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Certificate Signing Requests
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Generates a new key pair and returns the Certificate Signing Request
        for it
      operationId: generateCsrForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Generate a Certificate Signing Request
      tags:
      - ApplicationCredentials
      x-codegen-request-body-name: metadata
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    delete:
      description: Revokes a certificate signing request and deletes the key pair
        from the application
      operationId: revokeCsrFromApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of the CSR'
        explode: false
        in: path
        name: csrId
        required: true
        schema:
          example: fd7x1h7uTcZFx22rU1f7
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Revoke a Certificate Signing Request
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a certificate signing request for the app by `id`
      operationId: getCsrForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of the CSR'
        explode: false
        in: path
        name: csrId
        required: true
        schema:
          example: fd7x1h7uTcZFx22rU1f7
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve a Certificate Signing Request
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      description: Publishes a certificate signing request for the app with a signed
        X.509 certificate and adds it into the application key credentials
      operationId: publishCsrFromApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of the CSR'
        explode: false
        in: path
        name: csrId
        required: true
        schema:
          example: fd7x1h7uTcZFx22rU1f7
          type: string
        style: simple
      requestBody:
        content:
          application/x-x509-ca-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryCerCert
          application/pkix-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryDerCert
          application/x-pem-file:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryPemCert
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Publish a Certificate Signing Request
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/keys:
    get:
      description: Lists all key credentials for an application
      operationId: listApplicationKeys
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Key Credentials
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - explode: true
        in: query
        name: validityYears
        required: false
        schema:
          type: integer
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Generate a Key Credential
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      description: Retrieves a specific application key credential by kid
      operationId: getApplicationKey
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: ID of the Key Credential for the application
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: sjP9eiETijYz110VkhHN
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve a Key Credential
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an application key credential from
        a source application to target application.
      operationId: cloneApplicationKey
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: ID of the Key Credential for the application
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: sjP9eiETijYz110VkhHN
          type: string
        style: simple
      - description: Unique key of the target Application
        explode: true
        in: query
        name: targetAid
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Clone a Key Credential
      tags:
      - ApplicationCredentials
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/features:
    get:
      description: |
        Lists all features for an application
        > **Note:** This request returns an error if provisioning isn't enabled for the application.
        > To set up provisioning, see [Update the default Provisioning Connection](/openapi/okta-management/management/tag/ApplicationConnections/#tag/ApplicationConnections/operation/updateDefaultProvisioningConnectionForApplication).
      operationId: listFeaturesForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ListAppFeatureResponse:
                  $ref: '#/components/examples/AppFeatureListResponseEx'
              schema:
                items:
                  $ref: '#/components/schemas/listFeaturesForApplication_200_response_inner'
                type: array
          description: Success
        "400":
          content:
            application/json:
              examples:
                ListAppFeatureAPIValidationFailed:
                  $ref: '#/components/examples/ErrorAppFeatureAPIValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Features
      tags:
      - ApplicationFeatures
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/features/{featureName}:
    get:
      description: Retrieves a Feature object for an application
      operationId: getFeatureForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: Name of the Feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationFeatureType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                AppFeatureResponse:
                  $ref: '#/components/examples/AppFeatureResponseEx'
              schema:
                $ref: '#/components/schemas/listFeaturesForApplication_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve a Feature
      tags:
      - ApplicationFeatures
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |
        Updates a Feature object for an application
        > **Note:** This endpoint supports partial updates.
      operationId: updateFeatureForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: Name of the Feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationFeatureType'
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              UpdateAppFeatureEx:
                $ref: '#/components/examples/UpdateAppFeatureRequestEx'
              UpdateInboundProvisioningFeatureEx:
                $ref: '#/components/examples/UpdateInboundProvisioningFeatureRequestEx'
            schema:
              $ref: '#/components/schemas/updateFeatureForApplication_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                UpdateAppFeatureEx:
                  $ref: '#/components/examples/UpdateAppFeatureResponseEx'
                UpdateInboundProvisioningFeatureEx:
                  $ref: '#/components/examples/UpdateInboundProvisioningFeatureResponseEx'
              schema:
                $ref: '#/components/schemas/listFeaturesForApplication_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Update a Feature
      tags:
      - ApplicationFeatures
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/grants:
    get:
      description: Lists all scope consent Grants for the app
      operationId: listScopeConsentGrants
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: "An optional parameter to return scope details in the `_embedded`\
          \ property. Valid value: `scope`"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: scope
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListAppGrantsExample:
                  $ref: '#/components/examples/ListAppGrantsEx'
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.appGrants.read
      summary: List all app Grants
      tags:
      - ApplicationGrants
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Grants consent for the app to request an OAuth 2.0 Okta scope
      operationId: grantConsentToScope
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AppGrantsExample:
                $ref: '#/components/examples/AppGrantsPostEx'
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                AppGrantsExample:
                  $ref: '#/components/examples/AppGrantsEx'
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.appGrants.manage
      summary: Grant consent to scope
      tags:
      - ApplicationGrants
      x-codegen-request-body-name: oAuth2ScopeConsentGrant
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/grants/{grantId}:
    delete:
      description: Revokes permission for the app to grant the given scope
      operationId: revokeScopeConsentGrant
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: Grant ID
        explode: false
        in: path
        name: grantId
        required: true
        schema:
          example: iJoqkwx50mrgX4T9LcaH
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.appGrants.manage
      summary: Revoke an app Grant
      tags:
      - ApplicationGrants
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a single scope consent Grant object for the app
      operationId: getScopeConsentGrant
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: Grant ID
        explode: false
        in: path
        name: grantId
        required: true
        schema:
          example: iJoqkwx50mrgX4T9LcaH
          type: string
        style: simple
      - description: "An optional parameter to return scope details in the `_embedded`\
          \ property. Valid value: `scope`"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: scope
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                AppGrantsExample:
                  $ref: '#/components/examples/AppGrantsEx'
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.appGrants.read
      summary: Retrieve an app Grant
      tags:
      - ApplicationGrants
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/groups:
    get:
      description: Lists all app group assignments
      operationId: listApplicationGroupAssignments
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: "Specifies a filter for a list of assigned groups returned based\
          \ on their names. The value of `q` is matched against the group `name`.\
          \ \nThis filter only supports the `startsWith` operation that matches the\
          \ `q` string against the beginning of the [Group name](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!c=200&path=profile/name&t=response)."
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: test
          type: string
        style: form
      - description: "Specifies the pagination cursor for the `next` page of results.\
          \ Treat this as an opaque value obtained through the next link relationship.\
          \ See [Pagination](https://developer.okta.com/docs/api/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          example: "16275000448691"
          type: string
        style: form
      - description: |-
          Specifies the number of objects to return per page.
          If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).
          See [Pagination](/#pagination).
        examples:
          min:
            summary: Minimum limit value
            value: 20
          hundred:
            summary: Sample limit value
            value: 100
          max:
            summary: Maximum limit value
            value: 200
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maximum: 200
          minimum: 20
          type: integer
        style: form
      - description: "An optional query parameter to return the corresponding assigned\
          \ [Group](/openapi/okta-management/management/tag/Group/) or \nthe group\
          \ assignment metadata details in the `_embedded` property. "
        examples:
          group:
            summary: Embedded assigned Group
            value: group
          metadata:
            summary: Embedded group assignment metadata
            value: metadata
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: metadata
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                listGroupAssignmentsResponseExample:
                  $ref: '#/components/examples/GroupAssignmentExListResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Application Groups
      tags:
      - ApplicationGroups
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/groups/{groupId}:
    delete:
      description: Unassigns a Group from an app
      operationId: unassignApplicationFromGroup
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Unassign an Application Group
      tags:
      - ApplicationGroups
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an app group assignment
      operationId: getApplicationGroupAssignment
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: "An optional query parameter to return the corresponding assigned\
          \ [Group](/openapi/okta-management/management/tag/Group/) or \nthe group\
          \ assignment metadata details in the `_embedded` property. "
        examples:
          group:
            summary: Embedded assigned Group
            value: group
          metadata:
            summary: Embedded group assignment metadata
            value: metadata
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: group
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                getGroupAssignmentResponseExample:
                  $ref: '#/components/examples/EmbeddedGroupAssignmentSampleResponse'
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve an Application Group
      tags:
      - ApplicationGroups
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    patch:
      description: Updates a group assignment to an app
      operationId: updateGroupAssignmentToApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              groupAssignmentPatchRequetExample:
                $ref: '#/components/examples/GroupAssignmentPatchRequestExample'
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                patchGroupAssignmentResponseExample:
                  $ref: '#/components/examples/GroupAssignmentPatchResponseExample'
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Update an Application Group
      tags:
      - ApplicationGroups
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: "Assigns a [Group](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/)\
        \ to an app, which in turn assigns the app to each [User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/)\
        \ that belongs to the group. \nThe resulting Application User [scope](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/#tag/ApplicationUsers/operation/listApplicationUsers!c=200&path=scope&t=response)\
        \ is `GROUP` since the assignment was from the group membership."
      operationId: assignGroupToApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              putGroupAssignmentRequestExample:
                $ref: '#/components/examples/GroupAssignmentPutRequestExample'
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                putGroupAssignmentResponseExample:
                  $ref: '#/components/examples/GroupAssignmentPutResponseExample'
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Assign an Application Group
      tags:
      - ApplicationGroups
      x-codegen-request-body-name: applicationGroupAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      description: Activates an inactive application
      operationId: activateApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Activate an Application
      tags:
      - Application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      description: Deactivates an active application
      operationId: deactivateApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Deactivate an Application
      tags:
      - Application
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/logo:
    post:
      description: |
        Uploads a logo for the app instance.
        If the app already has a logo, this operation replaces the previous logo.

        The logo is visible in the Admin Console as an icon for your app instance.
        If you have one `appLink` object configured, this logo also appears in the End-User Dashboard as an icon for your app.
        > **Note:** If you have multiple `appLink` objects, use the Admin Console to add logos for each app link.
        > You can't use the API to add logos for multiple app links.
      operationId: uploadApplicationLogo
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadApplicationLogo_request'
      responses:
        "201":
          description: Content Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Upload an application Logo
      tags:
      - ApplicationLogos
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/policies/{policyId}:
    put:
      description: |-
        Assigns an application to an [authentication policy](/openapi/okta-management/management/tag/Policy/), identified by `policyId`.
        If the application was previously assigned to another policy, this operation replaces that assignment with the updated policy identified by `policyId`.

        > **Note:** When you [merge duplicate authentication policies](https://help.okta.com/okta_help.htm?type=oie&id=ext-merge-auth-policies),
        the policy and mapping CRUD operations may be unavailable during the consolidation. When the consolidation is complete, you receive an email.
      operationId: assignApplicationPolicy
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Assign an application to a Policy
      tags:
      - ApplicationPolicies
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/apps/{appId}/sso/saml/metadata:
    get:
      description: Previews the SSO SAML metadata for an application
      operationId: previewSAMLmetadataForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            text/xml:
              examples:
                previewSAML:
                  summary: SAML metadata example
                  value: |
                    <?xml version="1.0" encoding="UTF-8"?>
                      <md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="exk39sivhuytV2D8H0h7">
                        <md:IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
                            <md:KeyDescriptor use="signing">
                                <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
                                    <ds:X509Data>
                                        <ds:X509Certificate>MIIDqDCCApCgAwIBAgIGAVGNO4qeMA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEG
                    A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU
                    MBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJ
                    ARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODUwMDhaFw0xNzEyMTAxODUxMDdaMIGUMQswCQYD
                    VQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsG
                    A1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEc
                    MBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
                    ggEBALAakG48bgcTWHdwmVLHig0mkiRejxIVm3wbzrNSJcBruTq2zCYZ1rGfVxTYON8kJqvkXPmv
                    kzWKhpEkvhubL+mx29XpXY0AsNIfgcm5xIV56yhXSvlMdqzGo3ciRwoACaF+ClNLxmXK9UTZD89B
                    bVVGCG5AEvja0eCQ0GYsO5i9aSI5aTroab8Aew31PuWl/RGQWmjVy8+7P4wwkKKJNKCpxMYDlhfa
                    WRp0zwUSbUCO0qEyeAYdZx6CLES4FGrDi/7D6G+ewWC+kbz1tL1XpF2Dcg3+IOlHrV6VWzz3rG39
                    v9zFIncjvoQJFDGWhpqGqcmXvgH0Ze3SVcVF01T+bK0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA
                    AHmnSZ4imjNrIf9wxfQIcqHXEBoJ+oJtd59cw1Ur/YQY9pKXxoglqCQ54ZmlIf4GghlcZhslLO+m
                    NdkQVwSmWMh6KLxVM18/xAkq8zyKbMbvQnTjFB7x45bgokwbjhivWqrB5LYHHCVN7k/8mKlS4eCK
                    Ci6RGEmErjojr4QN2xV0qAqP6CcGANgpepsQJCzlWucMFKAh0x9Kl8fmiQodfyLXyrebYsVnLrMf
                    jxE1b6dg4jKvv975tf5wreQSYZ7m//g3/+NnuDKkN/03HqhV7hTNi1fyctXk8I5Nwgyr+pT5LT2k
                    YoEdncuy+GQGzE9yLOhC4HNfHQXpqp2tMPdRlw==</ds:X509Certificate>
                                    </ds:X509Data>
                                </ds:KeyInfo>
                            </md:KeyDescriptor>
                            <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>
                            <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>
                            <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://{yourOktaDomain}/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"/>
                            <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://{yourOktaDomain}/app/sample-app/exk39sivhuytV2D8H0h7/sso/saml"/>
                        </md:IDPSSODescriptor>
                    </md:EntityDescriptor>
              schema:
                description: SAML metadata in XML
                type: string
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Preview the application SAML metadata
      tags:
      - ApplicationSSO
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/tokens:
    delete:
      description: "Revokes all OAuth 2.0 refresh tokens for the specified app. Any\
        \ access tokens issued with these refresh tokens are also revoked, but access\
        \ tokens issued without a refresh token aren't affected."
      operationId: revokeOAuth2TokensForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Revoke all application Tokens
      tags:
      - ApplicationTokens
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: |
        Lists all refresh tokens for an app

        > **Note:** The results are [paginated](/#pagination) according to the `limit` parameter.
        > If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).
      operationId: listOAuth2TokensForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: "An optional parameter to return scope details in the `_embedded`\
          \ property. Valid value: `scope`"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: scope
          type: string
        style: form
      - description: "Specifies the pagination cursor for the next page of results.\
          \ Treat this as an opaque value obtained through the next link relationship.\
          \ See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          example: "16275000448691"
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                getOAuth2TokenForApplicationListExample:
                  $ref: '#/components/examples/OAuth2RefreshTokenResponseListEx'
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all application refresh Tokens
      tags:
      - ApplicationTokens
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified token for the specified app
      operationId: revokeOAuth2TokenForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Revoke an application Token
      tags:
      - ApplicationTokens
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a refresh token for the specified app
      operationId: getOAuth2TokenForApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      - description: "An optional parameter to return scope details in the `_embedded`\
          \ property. Valid value: `scope`"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: scope
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                getOAuth2TokenForApplicationExample:
                  $ref: '#/components/examples/OAuth2RefreshTokenResponseEx'
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve an application Token
      tags:
      - ApplicationTokens
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/users:
    get:
      description: Lists all assigned users for an app
      operationId: listApplicationUsers
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: "Specifies the pagination cursor for the next page of results.\
          \ Treat this as an opaque value obtained through the next link relationship.\
          \ See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          example: "16275000448691"
          type: string
        style: form
      - description: |
          Specifies the number of objects to return per page.
          If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).
          See [Pagination](/#pagination).
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Specifies a filter for the list of Application Users returned based on their profile attributes.
          The value of `q` is matched against the beginning of the following profile attributes: `userName`, `firstName`, `lastName`, and `email`.
          This filter only supports the `startsWith` operation that matches the `q` string against the beginning of the attribute values.
          > **Note:** For OIDC apps, user profiles don't contain the `firstName` or `lastName` attributes. Therefore, the query only matches against the `userName` or `email` attributes.
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: sam
          type: string
        style: form
      - description: |-
          An optional query parameter to return the corresponding [User](/openapi/okta-management/management/tag/User/) object in the `_embedded` property.
          Valid value: `user`
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: user
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListAppUsersExample:
                  $ref: '#/components/examples/AppUserListEx'
              schema:
                items:
                  $ref: '#/components/schemas/AppUser'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: List all Application Users
      tags:
      - ApplicationUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Assigns a user to an app for:

          * SSO only<br>
            Assignments to SSO apps typically don't include a user profile.
            However, if your SSO app requires a profile but doesn't have provisioning enabled, you can add profile attributes in the request body.

          * SSO and provisioning<br>
            Assignments to SSO and provisioning apps typically include credentials and an app-specific profile.
            Profile mappings defined for the app are applied first before applying any profile properties that are specified in the request body.
            > **Notes:**
            > * When Universal Directory is enabled, you can only specify profile properties that aren't defined in profile mappings.
            > * Omit mapped properties during assignment to minimize assignment errors.
      operationId: assignUserToApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AppUserSSOEx:
                $ref: '#/components/examples/AppUserAssignSSORequest'
              AppUserProvEx:
                $ref: '#/components/examples/AppUserAssignProvRequest'
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                AppUserSSOEx:
                  $ref: '#/components/examples/AppUserSSOResponse'
                AppUserProvEx:
                  $ref: '#/components/examples/AppUserProvResponse'
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AppUserProvEx:
                  $ref: '#/components/examples/ErrorAppUserForbiddenAction'
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Assign an Application User
      tags:
      - ApplicationUsers
      x-codegen-request-body-name: appUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appId}/users/{userId}:
    delete:
      description: |-
        Unassigns a user from an app

        For directories like Active Directory and LDAP, they act as the owner of the user's credential with Okta delegating authentication (DelAuth) to that directory.
        If this request is successful for a user when DelAuth is enabled, then the user is in a state with no password. You can then reset the user's password.

        > **Important:** This is a destructive operation. You can't recover the user's app profile. If the app is enabled for provisioning and configured to deactivate users, the user is also deactivated in the target app.
      operationId: unassignUserFromApplication
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 00u13okQOVWZJGDOAUVR
          type: string
        style: simple
      - description: Sends a deactivation email to the administrator if `true`
        explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Unassign an Application User
      tags:
      - ApplicationUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a specific user assignment for a specific app
      operationId: getApplicationUser
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 00u13okQOVWZJGDOAUVR
          type: string
        style: simple
      - description: |-
          An optional query parameter to return the corresponding [User](/openapi/okta-management/management/tag/User/) object in the `_embedded` property.
          Valid value: `user`
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: user
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                GetAppUserExample:
                  $ref: '#/components/examples/AppUserProvExpandResponse'
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve an Application User
      tags:
      - ApplicationUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates the profile or credentials of a user assigned to an app
      operationId: updateApplicationUser
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 00u13okQOVWZJGDOAUVR
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AppUserUpdateCredEx:
                $ref: '#/components/examples/AppUserUpdateCredRequest'
              AppUserUpdateProfileEx:
                $ref: '#/components/examples/AppUserUpdateProfileRequest'
            schema:
              $ref: '#/components/schemas/AppUserUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                AppUserUpdateCredEx:
                  $ref: '#/components/examples/AppUserCredUpdateResponse'
                AppUserUpdateProfileEx:
                  $ref: '#/components/examples/AppUserProfUpdateResponse'
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                AppUserUpdateCredEx:
                  $ref: '#/components/examples/ErrorAppUserUpdateBadRequest'
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AppUserProvEx:
                  $ref: '#/components/examples/ErrorAppUserForbiddenAction'
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Update an Application User
      tags:
      - ApplicationUsers
      x-codegen-request-body-name: appUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/apps/{appName}/{appId}/oauth2/callback:
    post:
      description: |
        Verifies the OAuth 2.0-based connection as part of the OAuth 2.0 consent flow. The validation of the consent flow is the last step of the provisioning setup for an OAuth 2.0-based connection.
        Currently, this operation only supports `office365`,`google`, `zoomus`, and `slack` apps.
      operationId: verifyProvisioningConnectionForApplication
      parameters:
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          $ref: '#/components/schemas/OAuthProvisioningEnabledApp'
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      - explode: true
        in: query
        name: code
        required: false
        schema:
          description: Unique string associated with each authentication request
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          description: A temporary code string that the client exchanges for an access
            token
          type: string
        style: form
      responses:
        "204":
          description: No content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Verify the Provisioning Connection
      tags:
      - ApplicationConnections
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/authenticators:
    get:
      description: Lists all authenticators
      operationId: listAuthenticators
      responses:
        "200":
          content:
            application/json:
              examples:
                OrgAuthenticatorsEx:
                  $ref: '#/components/examples/AuthenticatorsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/listAuthenticators_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.read
      summary: List all Authenticators
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Creates an authenticator
      operationId: createAuthenticator
      parameters:
      - description: Whether to execute the activation lifecycle operation when Okta
          creates the authenticator
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/AuthenticatorRequestBody'
      responses:
        "200":
          content:
            application/json:
              examples:
                Duo:
                  $ref: '#/components/examples/AuthenticatorResponseDuo'
                Email:
                  $ref: '#/components/examples/AuthenticatorResponseEmail'
                Password:
                  $ref: '#/components/examples/AuthenticatorResponsePassword'
                Phone:
                  $ref: '#/components/examples/AuthenticatorResponsePhone'
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
                SecurityQuestion:
                  $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
              schema:
                $ref: '#/components/schemas/AuthenticatorBase'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Create an Authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}:
    get:
      description: Retrieves an authenticator from your Okta organization by `authenticatorId`
      operationId: getAuthenticator
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Duo:
                  $ref: '#/components/examples/AuthenticatorResponseDuo'
                Email:
                  $ref: '#/components/examples/AuthenticatorResponseEmail'
                Password:
                  $ref: '#/components/examples/AuthenticatorResponsePassword'
                Phone:
                  $ref: '#/components/examples/AuthenticatorResponsePhone'
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
                SecurityQuestion:
                  $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
              schema:
                $ref: '#/components/schemas/AuthenticatorBase'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.read
      summary: Retrieve an Authenticator
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces the properties for an Authenticator identified by `authenticatorId`
      operationId: replaceAuthenticator
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AuthenticatorRequestBody'
      responses:
        "200":
          content:
            application/json:
              examples:
                Duo:
                  $ref: '#/components/examples/AuthenticatorResponseDuo'
                Email:
                  $ref: '#/components/examples/AuthenticatorResponseEmail'
                Password:
                  $ref: '#/components/examples/AuthenticatorResponsePassword'
                Phone:
                  $ref: '#/components/examples/AuthenticatorResponsePhone'
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
                SecurityQuestion:
                  $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
              schema:
                $ref: '#/components/schemas/AuthenticatorBase'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Replace an Authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    post:
      description: Activates an authenticator by `authenticatorId`
      operationId: activateAuthenticator
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Duo:
                  $ref: '#/components/examples/AuthenticatorResponseDuo'
                Email:
                  $ref: '#/components/examples/AuthenticatorResponseEmail'
                Password:
                  $ref: '#/components/examples/AuthenticatorResponsePassword'
                Phone:
                  $ref: '#/components/examples/AuthenticatorResponsePhone'
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
                SecurityQuestion:
                  $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
              schema:
                $ref: '#/components/schemas/AuthenticatorBase'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Activate an Authenticator
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    post:
      description: Deactivates an authenticator by `authenticatorId`
      operationId: deactivateAuthenticator
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorResponseInactiveWebAuthn'
              schema:
                $ref: '#/components/schemas/AuthenticatorBase'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Deactivate an Authenticator
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/methods:
    get:
      description: |-
        Lists all Methods of an Authenticator identified by `authenticatorId`
        > **Note:** <x-lifecycle class="ea"></x-lifecycle>
        > The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.
        > This feature has several limitations when enrolling a security key:
        > - Enrollment is currently unsupported on Firefox.
        > - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
        > - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      operationId: listAuthenticatorMethods
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Phone:
                  $ref: '#/components/examples/AuthenticatorMethodPhone'
                WebAuthn:
                  $ref: '#/components/examples/AuthenticatorMethodWebauth'
              schema:
                items:
                  $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.read
      summary: List all Methods of an Authenticator
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}:
    get:
      description: |-
        Retrieves a Method identified by `methodType` of an Authenticator identified by `authenticatorId`
        > **Note:** <x-lifecycle class="ea"></x-lifecycle>
        > The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.
        > This feature has several limitations when enrolling a security key:
        > - Enrollment is currently unsupported on Firefox.
        > - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
        > - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      operationId: getAuthenticatorMethod
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      - description: Type of authenticator method
        explode: false
        in: path
        name: methodType
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticatorMethodType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sms:
                  $ref: '#/components/examples/AuthenticatorMethodSms'
                voice:
                  $ref: '#/components/examples/AuthenticatorMethodInactiveVoice'
                webAuthn:
                  $ref: '#/components/examples/AuthenticatorMethodWebauth'
              schema:
                $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.read
      summary: Retrieve an Authenticator Method
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: |-
        Replaces a Method of `methodType` for an Authenticator identified by `authenticatorId`
        > **Note:** <x-lifecycle class="ea"></x-lifecycle>
        > The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.
        > This feature has several limitations when enrolling a security key:
        > - Enrollment is currently unsupported on Firefox.
        > - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
        > - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      operationId: replaceAuthenticatorMethod
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      - description: Type of authenticator method
        explode: false
        in: path
        name: methodType
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticatorMethodType'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
      responses:
        "200":
          content:
            application/json:
              examples:
                sms:
                  $ref: '#/components/examples/AuthenticatorMethodSms'
                voice:
                  $ref: '#/components/examples/AuthenticatorMethodInactiveVoice'
                webAuthn:
                  $ref: '#/components/examples/AuthenticatorMethodWebauth'
              schema:
                $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Replace an Authenticator Method
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}/lifecycle/activate:
    post:
      description: |-
        Activates a Method for an Authenticator identified by `authenticatorId` and `methodType`
        > **Note:** <x-lifecycle class="ea"></x-lifecycle>
        > The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.
        > This feature has several limitations when enrolling a security key:
        > - Enrollment is currently unsupported on Firefox.
        > - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
        > - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      operationId: activateAuthenticatorMethod
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      - description: Type of authenticator method
        explode: false
        in: path
        name: methodType
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticatorMethodType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sms:
                  $ref: '#/components/examples/AuthenticatorMethodSms'
                webAuthn:
                  $ref: '#/components/examples/AuthenticatorMethodWebauth'
              schema:
                $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Activate an Authenticator Method
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authenticators/{authenticatorId}/methods/{methodType}/lifecycle/deactivate:
    post:
      description: |-
        Deactivates a Method for an Authenticator identified by `authenticatorId` and `methodType`
        > **Note:** <x-lifecycle class="ea"></x-lifecycle>
        > The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.
        > This feature has several limitations when enrolling a security key:
        > - Enrollment is currently unsupported on Firefox.
        > - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
        > - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      operationId: deactivateAuthenticatorMethod
      parameters:
      - description: '`id` of the Authenticator'
        explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          example: aut1nd8PQhGcQtSxB0g4
          type: string
        style: simple
      - description: Type of authenticator method
        explode: false
        in: path
        name: methodType
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticatorMethodType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                voice:
                  $ref: '#/components/examples/AuthenticatorMethodInactiveVoice'
              schema:
                $ref: '#/components/schemas/listAuthenticatorMethods_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authenticators.manage
      summary: Deactivate an Authenticator Method
      tags:
      - Authenticator
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/authorizationServers:
    get:
      description: Lists all custom authorization servers in the org
      operationId: listAuthorizationServers
      parameters:
      - description: Searches the `name` and `audiences` of authorization servers
          for matching values
        example: customasone
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the number of authorization server results on a page.\
          \ Maximum value: 200"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: Specifies the pagination cursor for the next page of authorization
          servers. Treat as an opaque value and obtain through the next link relationship.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListAuthServers:
                  $ref: '#/components/examples/ListAuthServersResponse'
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Authorization Servers
      tags:
      - AuthorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates an authorization server
      operationId: createAuthorizationServer
      requestBody:
        content:
          application/json:
            examples:
              CreateAuthServer:
                $ref: '#/components/examples/CreateAuthServerBody'
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateAuthServer:
                  $ref: '#/components/examples/CreateAuthServerResponse'
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create an Authorization Server
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: authorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}:
    delete:
      description: Deletes an authorization server
      operationId: deleteAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete an Authorization Server
      tags:
      - AuthorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves an authorization server
      operationId: getAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveAuthServer:
                  $ref: '#/components/examples/RetrieveAuthServerResponse'
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve an Authorization Server
      tags:
      - AuthorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    put:
      description: Replaces an authorization server
      operationId: replaceAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ReplaceAuthServer:
                $ref: '#/components/examples/ReplaceAuthServerBody'
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ReplaceAuthServer:
                  $ref: '#/components/examples/ReplaceAuthServerResponse'
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Replace an Authorization Server
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: authorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/associatedServers:
    get:
      description: Lists all associated Authorization Servers by trusted type for
        the given `authServerId`
      operationId: listAssociatedServersByTrustedType
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: Searches trusted authorization servers when `true` or searches
          untrusted authorization servers when `false`
        explode: true
        in: query
        name: trusted
        required: false
        schema:
          type: boolean
        style: form
      - description: Searches for the name or audience of the associated authorization
          servers
        example: customasone
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: Specifies the pagination cursor for the next page of the associated
          authorization servers
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListAssocAuthServer:
                  $ref: '#/components/examples/ListAssocAuthServerResponse'
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all associated Authorization Servers
      tags:
      - AuthorizationServerAssoc
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates trusted relationships between the given authorization server
        and other authorization servers
      operationId: createAssociatedServers
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              CreateAssocAuthServer:
                $ref: '#/components/examples/CreateAssocAuthServerBody'
            schema:
              $ref: '#/components/schemas/AssociatedServerMediated'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateAssocAuthServer:
                  $ref: '#/components/examples/CreateAssocAuthServerResponse'
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
                type: array
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create an associated Authorization Server
      tags:
      - AuthorizationServerAssoc
      x-codegen-request-body-name: associatedServerMediated
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/associatedServers/{associatedServerId}:
    delete:
      description: Deletes an associated Authorization Server
      operationId: deleteAssociatedServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the associated Authorization Server'
        explode: false
        in: path
        name: associatedServerId
        required: true
        schema:
          example: aus6xt9jKPmCyn6kg0g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete an associated Authorization Server
      tags:
      - AuthorizationServerAssoc
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/claims:
    get:
      description: Lists all custom token Claims defined for a specified custom authorization
        server
      operationId: listOAuth2Claims
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ListCustomTokenClaims:
                  $ref: '#/components/examples/ListCustomTokenClaimsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Claim'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all custom token Claims
      tags:
      - AuthorizationServerClaims
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates a custom token Claim for a custom authorization server
      operationId: createOAuth2Claim
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              CreateCustomTokenClaim:
                $ref: '#/components/examples/CreateCustomTokenClaimBody'
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateCustomTokenClaim:
                  $ref: '#/components/examples/CreateCustomTokenClaimResponse'
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create a custom token Claim
      tags:
      - AuthorizationServerClaims
      x-codegen-request-body-name: oAuth2Claim
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    delete:
      description: Deletes a custom token Claim specified by the `claimId`
      operationId: deleteOAuth2Claim
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Claim'
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          example: hNJ3Uk76xLagWkGx5W3N
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete a custom token Claim
      tags:
      - AuthorizationServerClaims
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves a custom token Claim by the specified `claimId`
      operationId: getOAuth2Claim
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Claim'
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          example: hNJ3Uk76xLagWkGx5W3N
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveCustomTokenClaim:
                  $ref: '#/components/examples/RetrieveCustomTokenClaimResponse'
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve a custom token Claim
      tags:
      - AuthorizationServerClaims
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    put:
      description: Replaces a custom token Claim specified by the `claimId`
      operationId: replaceOAuth2Claim
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Claim'
        explode: false
        in: path
        name: claimId
        required: true
        schema:
          example: hNJ3Uk76xLagWkGx5W3N
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ReplaceCustomTokenClaim:
                $ref: '#/components/examples/ReplaceCustomTokenClaimBody'
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ReplaceCustomTokenClaim:
                  $ref: '#/components/examples/ReplaceCustomTokenClaimResponse'
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Replace a custom token Claim
      tags:
      - AuthorizationServerClaims
      x-codegen-request-body-name: oAuth2Claim
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/clients:
    get:
      description: Lists all Client resources for which the specified authorization
        server has tokens
      operationId: listOAuth2ClientsForAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ListClients:
                  $ref: '#/components/examples/ListClientsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Client resources for an authorization server
      tags:
      - AuthorizationServerClients
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    delete:
      description: Revokes all refresh tokens for a Client
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Revoke all refresh tokens for a Client
      tags:
      - AuthorizationServerClients
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Lists all refresh tokens issued by an authorization server for
        a specific Client
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: "Valid value: `scope`. If specified, scope details are included\
          \ in the `_embedded` attribute."
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of tokens
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of tokens to return (maximum 200)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListRefreshTokenClients:
                  $ref: '#/components/examples/ListRefreshTokensClientsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all refresh tokens for a Client
      tags:
      - AuthorizationServerClients
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Revokes a refresh token for a Client
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Revoke a refresh token for a Client
      tags:
      - AuthorizationServerClients
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves a refresh token for a Client
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      - description: "Valid value: `scope`. If specified, scope details are included\
          \ in the `_embedded` attribute."
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveRefreshTokenClient:
                  $ref: '#/components/examples/RetrieveRefreshTokenClientResponse'
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve a refresh token for a Client
      tags:
      - AuthorizationServerClients
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    get:
      description: Lists all credential keys
      operationId: listAuthorizationServerKeys
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerJsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Credential Keys
      tags:
      - AuthorizationServerKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    post:
      description: Rotates all credential keys
      operationId: rotateAuthorizationServerKeys
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerJsonWebKey'
                type: array
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Rotate all Credential Keys
      tags:
      - AuthorizationServerKeys
      x-codegen-request-body-name: use
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    post:
      description: Activates an authorization server
      operationId: activateAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Activate an Authorization Server
      tags:
      - AuthorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    post:
      description: Deactivates an authorization server
      operationId: deactivateAuthorizationServer
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Deactivate an Authorization Server
      tags:
      - AuthorizationServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies:
    get:
      description: Lists all policies
      operationId: listAuthorizationServerPolicies
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Policies
      tags:
      - AuthorizationServerPolicies
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates a policy
      operationId: createAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create a Policy
      tags:
      - AuthorizationServerPolicies
      x-codegen-request-body-name: policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    delete:
      description: Deletes a policy
      operationId: deleteAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete a Policy
      tags:
      - AuthorizationServerPolicies
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves a policy
      operationId: getAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve a Policy
      tags:
      - AuthorizationServerPolicies
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    put:
      description: Replaces a policy
      operationId: replaceAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Replace a Policy
      tags:
      - AuthorizationServerPolicies
      x-codegen-request-body-name: policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    post:
      description: Activates an authorization server policy
      operationId: activateAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Activate a Policy
      tags:
      - AuthorizationServerPolicies
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivates an authorization server policy
      operationId: deactivateAuthorizationServerPolicy
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Deactivate a Policy
      tags:
      - AuthorizationServerPolicies
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    get:
      description: Lists all policy rules for the specified Custom Authorization Server
        and Policy
      operationId: listAuthorizationServerPolicyRules
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Policy Rules
      tags:
      - AuthorizationServerRules
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates a policy rule for the specified Custom Authorization Server
        and Policy
      operationId: createAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create a Policy Rule
      tags:
      - AuthorizationServerRules
      x-codegen-request-body-name: policyRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Deletes a Policy Rule defined in the specified Custom Authorization
        Server and Policy
      operationId: deleteAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete a Policy Rule
      tags:
      - AuthorizationServerRules
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves a policy rule by `ruleId`
      operationId: getAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve a Policy Rule
      tags:
      - AuthorizationServerRules
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    put:
      description: Replaces the configuration of the Policy Rule defined in the specified
        Custom Authorization Server and Policy
      operationId: replaceAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Replace a Policy Rule
      tags:
      - AuthorizationServerRules
      x-codegen-request-body-name: policyRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates an authorization server policy rule
      operationId: activateAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Activate a Policy Rule
      tags:
      - AuthorizationServerRules
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates an authorization server policy rule
      operationId: deactivateAuthorizationServerPolicyRule
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Deactivate a Policy Rule
      tags:
      - AuthorizationServerRules
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/scopes:
    get:
      description: Lists all custom token scopes
      operationId: listOAuth2Scopes
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Scope'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: List all Custom Token Scopes
      tags:
      - AuthorizationServerScopes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    post:
      description: Creates a custom token scope
      operationId: createOAuth2Scope
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Create a Custom Token Scope
      tags:
      - AuthorizationServerScopes
      x-codegen-request-body-name: oAuth2Scope
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    delete:
      description: Deletes a custom token scope
      operationId: deleteOAuth2Scope
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Scope'
        explode: false
        in: path
        name: scopeId
        required: true
        schema:
          example: 0TMRpCWXRKFjP7HiPFNM
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Delete a Custom Token Scope
      tags:
      - AuthorizationServerScopes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    get:
      description: Retrieves a custom token scope
      operationId: getOAuth2Scope
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Scope'
        explode: false
        in: path
        name: scopeId
        required: true
        schema:
          example: 0TMRpCWXRKFjP7HiPFNM
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.read
      summary: Retrieve a Custom Token Scope
      tags:
      - AuthorizationServerScopes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
    put:
      description: Replaces a custom token scope
      operationId: replaceOAuth2Scope
      parameters:
      - description: '`id` of the Authorization Server'
        explode: false
        in: path
        name: authServerId
        required: true
        schema:
          example: GeGRTEr7f3yu2n7grw22
          type: string
        style: simple
      - description: '`id` of Scope'
        explode: false
        in: path
        name: scopeId
        required: true
        schema:
          example: 0TMRpCWXRKFjP7HiPFNM
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.authorizationServers.manage
      summary: Replace a Custom Token Scope
      tags:
      - AuthorizationServerScopes
      x-codegen-request-body-name: oAuth2Scope
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - API Access Management
  /api/v1/behaviors:
    get:
      description: Lists all behavior detection rules with pagination support
      operationId: listBehaviorDetectionRules
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.read
      summary: List all Behavior Detection Rules
      tags:
      - Behavior
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new behavior detection rule
      operationId: createBehaviorDetectionRule
      requestBody:
        content:
          application/json:
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
            schema:
              $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/BehaviorRule'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.manage
      summary: Create a Behavior Detection Rule
      tags:
      - Behavior
      x-codegen-request-body-name: rule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/behaviors/{behaviorId}:
    delete:
      description: Deletes a Behavior Detection Rule by `behaviorId`
      operationId: deleteBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.manage
      summary: Delete a Behavior Detection Rule
      tags:
      - Behavior
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a Behavior Detection Rule by `behaviorId`
      operationId: getBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.read
      summary: Retrieve a Behavior Detection Rule
      tags:
      - Behavior
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a Behavior Detection Rule by `behaviorId`
      operationId: replaceBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
            schema:
              $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.manage
      summary: Replace a Behavior Detection Rule
      tags:
      - Behavior
      x-codegen-request-body-name: rule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/behaviors/{behaviorId}/lifecycle/activate:
    post:
      description: Activates a behavior detection rule
      operationId: activateBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.manage
      summary: Activate a Behavior Detection Rule
      tags:
      - Behavior
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/behaviors/{behaviorId}/lifecycle/deactivate:
    post:
      description: Deactivates a behavior detection rule
      operationId: deactivateBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.behaviors.manage
      summary: Deactivate a Behavior Detection Rule
      tags:
      - Behavior
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands:
    get:
      description: Lists all the brands in your org
      operationId: listBrands
      parameters:
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - themes
            - domains
            - emailDomain
            type: string
          type: array
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Searches the records for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get brands response:
                  $ref: '#/components/examples/ListBrandsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/BrandWithEmbedded'
                type: array
          description: Successfully returned the list of brands
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: List all Brands
      tags:
      - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new brand in your org
      operationId: createBrand
      requestBody:
        content:
          application/json:
            examples:
              Create brand request:
                $ref: '#/components/examples/CreateBrandRequest'
            schema:
              $ref: '#/components/schemas/CreateBrandRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Create brand response:
                  $ref: '#/components/examples/CreateBrandResponse'
              schema:
                $ref: '#/components/schemas/Brand'
          description: Successfully created the brand
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "409":
          content:
            application/json:
              examples:
                Cannot create brand with the same name:
                  $ref: '#/components/examples/ErrorCreateBrandExists'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not create the new brand because same name already exist.
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Create a Brand
      tags:
      - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}:
    delete:
      description: Deletes a brand by `brandId`
      operationId: deleteBrand
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted the brand.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot delete default brand:
                  $ref: '#/components/examples/ErrorDeleteDefaultBrand'
                Cannot delete brand associated with a domain:
                  $ref: '#/components/examples/ErrorDeleteBrandAssociatedWithDomain'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete a brand
      tags:
      - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a brand by `brandId`
      operationId: getBrand
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - themes
            - domains
            - emailDomain
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get brand response:
                  $ref: '#/components/examples/GetBrandResponse'
              schema:
                $ref: '#/components/schemas/BrandWithEmbedded'
          description: Successfully retrieved the brand
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve a Brand
      tags:
      - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |+
        Replaces a brand by `brandId`

        Passing an invalid `brandId` returns a `404 Not Found` status code with the error code `E0000007`.

        Not providing `agreeToCustomPrivacyPolicy` with `customPrivacyPolicyUrl` returns a `400 Bad Request` status code with the error code `E0000001`.

      operationId: replaceBrand
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update brand request:
                $ref: '#/components/examples/UpdateBrandRequest'
            schema:
              $ref: '#/components/schemas/BrandRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update brand response:
                  $ref: '#/components/examples/UpdateBrandResponse'
              schema:
                $ref: '#/components/schemas/Brand'
          description: Successfully replaced the brand
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace a Brand
      tags:
      - Brands
      x-codegen-request-body-name: brand
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/domains:
    get:
      description: Lists all domains associated with a brand by `brandId`
      operationId: listBrandDomains
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandDomains'
          description: Successfully returned the list of domains for the brand
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: List all Domains associated with a Brand
      tags:
      - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/error:
    get:
      description: Retrieves the error page sub-resources. The `expand` query parameter
        specifies which sub-resources to include in the response.
      operationId: getErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - default
            - customized
            - customizedUrl
            - preview
            - previewUrl
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
          description: Successfully retrieved the error page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Error Page Sub-Resources
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/error/customized:
    delete:
      description: "Deletes the customized error page. As a result, the default error\
        \ page appears in your live environment."
      operationId: deleteCustomizedErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the customized error page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Customized Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves the customized error page. The customized error page
        appears in your live environment.
      operationId: getCustomizedErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
          description: Successfully retrieved the customized error page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Customized Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the customized error page. The customized error page appears
        in your live environment.
      operationId: replaceCustomizedErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
          description: Successfully replaced the customized error page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace the Customized Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/error/default:
    get:
      description: Retrieves the default error page. The default error page appears
        when no customized error page exists.
      operationId: getDefaultErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
          description: Successfully retrieved the default error page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Default Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/error/preview:
    delete:
      description: "Deletes the preview error page. The preview error page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/error/preview`."
      operationId: deletePreviewErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the preview error page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Preview Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: "Retrieves the preview error page. The preview error page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/error/preview`."
      operationId: getPreviewErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
          description: Successfully retrieved the preview error page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Preview Error Page Preview
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: "Replaces the preview error page. The preview error page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/error/preview`."
      operationId: replacePreviewErrorPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
          description: Successfully replaced the preview error page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace the Preview Error Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-in:
    get:
      description: Retrieves the sign-in page sub-resources. The `expand` query parameter
        specifies which sub-resources to include in the response.
      operationId: getSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - default
            - customized
            - customizedUrl
            - preview
            - previewUrl
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
          description: Successfully retrieved the sign-in page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Sign-in Page Sub-Resources
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-in/customized:
    delete:
      description: "Deletes the customized sign-in page. As a result, the default\
        \ sign-in page appears in your live environment."
      operationId: deleteCustomizedSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the sign-in page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Customized Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves the customized sign-in page. The customized sign-in page
        appears in your live environment.
      operationId: getCustomizedSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully retrieved the customized sign-in page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Customized Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the customized sign-in page. The customized sign-in page
        appears in your live environment.
      operationId: replaceCustomizedSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully replaced the customized sign-in page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace the Customized Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-in/default:
    get:
      description: Retrieves the default sign-in page. The default sign-in page appears
        when no customized sign-in page exists.
      operationId: getDefaultSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully retrieved the default sign-in page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Default Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-in/preview:
    delete:
      description: "Deletes the preview sign-in page. The preview sign-in page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/login/preview`."
      operationId: deletePreviewSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the preview sign-in page.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Preview Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: "Retrieves the preview sign-in page. The preview sign-in page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/login/preview`."
      operationId: getPreviewSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully retrieved the preview sign-in page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Preview Sign-in Page Preview
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: "Replaces the preview sign-in page. The preview sign-in page contains\
        \ unpublished changes and isn't shown in your live environment. Preview it\
        \ at `${yourOktaDomain}/login/preview`."
      operationId: replacePreviewSignInPage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully replaced the preview sign-in page.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace the Preview Sign-in Page
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:
    get:
      description: Lists all sign-in widget versions supported by the current org
      operationId: listAllSignInWidgetVersions
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  pattern: ^\d+\.\d+$
                  type: string
                type: array
          description: Successfully listed the sign-in widget versions.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: List all Sign-in Widget Versions
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/pages/sign-out/customized:
    get:
      description: Retrieves the sign-out page settings
      operationId: getSignOutPageSettings
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
          description: Successfully retrieved the sign-out page settings.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve the Sign-out Page Settings
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the sign-out page settings
      operationId: replaceSignOutPageSettings
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
          description: Successfully replaced the sign-out page settings.
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace the Sign-out Page Settings
      tags:
      - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email:
    get:
      description: Lists all supported email templates
      operationId: listEmailTemplates
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - settings
            - customizationCount
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List email templates response:
                  $ref: '#/components/examples/ListEmailTemplateResponse'
              schema:
                items:
                  $ref: '#/components/schemas/EmailTemplateResponse'
                type: array
          description: Successfully returned the list of email templates.
          headers:
            Link:
              description: "The pagination header containing links to the current\
                \ and next page of results. See [Pagination](/#pagination) for more\
                \ information."
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: List all Email Templates
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    get:
      description: Retrieves the details of an email template by name
      operationId: getEmailTemplate
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - settings
            - customizationCount
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template response:
                  $ref: '#/components/examples/GetEmailTemplateResponse'
              schema:
                $ref: '#/components/schemas/EmailTemplateResponse'
          description: Successfully retrieved the email template.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve an Email Template
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    delete:
      description: |
        Deletes all customizations for an email template

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is enabled, all customizations are deleted, including customizations for additional languages. If disabled, only customizations in Okta-supported languages are deleted.
      operationId: deleteAllCustomizations
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted all customizations for the email template.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Delete all Email Customizations
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: |
        Lists all customizations of an email template

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is enabled, all existing customizations are retrieved, including customizations for additional languages. If disabled, only customizations for Okta-supported languages are returned.
      operationId: listEmailCustomizations
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Email customizations response:
                  $ref: '#/components/examples/ListEmailCustomizationResponse'
              schema:
                items:
                  $ref: '#/components/schemas/EmailCustomization'
                type: array
          description: Successfully retrieved all email customizations for the specified
            email template.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: List all Email Customizations
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |
        Creates a new Email Customization

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is enabled, you can create a customization for any BCP47 language in addition to the Okta-supported languages.
      operationId: createEmailCustomization
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
            schema:
              $ref: '#/components/schemas/EmailCustomization'
      responses:
        "201":
          content:
            application/json:
              examples:
                Create email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully created the email customization.
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not create the email customization because it conflicts
            with an existing email customization.
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Create an Email Customization
      tags:
      - CustomTemplates
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    delete:
      description: |
        Deletes an Email Customization by its unique identifier

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is disabled, deletion of an existing additional language customization by ID doesn't register.
      operationId: deleteEmailCustomization
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the email customization.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot delete default email customization:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotDeleteDefault'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not delete the email customization deleted because it
            is the default email customization.
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Delete an Email Customization
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: |
        Retrieves an email customization by its unique identifier

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is disabled, requests to retrieve an additional language customization by ID result in a `404 Not Found` error response.
      operationId: getEmailCustomization
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email customization response:
                  $ref: '#/components/examples/EmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully retrieved the email customization.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve an Email Customization
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |
        Replaces an email customization using property values

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is disabled, requests to update a customization for an additional language return a `404 Not Found` error response.
      operationId: replaceEmailCustomization
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
            schema:
              $ref: '#/components/schemas/EmailCustomization'
        description: Request
      responses:
        "200":
          content:
            application/json:
              examples:
                Update email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully updated the email customization.
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
                Cannot set the default email customization's isDefault to false:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotClearDefault'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not update the email customization because the update
            would cause a conflict with an existing email customization.
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Replace an Email Customization
      tags:
      - CustomTemplates
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    get:
      description: |
        Retrieves a Preview of an Email Customization. All variable references are populated from the current user's context. For example, `${user.profile.firstName}`.

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is disabled, requests for the preview of an additional language customization by ID return a `404 Not Found` error response.
      operationId: getCustomizationPreview
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Preview email customization response:
                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailPreview'
          description: Successfully generated a preview of the email customization.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve a Preview of an Email Customization
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    get:
      description: "Retrieves an email template's default content\n\n<x-lifecycle\
        \ class=\"ea\"></x-lifecycle> Defaults to the current user's language given\
        \ the following: \n- Custom languages for Okta Email Templates is enabled\n\
        - An additional language is specified for the `language` parameter\n"
      operationId: getEmailDefaultContent
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template default content response:
                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
          description: Successfully retrieved the email template's default content.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve an Email Template Default Content
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    get:
      description: |
        Retrieves a preview of an Email Template's default content. All variable references are populated using the current user's context. For example, `${user.profile.firstName}`.

        <x-lifecycle class="ea"></x-lifecycle> Defaults to the current user's language given the following:
        - Custom languages for Okta Email Templates is enabled
        - An additional language is specified for the `language` parameter
      operationId: getEmailDefaultPreview
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Preview email template default content response:
                  $ref: '#/components/examples/PreviewEmailTemplateDefaultContentResponse'
              schema:
                $ref: '#/components/schemas/EmailPreview'
          description: Successfully generated a preview of the email template's default
            content.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve a Preview of the Email Template default content
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:
    get:
      description: Retrieves an email template's settings
      operationId: getEmailSettings
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template settings response:
                  $ref: '#/components/examples/EmailSettingsResponse'
              schema:
                $ref: '#/components/schemas/EmailSettingsResponse'
          description: Successfully retrieved the email template's settings.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve the Email Template Settings
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces an email template's settings
      operationId: replaceEmailSettings
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettings'
      responses:
        "200":
          content:
            application/json:
              examples:
                Update email template settings:
                  $ref: '#/components/examples/EmailSettingsResponse'
              schema:
                $ref: '#/components/schemas/EmailSettings'
          description: Successfully updated the email template's settings.
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Invalid email template recipients:
                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not update the email template's settings due to an invalid
            setting value.
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Replace the Email Template Settings
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    post:
      description: |-
        Sends a test email to the current user’s primary and secondary email addresses. The email content is selected based on the following priority:
        1. The email customization for the language specified in the `language` query parameter.
        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta Email Templates is enabled and the `language` parameter is an additional language, the test email uses the customization corresponding to the language.
        2. The email template's default customization.
        3. The email template’s default content, translated to the current user's language.
      operationId: sendTestEmail
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "204":
          content: {}
          description: Successfully sent a test email.
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Send a Test Email
      tags:
      - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/themes:
    get:
      description: |-
        Lists all the themes in your brand.

        > **Important:** Currently each org supports only one Theme, therefore this contains a single object only.
      operationId: listBrandThemes
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get themes response:
                  $ref: '#/components/examples/ListThemesResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ThemeResponse'
                type: array
          description: Successfully returned the list of themes
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: List all Themes
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/themes/{themeId}:
    get:
      description: Retrieves a theme for a brand
      operationId: getBrandTheme
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get theme response:
                  $ref: '#/components/examples/GetThemeResponse'
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: Successfully retrieved the theme
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.read
      summary: Retrieve a Theme
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a theme for a brand
      operationId: replaceBrandTheme
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update theme request:
                $ref: '#/components/examples/UpdateThemeRequest'
            schema:
              $ref: '#/components/schemas/UpdateThemeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update theme response:
                  $ref: '#/components/examples/UpdateThemeResponse'
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: Successfully replaced the theme
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Replace a Theme
      tags:
      - Themes
      x-codegen-request-body-name: theme
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    delete:
      description: Deletes a Theme background image
      operationId: deleteBrandThemeBackgroundImage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Background Image
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Uploads and replaces the background image for the theme. The file\
        \ must be in PNG, JPG, or GIF format and less than 2 MB in size."
      operationId: uploadBrandThemeBackgroundImage
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeBackgroundImage_request'
        description: background image file
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Content Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Upload the Background Image
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    delete:
      description: Deletes a Theme favicon. The theme will use the default Okta favicon.
      operationId: deleteBrandThemeFavicon
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Favicon
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Uploads and replaces the favicon for the theme
      operationId: uploadBrandThemeFavicon
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeFavicon_request'
        description: favicon file
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Upload the Favicon
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    delete:
      description: Deletes a Theme logo. The theme will use the default Okta logo.
      operationId: deleteBrandThemeLogo
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Delete the Logo
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Uploads and replaces the logo for the theme. The file must be\
        \ in PNG, JPG, or GIF format and less than 100kB in size. For best results\
        \ use landscape orientation, a transparent background, and a minimum size\
        \ of 300px by 50px to prevent upscaling."
      operationId: uploadBrandThemeLogo
      parameters:
      - description: The ID of the brand
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeLogo_request'
        description: logo file
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.brands.manage
      summary: Upload the Logo
      tags:
      - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/captchas:
    get:
      description: Lists all CAPTCHA instances with pagination support. A subset of
        CAPTCHA instances can be returned that match a supported filter expression
        or query.
      operationId: listCaptchaInstances
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CAPTCHAInstance'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.read
      summary: List all CAPTCHA Instances
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: "Creates a new CAPTCHA instance. Currently, an org can only configure\
        \ a single CAPTCHA instance."
      operationId: createCaptchaInstance
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Error Limit of One CAPTCHA instance per org:
                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Create a CAPTCHA instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/captchas/{captchaId}:
    delete:
      description: |-
        Deletes a specified CAPTCHA instance
        > **Note:** If your CAPTCHA instance is still associated with your org, the request fails. You must first update your Org-wide CAPTCHA settings to remove the CAPTCHA instance.
      operationId: deleteCaptchaInstance
      parameters:
      - description: The unique key used to identify your CAPTCHA instance
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Cannot remove CAPTCHA in use:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Delete a CAPTCHA Instance
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves the properties of a specified CAPTCHA instance
      operationId: getCaptchaInstance
      parameters:
      - description: The unique key used to identify your CAPTCHA instance
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.read
      summary: Retrieve a CAPTCHA Instance
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Partially updates the properties of a specified CAPTCHA instance
      operationId: updateCaptchaInstance
      parameters:
      - description: The unique key used to identify your CAPTCHA instance
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Update a CAPTCHA Instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces the properties for a specified CAPTCHA instance
      operationId: replaceCaptchaInstance
      parameters:
      - description: The unique key used to identify your CAPTCHA instance
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Replace a CAPTCHA Instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/device-assurances:
    get:
      description: Lists all device assurance policies
      operationId: listDeviceAssurancePolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.deviceAssurance.read
      summary: List all Device Assurance Policies
      tags:
      - DeviceAssurance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Creates a new Device Assurance Policy
      operationId: createDeviceAssurancePolicy
      requestBody:
        content:
          application/json:
            examples:
              Android:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              iOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
              MacOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              Windows:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              ChromeOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest'
              MacOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest'
              WindowsWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest'
              AndroidWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceAndroidWithDynamicVersionRequirementRequest'
              iOSWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceIosWithDynamicVersionRequirementRequest'
              MacOSWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithDynamicVersionRequirementRequest'
              WindowsWithDynamicVersionRequirements:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithDynamicVersionRequirementsRequest'
              WindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionString:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringRequest'
              WindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementRequest'
            schema:
              $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
                AndroidWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceAndroidWithDynamicVersionRequirementResponse'
                iOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceIosWithDynamicVersionRequirementResponse'
                MacOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithDynamicVersionRequirementResponse'
                WindowsWithDynamicVersionRequirements:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithDynamicVersionRequirementsResponse'
                WindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionString:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringResponse'
                WindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementResponse'
              schema:
                $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.deviceAssurance.manage
      summary: Create a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-codegen-request-body-name: deviceAssurance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/device-assurances/{deviceAssuranceId}:
    delete:
      description: "Deletes a Device Assurance Policy by `deviceAssuranceId`. If the\
        \ Device Assurance Policy is currently being used in the org Authentication\
        \ Policies, the delete will not be allowed."
      operationId: deleteDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                ErrorDeviceAssuranceInUse:
                  $ref: '#/components/examples/ErrorDeviceAssuranceInUse'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.deviceAssurance.manage
      summary: Delete a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves a Device Assurance Policy by `deviceAssuranceId`
      operationId: getDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
                AndroidWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceAndroidWithDynamicVersionRequirementResponse'
                iOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceIosWithDynamicVersionRequirementResponse'
                MacOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithDynamicVersionRequirementResponse'
                WindowsWithDynamicVersionRequirements:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithDynamicVersionRequirementsResponse'
                WindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionString:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringResponse'
                WindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementResponse'
              schema:
                $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.deviceAssurance.read
      summary: Retrieve a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces a Device Assurance Policy by `deviceAssuranceId`
      operationId: replaceDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Android:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              iOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
              MacOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              Windows:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              ChromeOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest'
              MacOSWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest'
              WindowsWithThirdPartySignalProviders:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest'
              AndroidWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceAndroidWithDynamicVersionRequirementRequest'
              iOSWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceIosWithDynamicVersionRequirementRequest'
              MacOSWithDynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceMacOSWithDynamicVersionRequirementRequest'
              WindowsWithDynamicVersionRequirements:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithDynamicVersionRequirementsRequest'
              WindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionString:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringRequest'
              WindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirement:
                $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementRequest'
            schema:
              $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Android:
                  $ref: '#/components/examples/DeviceAssuranceAndroidResponse'
                iOS:
                  $ref: '#/components/examples/DeviceAssuranceIosResponse'
                MacOS:
                  $ref: '#/components/examples/DeviceAssuranceMacOSResponse'
                Windows:
                  $ref: '#/components/examples/DeviceAssuranceWindowsResponse'
                ChromeOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse'
                MacOSWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse'
                WindowsWithThirdPartySignalProviders:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse'
                AndroidWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceAndroidWithDynamicVersionRequirementResponse'
                iOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceIosWithDynamicVersionRequirementResponse'
                MacOSWithDynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceMacOSWithDynamicVersionRequirementResponse'
                WindowsWithDynamicVersionRequirements:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithDynamicVersionRequirementsResponse'
                WindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionString:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringResponse'
                WindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirement:
                  $ref: '#/components/examples/DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementResponse'
              schema:
                $ref: '#/components/schemas/listDeviceAssurancePolicies_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.deviceAssurance.manage
      summary: Replace a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-codegen-request-body-name: deviceAssurance
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices:
    get:
      description: |-
        Lists all devices with pagination support.
        You can return a subset of Devices that match a supported search criteria using the `search` query parameter.
        Searches for devices based on the properties specified in the `search` parameter conforming SCIM filter specifications (case-insensitive). This data is eventually consistent. The API returns different results depending on specified queries in the request. Empty list is returned if no objects match `search` request.
        > **Note:** Listing devices with `search` should not be used as a part of any critical flows—such as authentication or updates—to prevent potential data loss. `search` results may not reflect the latest information, as this endpoint uses a search index which may not be up-to-date with recent updates to the object. <br> Don't use search results directly for record updates, as the data might be stale and therefore overwrite newer data, resulting in data loss. <br> Use an `id` lookup for records that you update to ensure your results contain the latest data.
        This operation requires [URL encoding](https://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1). For example, `search=profile.displayName eq "Bob"` is encoded as `search=profile.displayName%20eq%20%22Bob%22`.
      operationId: listDevices
      parameters:
      - explode: true
        in: query
        name: after
        required: false
        schema:
          description: "The cursor to use for pagination. It is an opaque string that\
            \ specifies your current location in the list and is obtained from the\
            \ `Link` response header. See [Pagination](/#pagination) for more information."
          example: 200u3des4afA47rYJu1d7
          type: string
        style: form
      - description: A limit on the number of objects to return (recommend `20`)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          example: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "A SCIM filter expression that filters the results. Searches\
          \ include all Device `profile` properties and the Device `id`, `status`,\
          \ and `lastUpdated` properties."
        examples:
          Devices that have a `status` of `ACTIVE`:
            value: status eq "ACTIVE"
          Devices last updated after a specific timestamp:
            value: lastUpdated gt "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
          Devices with a specified `id`:
            value: id eq "guo4a5u7JHHhjXrMK0g4"
          Devices that have a `displayName` of `Bob`:
            value: profile.displayName eq "Bob"
          Devices that have an `platform` of `WINDOWS`:
            value: profile.platform eq "WINDOWS"
          Devices whose `sid` starts with `S-1`:
            value: profile.sid sw "S-1"
        explode: true
        in: query
        name: search
        required: false
        schema:
          example: lastUpdated gt "2019-06-01T09:00:00.000Z"
          type: string
        style: form
      - description: Includes associated user details and management status for the
          device in the `_embedded` attribute
        examples:
          UserFullDetails:
            summary: Get a detailed list of associated users
            value: user
          UserSummaries:
            summary: Get the list of associated user summaries
            value: userSummary
        explode: true
        in: query
        name: expand
        required: false
        schema:
          enum:
          - user
          - userSummary
          example: userSummary
          type: string
          x-enumDescriptions:
            user: Lists full details for associated users
            userSummary: Lists summaries for associated users
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                APIDevicesResponseUserSummaryExample:
                  $ref: '#/components/examples/APIDevicesListAllUserSummaryResponse'
                APIDevicesResponseExample:
                  $ref: '#/components/examples/APIDevicesListAllResponse'
              schema:
                items:
                  $ref: '#/components/schemas/DeviceList'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.read
      summary: List all Devices
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}:
    delete:
      description: |-
        Deletes (permanently) a device by `deviceId` if it has a status of `DEACTIVATED`. You can transition the device to `DEACTIVATED` status using the [Deactivate a Device](/openapi/okta-management/management/tag/Device/#tag/Device/operation/deactivateDevice) endpoint.
        This request is destructive and deletes all of the profile data related to the device. Once deleted, device data can't be recovered. However, reenrollment creates a new device record.
        > **Note:** Attempts to delete a device that isn't in a `DEACTIVATED` state raise an error.
      operationId: deleteDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.manage
      summary: Delete a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves a device by `deviceId`
      operationId: getDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APIDevicesResponseExample:
                  $ref: '#/components/examples/DeviceResponse'
              schema:
                $ref: '#/components/schemas/Device'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.read
      summary: Retrieve a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}/lifecycle/activate:
    post:
      description: |-
        Activates a Device by setting its status to ACTIVE by `deviceId`.
        Activated devices are used to create and delete Device user links.
      operationId: activateDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.manage
      summary: Activate a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}/lifecycle/deactivate:
    post:
      description: |-
        Deactivates a Device by setting its status to DEACTIVATED by `deviceId`.
        Deactivation causes a Device to lose all device user links.
        Set the Device status to DEACTIVATED before deleting it.
        > **Note:** When deactivating a Device, keep in mind the following:
          - Device deactivation is a destructive operation for device factors and client certificates. Device reenrollment using Okta Verify allows end users to set up new factors on the device.
          - Device deletion removes the device record from Okta. Reenrollment creates a new device record.
      operationId: deactivateDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.manage
      summary: Deactivate a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}/lifecycle/suspend:
    post:
      description: |-
        Suspends a Device by setting its status to SUSPENDED.
        Use suspended devices to create and delete device user links.
        You can only unsuspend or deactivate suspended devices.
        > **Note:** SUSPENDED status is meant to be temporary, so it isn't destructive.
      operationId: suspendDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.manage
      summary: Suspend a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}/lifecycle/unsuspend:
    post:
      description: |-
        Unsuspends a Device by returning its `status` to ACTIVE.
        >**Note:** Only devices with a SUSPENDED status can be unsuspended.
      operationId: unsuspendDevice
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.manage
      summary: Unsuspend a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/devices/{deviceId}/users:
    get:
      description: Lists all Users for a Device by `deviceId`
      operationId: listDeviceUsers
      parameters:
      - description: '`id` of the device'
        explode: false
        in: path
        name: deviceId
        required: true
        schema:
          example: guo4a5u7JHHhjXrMK0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APIDevicesListAllUsersResponseExample:
                  $ref: '#/components/examples/APIDevicesListAllUsersResponse'
              schema:
                items:
                  $ref: '#/components/schemas/DeviceUser'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.devices.read
      summary: List all Users for a Device
      tags:
      - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/directories/{appInstanceId}/groups/modify:
    post:
      description: Updates an AD Group membership directly in AD
      operationId: updateADGroupMembership
      parameters:
      - description: ID of the AD AppInstance in Okta
        explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAction'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "502":
          content:
            application/json:
              examples:
                AgentTimeOut:
                  $ref: '#/components/examples/ErrorAgentTimeOut'
              schema:
                $ref: '#/components/schemas/Error'
          description: There are no connected agents.
        "504":
          content:
            application/json:
              examples:
                AgentTimeOut:
                  $ref: '#/components/examples/ErrorNoConnectedAgents'
              schema:
                $ref: '#/components/schemas/Error'
          description: Timed out waiting for agent.
      security:
      - oauth2:
        - okta.directories.groups.manage
      summary: Update an AD Group membership
      tags:
      - DirectoriesIntegration
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/domains:
    get:
      description: Lists all verified custom domains for the org
      operationId: listCustomDomains
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.read
      summary: List all Custom Domains
      tags:
      - CustomDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates your custom domain
      operationId: createCustomDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.manage
      summary: Create a Custom Domain
      tags:
      - CustomDomain
      x-codegen-request-body-name: domain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/domains/{domainId}:
    delete:
      description: Deletes a custom domain by `domainId`
      operationId: deleteCustomDomain
      parameters:
      - description: '`id` of the Domain'
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          example: OmWNeywfTzElSLOBMZsL
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.manage
      summary: Delete a Custom Domain
      tags:
      - CustomDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a custom domain by `domainId`
      operationId: getCustomDomain
      parameters:
      - description: '`id` of the Domain'
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          example: OmWNeywfTzElSLOBMZsL
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.read
      summary: Retrieve a Custom Domain
      tags:
      - CustomDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a custom domain's brand
      operationId: replaceCustomDomain
      parameters:
      - description: '`id` of the Domain'
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          example: OmWNeywfTzElSLOBMZsL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.manage
      summary: Replace a Custom Domain's Brand
      tags:
      - CustomDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/domains/{domainId}/certificate:
    put:
      description: "Upserts (creates or renews) the `MANUAL` certificate for the custom\
        \ domain. If the `certificateSourceType` in the domain is `OKTA_MANAGED`,\
        \ it becomes `MANUAL` and Okta no longer manages and renews certificates for\
        \ this domain since a user-managed certificate has been provided."
      operationId: upsertCertificate
      parameters:
      - description: '`id` of the Domain'
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          example: OmWNeywfTzElSLOBMZsL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.manage
      summary: Upsert the Custom Domain's Certificate
      tags:
      - CustomDomain
      x-codegen-request-body-name: certificate
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/domains/{domainId}/verify:
    post:
      description: "Verifies the custom domain and validity of DNS records by `domainId`.\
        \ Furthermore, if the `certificateSourceType` in the domain is `OKTA_MANAGED`,\
        \ then an attempt is made to obtain and install a certificate. After a certificate\
        \ is obtained and installed by Okta, Okta manages the certificate including\
        \ certificate renewal."
      operationId: verifyDomain
      parameters:
      - description: '`id` of the Domain'
        explode: false
        in: path
        name: domainId
        required: true
        schema:
          example: OmWNeywfTzElSLOBMZsL
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.domains.manage
      summary: Verify a Custom Domain
      tags:
      - CustomDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/email-domains:
    get:
      description: Lists all the Email Domains in your org
      operationId: listEmailDomains
      parameters:
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - brands
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
              schema:
                items:
                  $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.read
      summary: List all Email Domains
      tags:
      - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates an Email Domain in your org
      operationId: createEmailDomain
      parameters:
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - brands
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Create email domain request:
                $ref: '#/components/examples/CreateEmailDomainRequest'
            schema:
              $ref: '#/components/schemas/EmailDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Email domain already exists:
                  $ref: '#/components/examples/ErrorEmailDomainAlreadyExists'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.manage
      summary: Create an Email Domain
      tags:
      - EmailDomain
      x-codegen-request-body-name: emailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/email-domains/{emailDomainId}:
    delete:
      description: Deletes an Email Domain by `emailDomainId`
      operationId: deleteEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - brands
            type: string
          type: array
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                Email domain in use:
                  $ref: '#/components/examples/ErrorEmailDomainInUse'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unable to delete custom email domain due to mail provider specific
            restrictions
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.manage
      summary: Delete an Email Domain
      tags:
      - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an Email Domain by `emailDomainId`
      operationId: getEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - brands
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Retrieve email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
              schema:
                $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.read
      summary: Retrieve an Email Domain
      tags:
      - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces associated username and sender display name by `emailDomainId`
      operationId: replaceEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - brands
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            examples:
              Update email domain request:
                $ref: '#/components/examples/UpdateEmailDomainRequest'
            schema:
              $ref: '#/components/schemas/UpdateEmailDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update email domain response:
                  $ref: '#/components/examples/UpdatedEmailDomainResponse'
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.manage
      summary: Replace an Email Domain
      tags:
      - EmailDomain
      x-codegen-request-body-name: updateEmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/email-domains/{emailDomainId}/verify:
    post:
      description: Verifies an Email Domain by `emailDomainId`
      operationId: verifyEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Verified email domain response:
                  $ref: '#/components/examples/VerifiedEmailDomainResponse'
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                Email domain could not be verified:
                  $ref: '#/components/examples/ErrorEmailDomainNotVerified'
                Email domain invalid status:
                  $ref: '#/components/examples/ErrorEmailDomainInvalidStatus'
              schema:
                $ref: '#/components/schemas/Error'
          description: Email domain could not be verified by mail provider
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailDomains.manage
      summary: Verify an Email Domain
      tags:
      - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/email-servers:
    get:
      description: Lists all the enrolled custom SMTP server configurations
      operationId: listEmailServers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.read
      summary: List all enrolled SMTP servers
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Creates a custom email SMTP server configuration for your org
      operationId: createEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerPost'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
          description: Successfully enrolled server credentials
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.manage
      summary: Create a custom SMTP server
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/email-servers/{emailServerId}:
    delete:
      description: Deletes the specified custom SMTP server configuration
      operationId: deleteEmailServer
      parameters:
      - explode: false
        in: path
        name: emailServerId
        required: true
        schema:
          description: ID of your SMTP Server configuration
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.manage
      summary: Delete an SMTP Server configuration
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves the specified custom SMTP server configuration
      operationId: getEmailServer
      parameters:
      - explode: false
        in: path
        name: emailServerId
        required: true
        schema:
          description: ID of your SMTP Server configuration
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.read
      summary: Retrieve an SMTP Server configuration
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    patch:
      description: Updates the specified custom SMTP server configuration
      operationId: updateEmailServer
      parameters:
      - explode: false
        in: path
        name: emailServerId
        required: true
        schema:
          description: ID of your SMTP Server configuration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.manage
      summary: Update an SMTP Server configuration
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/email-servers/{emailServerId}/test:
    post:
      description: Tests the specified custom SMTP Server configuration
      operationId: testEmailServer
      parameters:
      - explode: false
        in: path
        name: emailServerId
        required: true
        schema:
          description: ID of your SMTP Server configuration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTestAddresses'
      responses:
        "204":
          description: No content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.emailServers.manage
      summary: Test an SMTP Server configuration
      tags:
      - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/eventHooks:
    get:
      description: Lists all event hooks
      operationId: listEventHooks
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveAllEventHooks:
                  $ref: '#/components/examples/RetrieveAllEventHooks'
              schema:
                items:
                  $ref: '#/components/schemas/EventHook'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.read
      summary: List all Event Hooks
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Creates a new event hook for your organization in `ACTIVE` status. You pass an event hook object in the JSON payload
        of your request. That object represents the set of required information about the event hook you're registering, including:
          * The URI of your external service
          * The [events](https://developer.okta.com/docs/reference/api/event-types/) in Okta you want to subscribe to
          * An optional event hook filter that can reduce the number of event hook calls. This is a self-service Early Access (EA) feature.
            See [Create an event hook filter](https://developer.okta.com/docs/concepts/event-hooks/#create-an-event-hook-filter).

            Additionally, you can specify a secret API key for Okta to pass to your external service endpoint for security verification. Note that the API key you set here is unrelated to the Okta API token
        you must supply when making calls to Okta APIs. Optionally, you can specify extra headers that Okta passes to your external
        service with each call.
        Your external service must use a valid HTTPS endpoint.
      operationId: createEventHook
      requestBody:
        content:
          application/json:
            examples:
              CreateAnEventHook:
                $ref: '#/components/examples/CreateAnEventHook'
              CreateAnEventHookWithFilter:
                $ref: '#/components/examples/CreateAnEventHookWithFilter'
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
                CreateAnEventHookWithFilter:
                  $ref: '#/components/examples/RetrieveAnEventHookWithFilter'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Create an Event Hook
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/eventHooks/{eventHookId}:
    delete:
      description: |-
        Deletes the event hook that matches the provided `id`. After deletion, the event hook is unrecoverable.
        As a safety precaution, you can only delete event hooks with a status of `INACTIVE`.
      operationId: deleteEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Delete an Event Hook
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an event hook
      operationId: getEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.read
      summary: Retrieve an Event Hook
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |-
        Replaces an event hook. Okta validates the new properties before replacing the existing values.
        Some event hook properties are immutable and can't be updated. Refer to the parameter description in the request body schema.

        >**Note:** Updating the `channel` property requires you to verify the hook again.
      operationId: replaceEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ReplaceAnEventHook:
                $ref: '#/components/examples/ReplaceAnEventHookWithFilter'
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ReplaceAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHookWithFilter'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Replace an Event Hook
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      description: Activates the event hook that matches the provided `id`
      operationId: activateEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ActivateAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Activate an Event Hook
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      description: Deactivates the event hook that matches the provided `id`
      operationId: deactivateEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                DeactivateAnEventHook:
                  $ref: '#/components/examples/RetrieveADeactivatedEventHook'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Deactivate an Event Hook
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      description: |-
        Verifies that the event hook matches the provided `eventHookId`. To verify ownership, your endpoint must send information back to Okta in JSON format. See [Event hooks](https://developer.okta.com/docs/concepts/event-hooks/#one-time-verification-request).

        Only `ACTIVE` and `VERIFIED` event hooks can receive events from Okta.

        If a response is not received within 3 seconds, the outbound request times out. One retry is attempted after a timeout or error response.
        If a successful response still isn't received, this operation returns a 400 error with more information about the failure.
      operationId: verifyEventHook
      parameters:
      - description: '`id` of the Event Hook'
        explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          example: who8vt36qfNpCGz9H1e6
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                VerifyAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.eventHooks.manage
      summary: Verify an Event Hook
      tags:
      - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features:
    get:
      description: Lists all self-service features for your org
      operationId: listFeatures
      responses:
        "200":
          content:
            application/json:
              examples:
                FeaturesList:
                  $ref: '#/components/examples/ListFeaturesResponse'
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.features.read
      summary: List all Features
      tags:
      - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features/{featureId}:
    get:
      description: Retrieves a feature by ID
      operationId: getFeature
      parameters:
      - description: '`id` of the feature'
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          example: R5HjqNn1pEqWGy48E9jg
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FeaturesRetrieve:
                  $ref: '#/components/examples/RetrieveFeaturesResponse'
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.features.read
      summary: Retrieve a Feature
      tags:
      - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features/{featureId}/dependencies:
    get:
      description: |-
        Lists all feature dependencies for a specified feature.

        A feature's dependencies are the features that it requires to be enabled in order for itself to be enabled.
      operationId: listFeatureDependencies
      parameters:
      - description: '`id` of the feature'
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          example: R5HjqNn1pEqWGy48E9jg
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FeaturesDependenciesList:
                  $ref: '#/components/examples/ListFeatureDependenciesResponse'
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.features.read
      summary: List all dependencies
      tags:
      - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features/{featureId}/dependents:
    get:
      description: |-
        Lists all feature dependents for the specified feature.

        A feature's dependents are the features that need to be disabled in order for the feature itself to be disabled.
      operationId: listFeatureDependents
      parameters:
      - description: '`id` of the feature'
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          example: R5HjqNn1pEqWGy48E9jg
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                FeaturesDependentsList:
                  $ref: '#/components/examples/ListFeatureDependentsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.features.read
      summary: List all dependents
      tags:
      - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      description: |-
        Updates a feature's lifecycle status. Use this endpoint to enable or disable a feature for your org.

        Use the `mode=force` parameter to override dependency restrictions for a particular feature. Normally, you can't enable a feature if it has one or more dependencies that aren't enabled.

        When you use the `mode=force` parameter while enabling a feature, Okta first tries to enable any disabled features that this feature may have as dependencies. If you don't pass the `mode=force` parameter and the feature has dependencies that need to be enabled before the feature is enabled, a 400 error is returned.

        When you use the `mode=force` parameter while disabling a feature, Okta first tries to disable any enabled features that this feature may have as dependents. If you don't pass the `mode=force` parameter and the feature has dependents that need to be disabled before the feature is disabled, a 400 error is returned.

        The following chart shows the different state transitions for a feature.

        ![State transitions of a feature](../../../../../images/features/update-ssfeat-flowchart.png '#width=500px;')
      operationId: updateFeatureLifecycle
      parameters:
      - description: '`id` of the feature'
        explode: false
        in: path
        name: featureId
        required: true
        schema:
          example: R5HjqNn1pEqWGy48E9jg
          type: string
        style: simple
      - description: Whether to `ENABLE` or `DISABLE` the feature
        explode: false
        in: path
        name: lifecycle
        required: true
        schema:
          $ref: '#/components/schemas/FeatureLifecycle'
        style: simple
      - description: Indicates if you want to force enable or disable a feature. Supported
          value is `force`.
        explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                FeaturesUpdate:
                  $ref: '#/components/examples/UpdateFeatureLifecycleResponse'
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.features.manage
      summary: Update a Feature lifecycle
      tags:
      - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/first-party-app-settings/{appName}:
    get:
      description: Retrieves the settings for an Okta app (also known as an Okta first-party
        app)
      operationId: getFirstPartyAppSettings
      parameters:
      - description: |
          The key name for the Okta app.<br>
          Supported apps:
            * Okta Admin Console (`admin-console`)
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: admin-console
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                exampleSettings:
                  $ref: '#/components/examples/AdminConsoleSettingsExample'
              schema:
                $ref: '#/components/schemas/AdminConsoleSettings'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.read
      summary: Retrieve the Okta Application Settings
      tags:
      - OktaApplicationSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the settings for an Okta app (also known as an Okta first-party
        app)
      operationId: replaceFirstPartyAppSettings
      parameters:
      - description: |
          The key name for the Okta app.<br>
          Supported apps:
            * Okta Admin Console (`admin-console`)
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: admin-console
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              exampleSettings:
                $ref: '#/components/examples/AdminConsoleSettingsExample'
            schema:
              $ref: '#/components/schemas/AdminConsoleSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                exampleSettings:
                  $ref: '#/components/examples/AdminConsoleSettingsExample'
              schema:
                $ref: '#/components/schemas/AdminConsoleSettings'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Replace the Okta Application Settings
      tags:
      - OktaApplicationSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups:
    get:
      description: Lists all groups with pagination support. A subset of groups can
        be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
      - description: Searches the name property of groups for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter expression for groups
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of groups
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of group results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          format: int32
          type: integer
        style: form
      - description: "If specified, it causes additional metadata to be included in\
          \ the response."
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: "Searches for groups with a supported filtering expression for\
          \ all attributes except for _embedded, _links, and objectClass"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Specifies field to sort by and can be any single property (for
          search queries only).
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          example: lastUpdated
          type: string
        style: form
      - description: |-
          Specifies sort order `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` is not present.
          Groups with the same value for the `sortBy` parameter are ordered by `id`.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: List all Groups
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new group with `OKTA_GROUP` type
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Create a Group
      tags:
      - Group
      x-codegen-request-body-name: group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules:
    get:
      description: Lists all group rules
      operationId: listGroupRules
      parameters:
      - description: Specifies the number of rule results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - description: Specifies the pagination cursor for the next page of rules
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the keyword to search fules for
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "If specified as `groupIdToGroupNameMap`, then show group names"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
        x-okta-added-version: 1.3.0
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRule'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: List all Group Rules
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: createGroupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Create a Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules/{groupRuleId}:
    delete:
      description: Deletes a specific group rule by `groupRuleId`
      operationId: deleteGroupRule
      parameters:
      - description: The `id` of the group rule
        explode: false
        in: path
        name: groupRuleId
        required: true
        schema:
          example: 0pr3f7zMZZHPgUoWO0g4
          type: string
        style: simple
      - description: Indicates whether to keep or remove users from groups assigned
          by this rule.
        explode: true
        in: query
        name: removeUsers
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "202":
          content: {}
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Delete a group Rule
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a specific group rule by `groupRuleId`
      operationId: getGroupRule
      parameters:
      - description: The `id` of the group rule
        explode: false
        in: path
        name: groupRuleId
        required: true
        schema:
          example: 0pr3f7zMZZHPgUoWO0g4
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: Retrieve a Group Rule
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a group rule. Only `INACTIVE` rules can be updated.
      operationId: replaceGroupRule
      parameters:
      - description: The `id` of the group rule
        explode: false
        in: path
        name: groupRuleId
        required: true
        schema:
          example: 0pr3f7zMZZHPgUoWO0g4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Replace a Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules/{groupRuleId}/lifecycle/activate:
    post:
      description: Activates a specific group rule by `groupRuleId`
      operationId: activateGroupRule
      parameters:
      - description: The `id` of the group rule
        explode: false
        in: path
        name: groupRuleId
        required: true
        schema:
          example: 0pr3f7zMZZHPgUoWO0g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Activate a Group Rule
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules/{groupRuleId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific group rule by `groupRuleId`
      operationId: deactivateGroupRule
      parameters:
      - description: The `id` of the group rule
        explode: false
        in: path
        name: groupRuleId
        required: true
        schema:
          example: 0pr3f7zMZZHPgUoWO0g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Deactivate a Group Rule
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}:
    delete:
      description: Deletes a group with `OKTA_GROUP` type
      operationId: deleteGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Delete a Group
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a group by `groupId`
      operationId: getGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: Retrieve a Group
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the profile for a group with `OKTA_GROUP` type
      operationId: replaceGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Replace a Group
      tags:
      - Group
      x-codegen-request-body-name: group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/apps:
    get:
      description: Lists all applications that are assigned to a group
      operationId: listAssignedApplicationsForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of app results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: List all Assigned Applications
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/owners:
    get:
      description: Lists all owners for a specific group
      operationId: listGroupOwners
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: SCIM Filter expression for group owners. Allows to filter owners
          by type.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of owners
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of owner results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListsOneOwnerOfaGroup:
                  $ref: '#/components/examples/ListsOwnerOneResponse'
                ListsMultipleOwnersOfaGroup:
                  $ref: '#/components/examples/ListsOwnersMultipleResponse'
              schema:
                items:
                  $ref: '#/components/schemas/GroupOwner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: List all Group Owners
      tags:
      - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Assigns a group owner
      operationId: assignGroupOwner
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AssignAGroupOwner:
                $ref: '#/components/examples/AssignGroupOwnerRequest'
            schema:
              $ref: '#/components/schemas/AssignGroupOwnerRequestBody'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                AssignAGroupOwner:
                  $ref: '#/components/examples/AssignGroupOwnerResponse'
              schema:
                $ref: '#/components/schemas/GroupOwner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Assign a Group Owner
      tags:
      - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/owners/{ownerId}:
    delete:
      description: Deletes a group owner from a specific group
      operationId: deleteGroupOwner
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: The `id` of the group owner
        explode: false
        in: path
        name: ownerId
        required: true
        schema:
          example: 00u1emaK22TWRYd3TtG
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Delete a Group Owner
      tags:
      - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles:
    get:
      description: Lists all assigned roles of group identified by `groupId`
      operationId: listGroupAssignedRoles
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Assigned Roles of Group
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Assigns a role to a group
      operationId: assignRoleToGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: Setting this to `true` grants the group third-party admin status
        explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "201":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign a Role to a Group
      tags:
      - RoleAssignment
      x-codegen-request-body-name: assignRoleRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}:
    delete:
      description: Unassigns a role identified by `roleId` assigned to group identified
        by `groupId`
      operationId: unassignRoleFromGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Role from a Group
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a role identified by `roleId` assigned to group identified
        by `groupId`
      operationId: getGroupAssignedRole
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Role assigned to Group
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a Group.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Application Targets for an Application Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Unassigns an application target from application administrator
        role
      operationId: unassignAppTargetToAdminRoleForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign an Application Target from Application Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns an application target to administrator role
      operationId: assignAppTargetToAdminRoleForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign an Application Target to Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{appId}:
    delete:
      description: Unassigns an application instance target from application administrator
        role
      operationId: unassignAppInstanceTargetToAppAdminRoleForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign an Application Instance Target from an Application Administrator
        Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns App Instance Target to App Administrator Role given to
        a Group
      operationId: assignAppInstanceTargetToAppAdminRoleForGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign an Application Instance Target to Application Administrator
        Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      description: Lists all group targets for a group role
      operationId: listGroupTargetsForGroupRole
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Group Targets for a Group Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    delete:
      description: Unassigns a group target from a group role
      operationId: unassignGroupTargetFromGroupAdminRole
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          example: 00g1e9dfjHeLAsdX983d
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Group Target from a Group Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns a group target to a group role
      operationId: assignGroupTargetToGroupAdminRole
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          example: 00g1e9dfjHeLAsdX983d
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign a Group Target to a Group Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/users:
    get:
      description: Lists all users that are a member of a group
      operationId: listGroupUsers
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: "Searches for users with a supported filtering expression for\
          \ user name, primary email, or user name"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Specifies which field to sort by. This can be any single property.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          example: id
          type: string
        style: form
      - description: |-
          Specifies sort order: `asc` or `desc`. This parameter is ignored if `sortBy` is not present.
          Users with the same value for the `sortBy` parameter are ordered by `id`.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          type: string
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of user results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupMember'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.read
      summary: List all Member Users
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      description: Unassigns a user from a group with 'OKTA_GROUP' type
      operationId: unassignUserFromGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Unassign a User
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns a user to a group with 'OKTA_GROUP' type
      operationId: assignUserToGroup
      parameters:
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.groups.manage
      summary: Assign a User
      tags:
      - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/hook-keys:
    get:
      description: Lists all keys
      operationId: listHookKeys
      responses:
        "200":
          content:
            application/json:
              examples:
                ResponseExample:
                  $ref: '#/components/examples/ListAllKeysResponse'
              schema:
                items:
                  $ref: '#/components/schemas/HookKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.read
      summary: List all keys
      tags:
      - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |
        Creates a key for use with other parts of the application, such as inline hooks

        Use the key name to access this key for inline hook operations.

        The total number of keys that you can create in an Okta org is limited to 50.
      operationId: createHookKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ResponseExample:
                  $ref: '#/components/examples/CreateHookKeyResponse'
              schema:
                $ref: '#/components/schemas/HookKey'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Create a key
      tags:
      - HookKey
      x-codegen-request-body-name: keyRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/hook-keys/public/{publicKeyId}:
    get:
      description: Retrieves a public key by `keyId`
      operationId: getPublicKey
      parameters:
      - description: '`id` of the Public Key'
        explode: false
        in: path
        name: publicKeyId
        required: true
        schema:
          example: FcH2P9Eg7wr0o8N2FuV0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ResponseExample:
                  $ref: '#/components/examples/RetrievePublicKeyResponse'
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.read
      summary: Retrieve a public key
      tags:
      - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/hook-keys/{hookKeyId}:
    delete:
      description: |
        Deletes a key by `hookKeyId`. After being deleted, the key is unrecoverable.

        As a safety precaution, only keys that aren't being used are eligible for deletion.
      operationId: deleteHookKey
      parameters:
      - description: '`id` of the Hook Key'
        explode: false
        in: path
        name: hookKeyId
        required: true
        schema:
          example: XreKU5laGwBkjOTehusG
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Delete a key
      tags:
      - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a key by `hookKeyId`
      operationId: getHookKey
      parameters:
      - description: '`id` of the Hook Key'
        explode: false
        in: path
        name: hookKeyId
        required: true
        schema:
          example: XreKU5laGwBkjOTehusG
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ResponseExample:
                  $ref: '#/components/examples/RetrieveKeyResponse'
              schema:
                $ref: '#/components/schemas/HookKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.read
      summary: Retrieve a key
      tags:
      - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |
        Replaces a key by `hookKeyId`

        This request replaces existing properties after passing validation.

        Note: The only parameter that you can update is the name of the key, which must be unique at all times.
      operationId: replaceHookKey
      parameters:
      - description: '`id` of the Hook Key'
        explode: false
        in: path
        name: hookKeyId
        required: true
        schema:
          example: XreKU5laGwBkjOTehusG
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ResponseExample:
                  $ref: '#/components/examples/ReplaceKeyResponse'
              schema:
                $ref: '#/components/schemas/HookKey'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Replace a key
      tags:
      - HookKey
      x-codegen-request-body-name: keyRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/assignees/users:
    get:
      description: Lists all users with Role Assignments
      operationId: listUsersWithRoleAssignments
      parameters:
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results returned. Defaults to `100`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                User List:
                  $ref: '#/components/examples/RoleAssignedUsersResponseExample'
              schema:
                $ref: '#/components/schemas/RoleAssignedUsers'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Users with Role Assignments
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets:
    get:
      description: Lists all Resource Sets with pagination support
      operationId: listResourceSets
      parameters:
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetsResponse'
              schema:
                $ref: '#/components/schemas/ResourceSets'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Resource Sets
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Creates a new Resource Set. See [Supported Resources](/openapi/okta-management/guides/roles/#supported-resources).
        > **Note:** The maximum amount of `resources` allowed in a `resource set` object is 1000. Resources are identified by either an Okta Resource Name (ORN) or by a REST URL format. See [Okta Resource Name](/openapi/okta-management/guides/roles/#okta-resource-name-orn).
      operationId: createResourceSet
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetRequest'
            schema:
              $ref: '#/components/schemas/CreateResourceSetRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
              schema:
                $ref: '#/components/schemas/ResourceSet'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Create a Resource Set
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}:
    delete:
      description: Deletes a role by `resourceSetId`
      operationId: deleteResourceSet
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Resource Set
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a Resource Set by `resourceSetId`
      operationId: getResourceSet
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
              schema:
                $ref: '#/components/schemas/ResourceSet'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Resource Set
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a Resource Set by `resourceSetId`
      operationId: replaceResourceSet
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetRequest'
            schema:
              $ref: '#/components/schemas/ResourceSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
              schema:
                $ref: '#/components/schemas/ResourceSet'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Replace a Resource Set
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/bindings:
    get:
      description: Lists all Resource Set bindings with pagination support
      operationId: listBindings
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingsResponse'
              schema:
                $ref: '#/components/schemas/ResourceSetBindings'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Bindings
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new Resource Set binding
      operationId: createResourceSetBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetBindingCreateRequestExample'
            schema:
              $ref: '#/components/schemas/ResourceSetBindingCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Create a Resource Set Binding
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}:
    delete:
      description: Deletes a Resource Set binding by `resourceSetId` and `roleIdOrLabel`
      operationId: deleteBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Binding
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a Resource Set binding by `resourceSetId` and `roleIdOrLabel`
      operationId: getBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseWithIdExample'
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Binding
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members:
    get:
      description: Lists all members of a Resource Set binding with pagination support
      operationId: listMembersOfBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMembersResponse'
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMembers'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Members of a binding
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    patch:
      description: Adds more members to a Resource Set binding
      operationId: addMembersToBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetBindingAddMembersRequestExample'
            schema:
              $ref: '#/components/schemas/ResourceSetBindingAddMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Add more Members to a binding
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/bindings/{roleIdOrLabel}/members/{memberId}:
    delete:
      description: Unassigns a member identified by `memberId` from a binding
      operationId: unassignMemberFromBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: '`id` of a member'
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          example: irb1qe6PGuMc7Oh8N0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Member from a binding
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a member identified by `memberId` for a binding
      operationId: getMemberOfBinding
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: '`id` of a member'
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          example: irb1qe6PGuMc7Oh8N0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMemberResponse'
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMember'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Member of a binding
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/resources:
    get:
      description: Lists all resources that make up the Resource Set
      operationId: listResourceSetResources
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResourcesResponse'
              schema:
                $ref: '#/components/schemas/ResourceSetResources'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Resources of a Resource Set
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    patch:
      description: Adds more resources to a Resource Set
      operationId: addResourceSetResource
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetResourcePatchRequestExample'
            schema:
              $ref: '#/components/schemas/ResourceSetResourcePatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
              schema:
                $ref: '#/components/schemas/ResourceSet'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Add more Resource to a Resource Set
      tags:
      - ResourceSet
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetId}/resources/{resourceId}:
    delete:
      description: Deletes a resource identified by `resourceId` from a Resource Set
      operationId: deleteResourceSetResource
      parameters:
      - description: '`id` of a Resource Set'
        explode: false
        in: path
        name: resourceSetId
        required: true
        schema:
          example: iamoJDFKaJxGIr0oamd9g
          type: string
        style: simple
      - description: '`id` of a resource'
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          example: ire106sQKoHoXXsAe0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Resource from a Resource Set
      tags:
      - ResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/roles:
    get:
      description: Lists all roles with pagination support
      operationId: listRoles
      parameters:
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/RolesResponse'
              schema:
                $ref: '#/components/schemas/IamRoles'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Roles
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new role
      operationId: createRole
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/RoleRequest'
            schema:
              $ref: '#/components/schemas/CreateIamRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
              schema:
                $ref: '#/components/schemas/IamRole'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Create a Role
      tags:
      - Role
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/roles/{roleIdOrLabel}:
    delete:
      description: Deletes a role by `roleIdOrLabel`
      operationId: deleteRole
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Role
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a role by `roleIdOrLabel`
      operationId: getRole
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
              schema:
                $ref: '#/components/schemas/IamRole'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Role
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a role by `roleIdOrLabel`
      operationId: replaceRole
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/RoleRequest'
            schema:
              $ref: '#/components/schemas/UpdateIamRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
              schema:
                $ref: '#/components/schemas/IamRole'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Replace a Role
      tags:
      - Role
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/roles/{roleIdOrLabel}/permissions:
    get:
      description: Lists all permissions of the role by `roleIdOrLabel`
      operationId: listRolePermissions
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionsResponse'
              schema:
                $ref: '#/components/schemas/Permissions'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Permissions
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/roles/{roleIdOrLabel}/permissions/{permissionType}:
    delete:
      description: Deletes a permission from a role by `permissionType`
      operationId: deleteRolePermission
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: An okta permission type
        explode: false
        in: path
        name: permissionType
        required: true
        schema:
          example: okta.users.manage
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Permission
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a permission by `permissionType`
      operationId: getRolePermission
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: An okta permission type
        explode: false
        in: path
        name: permissionType
        required: true
        schema:
          example: okta.users.manage
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionResponse'
              schema:
                $ref: '#/components/schemas/Permission'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Permission
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a permission specified by `permissionType` to the role
      operationId: createRolePermission
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: An okta permission type
        explode: false
        in: path
        name: permissionType
        required: true
        schema:
          example: okta.users.manage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/CreateUpdateIamRolePermissionRequestExample'
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
        required: false
        x-okta-lifecycle:
          lifecycle: GA
          isGenerallyAvailable: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Create a Permission
      tags:
      - Role
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a permission specified by `permissionType` in the role
      operationId: replaceRolePermission
      parameters:
      - description: '`id` or `label` of the role'
        explode: false
        in: path
        name: roleIdOrLabel
        required: true
        schema:
          example: cr0Yq6IJxGIr0ouum0g3
          type: string
        style: simple
      - description: An okta permission type
        explode: false
        in: path
        name: permissionType
        required: true
        schema:
          example: okta.users.manage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example Request:
                $ref: '#/components/examples/CreateUpdateIamRolePermissionRequestExample'
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionResponseWithConditions'
              schema:
                $ref: '#/components/schemas/Permission'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Replace a Permission
      tags:
      - Role
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      x-codegen-request-body-name: instance
  /api/v1/identity-sources/{identitySourceId}/sessions:
    get:
      description: Lists all identity source sessions for the given identity source
        instance
      operationId: listIdentitySourceSessions
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sessionsList:
                  $ref: '#/components/examples/ListSessionsResponseForGetSessions'
              schema:
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.read
      summary: List all Identity Source Sessions
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates an identity source session for the given identity source
        instance
      operationId: createIdentitySourceSession
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sessionsList:
                  $ref: '#/components/examples/ListSessionsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.manage
      summary: Create an Identity Source Session
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}:
    delete:
      description: Deletes an identity source session for a given `identitySourceId`
        and `sessionId`
      operationId: deleteIdentitySourceSession
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.manage
      summary: Delete an Identity Source Session
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves an identity source session for a given identity source
        id and session id
      operationId: getIdentitySourceSession
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Session:
                  $ref: '#/components/examples/ListSessionsResponse'
              schema:
                $ref: '#/components/schemas/IdentitySourceSession'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.read
      summary: Retrieve an Identity Source Session
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-delete:
    post:
      description: Uploads entities that need to be deleted in Okta from the identity
        source for the given session
      operationId: uploadIdentitySourceDataForDelete
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteRequestBody'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.manage
      summary: Upload the data to be deleted in Okta
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-upsert:
    post:
      description: Uploads entities that need to be upserted in Okta from the identity
        source for the given session
      operationId: uploadIdentitySourceDataForUpsert
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpsertRequestBody'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.manage
      summary: Upload the data to be upserted in Okta
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/start-import:
    post:
      description: Starts the import from the identity source described by the uploaded
        bulk operations
      operationId: startImportFromIdentitySource
      parameters:
      - explode: false
        in: path
        name: identitySourceId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sessionsList:
                  $ref: '#/components/examples/TriggerSessionResponse'
              schema:
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.identitySources.manage
      summary: Start the import from the Identity Source
      tags:
      - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/idps:
    get:
      description: Lists all identity provider integrations with pagination. A subset
        of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
      - description: Searches the name property of IdPs for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of IdPs
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of IdP results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: Filters IdPs by type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Identity Providers
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new identity provider integration
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Create an Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/credentials/keys:
    get:
      description: Lists all IdP key credentials
      operationId: listIdentityProviderKeys
      parameters:
      - description: Specifies the pagination cursor for the next page of keys
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of key results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Credential Keys
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Create an X.509 Certificate Public Key
      tags:
      - IdentityProvider
      x-codegen-request-body-name: jsonWebKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/credentials/keys/{idpKeyId}:
    delete:
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP
      operationId: deleteIdentityProviderKey
      parameters:
      - description: '`id` of IdP Key'
        explode: false
        in: path
        name: idpKeyId
        required: true
        schema:
          example: KmMo85SSsU7TZzOShcGb
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Delete a Signing Credential Key
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
      - description: '`id` of IdP Key'
        explode: false
        in: path
        name: idpKeyId
        required: true
        schema:
          example: KmMo85SSsU7TZzOShcGb
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: Retrieve an Credential Key
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}:
    delete:
      description: Deletes an identity provider integration by `idpId`
      operationId: deleteIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Delete an Identity Provider
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an identity provider integration by `idpId`
      operationId: getIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: Retrieve an Identity Provider
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces an identity provider integration by `idpId`
      operationId: replaceIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Replace an Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      description: Lists all Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Csr'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Certificate Signing Requests
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Generates a new key pair and returns a Certificate Signing Request
        for it
      operationId: generateCsrForIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Generate a Certificate Signing Request
      tags:
      - IdentityProvider
      x-codegen-request-body-name: metadata
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}:
    delete:
      description: Revokes a certificate signing request and deletes the key pair
        from the IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: '`id` of the IdP CSR'
        explode: false
        in: path
        name: idpCsrId
        required: true
        schema:
          example: 1uEhyE65oV3H6KM9gYcN
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Revoke a Certificate Signing Request
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: '`id` of the IdP CSR'
        explode: false
        in: path
        name: idpCsrId
        required: true
        schema:
          example: 1uEhyE65oV3H6KM9gYcN
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: Retrieve a Certificate Signing Request
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}/lifecycle/publish:
    post:
      description: Publishes a certificate signing request with a signed X.509 certificate
        and adds it into the signing key credentials for the IdP
      operationId: publishCsrForIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: '`id` of the IdP CSR'
        explode: false
        in: path
        name: idpCsrId
        required: true
        schema:
          example: 1uEhyE65oV3H6KM9gYcN
          type: string
        style: simple
      requestBody:
        content:
          application/x-x509-ca-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryCerCertForIdentityProvider
          application/pkix-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryDerCertForIdentityProvider
          application/x-pem-file:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Publish a Certificate Signing Request
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      description: Lists all signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Signing Credential Keys
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an IdP signing key credential
        to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: expiry of the IdP Key Credential
        explode: true
        in: query
        name: validityYears
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Generate a new Signing Credential Key
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/keys/{idpKeyId}:
    get:
      description: Retrieves a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: '`id` of IdP Key'
        explode: false
        in: path
        name: idpKeyId
        required: true
        schema:
          example: KmMo85SSsU7TZzOShcGb
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: Retrieve a Signing Credential Key
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/credentials/keys/{idpKeyId}/clone:
    post:
      description: Clones a X.509 certificate for an IdP signing key credential from
        a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: '`id` of IdP Key'
        explode: false
        in: path
        name: idpKeyId
        required: true
        schema:
          example: KmMo85SSsU7TZzOShcGb
          type: string
        style: simple
      - explode: true
        in: query
        name: targetIdpId
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Clone a Signing Credential Key
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      description: Activates an inactive IdP
      operationId: activateIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Activate an Identity Provider
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      description: Deactivates an active IdP
      operationId: deactivateIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Deactivate an Identity Provider
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/users:
    get:
      description: Lists all users linked to the identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: Searches the name property of IdPs for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of IdPs
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of IdP results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: Expand user data
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Users
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/users/{userId}:
    delete:
      description: Unlinks the link between the Okta user and the IdP user
      operationId: unlinkUserFromIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.manage
      summary: Unlink a User from IdP
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: Retrieve a User
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Links an Okta user to an existing Social Identity Provider. This
        does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Link a User to a Social IdP
      tags:
      - IdentityProvider
      x-codegen-request-body-name: userIdentityProviderLinkRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      description: Lists the tokens minted by the Social Authentication Provider when
        the user authenticates with Okta via Social Auth
      operationId: listSocialAuthTokens
      parameters:
      - description: '`id` of IdP'
        explode: false
        in: path
        name: idpId
        required: true
        schema:
          example: SVHoAOh0l8cPQkVX1LRl
          type: string
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.idps.read
      summary: List all Tokens from a OIDC Identity Provider
      tags:
      - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks:
    get:
      description: Lists all inline hooks
      operationId: listInlineHooks
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                AuthenticatorConfiguration:
                  $ref: '#/components/examples/InlineHookTelephony'
              schema:
                items:
                  $ref: '#/components/schemas/InlineHook'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.read
      summary: List all Inline Hooks
      tags:
      - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates an inline hook
      operationId: createInlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Create an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: inlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks/{inlineHookId}:
    delete:
      description: "Deletes an inline hook by `inlineHookId`. Once deleted, the Inline\
        \ Hook is unrecoverable. As a safety precaution, only Inline Hooks with a\
        \ status of INACTIVE are eligible for deletion."
      operationId: deleteInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Delete an Inline Hook
      tags:
      - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an inline hook by `inlineHookId`
      operationId: getInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                AuthenticatorConfiguration:
                  $ref: '#/components/examples/InlineHookTelephony'
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.read
      summary: Retrieve an Inline Hook
      tags:
      - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates an inline hook by `inlineHookId`
      operationId: updateInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Update an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: inlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces an inline hook by `inlineHookId`
      operationId: replaceInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Replace an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: inlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      description: Executes the inline hook by `inlineHookId` using the request body
        as the input. This will send the provided data through the Channel and return
        a response if it matches the correct data contract. This execution endpoint
        should only be used for testing purposes.
      operationId: executeInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Execute an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: payloadData
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      description: Activates the inline hook by `inlineHookId`
      operationId: activateInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Activate an Inline Hook
      tags:
      - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      description: Deactivates the inline hook by `inlineHookId`
      operationId: deactivateInlineHook
      parameters:
      - description: '`id` of the Inline Hook'
        explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          example: Y7Rzrd4g4xj6WdKzrBHH
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.inlineHooks.manage
      summary: Deactivate an Inline Hook
      tags:
      - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/logStreams:
    get:
      description: Lists all Log Stream objects in your org. You can request a paginated
        list or a subset of Log Streams that match a supported filter expression.
      operationId: listLogStreams
      parameters:
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "An expression that [filters](/#filter) the returned objects.\
          \ You can only use the `eq` operator on either the `status` or `type` properties\
          \ in the filter expression."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          example: type eq "aws_eventbridge"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ExampleGetAllResponse:
                  $ref: '#/components/examples/LogStreamGetAllResponse'
              schema:
                items:
                  $ref: '#/components/schemas/listLogStreams_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.read
      summary: List all Log Streams
      tags:
      - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates a new Log Stream object
      operationId: createLogStream
      requestBody:
        content:
          application/json:
            examples:
              LogStreamPostRequestExample:
                $ref: '#/components/examples/LogStreamPostRequest'
            schema:
              $ref: '#/components/schemas/listLogStreams_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
              schema:
                $ref: '#/components/schemas/listLogStreams_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.manage
      summary: Create a Log Stream
      tags:
      - LogStream
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/logStreams/{logStreamId}:
    delete:
      description: Deletes a Log Stream object from your org by ID
      operationId: deleteLogStream
      parameters:
      - description: Unique identifier for the Log Stream
        explode: false
        in: path
        name: logStreamId
        required: true
        schema:
          example: 0oa1orzg0CHSgPcjZ0g4
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.manage
      summary: Delete a Log Stream
      tags:
      - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves a Log Stream object by ID
      operationId: getLogStream
      parameters:
      - description: Unique identifier for the Log Stream
        explode: false
        in: path
        name: logStreamId
        required: true
        schema:
          example: 0oa1orzg0CHSgPcjZ0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                LogStreamGetRequestExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
              schema:
                $ref: '#/components/schemas/listLogStreams_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.read
      summary: Retrieve a Log Stream
      tags:
      - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    put:
      description: |-
        Replaces the Log Stream object properties for a given ID.

        This operation is typically used to update the configuration of a Log Stream.
        Depending on the type of Log Stream you want to update, certain properties can't be modified after the Log Stream is initially created.
        Use the [Retrieve the Log Stream Schema for the schema type](/openapi/okta-management/management/tag/Schema/#tag/Schema/operation/getLogStreamSchema) request to determine which properties you can update for the specific Log Stream type.
        Log Stream properties with the `"writeOnce" : true` attribute can't be updated after creation.
        You must still specify these `writeOnce` properties in the request body with the original values in the PUT request.

        > **Note:** You don't have to specify properties that have both the `"writeOnce": true` and the `"writeOnly": true` attributes in the PUT request body. These property values are ignored even if you add them in the PUT request body.
      operationId: replaceLogStream
      parameters:
      - description: Unique identifier for the Log Stream
        explode: false
        in: path
        name: logStreamId
        required: true
        schema:
          example: 0oa1orzg0CHSgPcjZ0g4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              LogStreamPutRequestExample:
                $ref: '#/components/examples/LogStreamPutRequest'
            schema:
              $ref: '#/components/schemas/replaceLogStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPutResponse'
              schema:
                $ref: '#/components/schemas/listLogStreams_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.manage
      summary: Replace a Log Stream
      tags:
      - LogStream
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/logStreams/{logStreamId}/lifecycle/activate:
    post:
      description: Activates a log stream by `logStreamId`
      operationId: activateLogStream
      parameters:
      - description: Unique identifier for the Log Stream
        explode: false
        in: path
        name: logStreamId
        required: true
        schema:
          example: 0oa1orzg0CHSgPcjZ0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                LogStreamActivateResponseExample:
                  $ref: '#/components/examples/LogStreamActivateResponse'
              schema:
                $ref: '#/components/schemas/listLogStreams_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.manage
      summary: Activate a Log Stream
      tags:
      - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/logStreams/{logStreamId}/lifecycle/deactivate:
    post:
      description: Deactivates a log stream by `logStreamId`
      operationId: deactivateLogStream
      parameters:
      - description: Unique identifier for the Log Stream
        explode: false
        in: path
        name: logStreamId
        required: true
        schema:
          example: 0oa1orzg0CHSgPcjZ0g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                LogStreamDeactivateResponseExample:
                  $ref: '#/components/examples/LogStreamDeactivateResponse'
              schema:
                $ref: '#/components/schemas/listLogStreams_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.manage
      summary: Deactivate a Log Stream
      tags:
      - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/logs:
    get:
      description: Lists all system log events. The Okta System Log API provides read
        access to your organization’s system log. This API provides more functionality
        than the Events API
      operationId: listLogEvents
      parameters:
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASCENDING
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEvent'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logs.read
      summary: List all System Log Events
      tags:
      - SystemLog
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/mappings:
    get:
      description: |-
        Lists all profile mappings in your organization with [pagination](https://developer.okta.com/docs/api/#pagination). You can return a subset of profile mappings that match a supported `sourceId` and/or `targetId`.
        The results are [paginated](/#pagination) according to the limit parameter. If there are multiple pages of results, the Link header contains a `next` link that should be treated as an opaque value (follow it, don't parse it).

        The response is a collection of profile mappings that include a subset of the profile mapping object's parameters. The profile mapping object describes
        the properties mapping between an Okta User and an App User Profile using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).
      operationId: listProfileMappings
      parameters:
      - description: Mapping `id` that specifies the pagination cursor for the next
          page of mappings
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results per page (maximum 200)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: "The UserType or App Instance `id` that acts as the source of\
          \ expressions in a mapping. If this parameter is included, all returned\
          \ mappings have this as their `source.id`."
        explode: true
        in: query
        name: sourceId
        required: false
        schema:
          type: string
        style: form
      - description: "The UserType or App Instance `id` that acts as the target of\
          \ expressions in a mapping. If this parameter is included, all returned\
          \ mappings have this as their `target.id`."
        explode: true
        in: query
        name: targetId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                MappingList:
                  $ref: '#/components/examples/ListMappingsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ListProfileMappings'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.profileMappings.read
      summary: List all Profile Mappings
      tags:
      - ProfileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/mappings/{mappingId}:
    get:
      description: Retrieves a single Profile Mapping referenced by its ID
      operationId: getProfileMapping
      parameters:
      - description: '`id` of the Mapping'
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          example: cB6u7X8mptebWkffatKA
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                MappingRetrieve:
                  $ref: '#/components/examples/RetrieveMappingsResponse'
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.profileMappings.read
      summary: Retrieve a Profile Mapping
      tags:
      - ProfileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: "Updates an existing profile mapping by adding, updating, or removing\
        \ one or many property mappings"
      operationId: updateProfileMapping
      parameters:
      - description: '`id` of the Mapping'
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          example: cB6u7X8mptebWkffatKA
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Addpropertymapping:
                $ref: '#/components/examples/AddMappingBody'
              Updatepropertymapping:
                $ref: '#/components/examples/UpdateMappingBody'
              Removepropertymapping:
                $ref: '#/components/examples/RemoveMappingBody'
            schema:
              $ref: '#/components/schemas/ProfileMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Addpropertymapping:
                  $ref: '#/components/examples/AddMappingResponse'
                Updatepropertymapping:
                  $ref: '#/components/examples/UpdateMappingResponse'
                Removepropertymapping:
                  $ref: '#/components/examples/RemoveMappingResponse'
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.profileMappings.manage
      summary: Update a Profile Mapping
      tags:
      - ProfileMapping
      x-codegen-request-body-name: profileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/meta/layouts/apps/{appName}: {}
  /api/v1/meta/layouts/apps/{appName}/sections/{section}/{operation}: {}
  /api/v1/meta/schemas/apps/{appId}/default:
    get:
      description: Retrieves the Schema for an App User
      operationId: getApplicationUserSchema
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.read
      summary: Retrieve the default Application User Schema for an Application
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Partially updates on the User Profile properties of the Application
        User Schema
      operationId: updateApplicationUserProfile
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Add a custom property to the app user schema:
                $ref: '#/components/examples/AppUserSchemaAddRequest'
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/AppUserSchemaResponse'
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.manage
      summary: Update the default Application User Schema for an Application
      tags:
      - Schema
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/schemas/group/default:
    get:
      description: Retrieves the group schema
      operationId: getGroupSchema
      parameters: []
      responses:
        "200":
          content:
            application/json:
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/GroupSchemaResponse'
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.read
      summary: Retrieve the default Group Schema
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Updates the default group schema. This updates, adds, or removes\
        \ one or more custom Group Profile properties in the schema."
      operationId: updateGroupSchema
      requestBody:
        content:
          application/json:
            examples:
              Add a custom property to the group schema:
                $ref: '#/components/examples/GroupSchemaAddRequest'
            schema:
              $ref: '#/components/schemas/GroupSchema'
      responses:
        "200":
          content:
            application/json:
              example:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/GroupSchemaResponse'
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.manage
      summary: Update the default Group Schema
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/schemas/logStream:
    get:
      description: Lists the schema for all log stream types visible for this org
      operationId: listLogStreamSchemas
      responses:
        "200":
          content:
            application/json:
              examples:
                All log stream schemas for your org:
                  $ref: '#/components/examples/LogStreamSchemaList'
              schema:
                items:
                  $ref: '#/components/schemas/LogStreamSchema'
                type: array
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.read
      summary: List the Log Stream Schemas
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/meta/schemas/logStream/{logStreamType}:
    get:
      description: "Retrieves the schema for a Log Stream type. The `logStreamType`\
        \ element in the URL specifies the Log Stream type, which is either `aws_eventbridge`\
        \ or `splunk_cloud_logstreaming`. Use the `aws_eventbridge` literal to retrieve\
        \ the AWS EventBridge type schema, and use the `splunk_cloud_logstreaming`\
        \ literal retrieve the Splunk Cloud type schema."
      operationId: getLogStreamSchema
      parameters:
      - explode: false
        in: path
        name: logStreamType
        required: true
        schema:
          $ref: '#/components/schemas/LogStreamType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Schema for type `aws_eventbridge`:
                  $ref: '#/components/examples/LogStreamSchemaAws'
                Schema for type `splunk_cloud_logstreaming`:
                  $ref: '#/components/examples/LogStreamSchemaSplunk'
              schema:
                $ref: '#/components/schemas/LogStreamSchema'
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.logStreams.read
      summary: Retrieve the Log Stream Schema for the schema type
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      description: Lists all Linked Object definitions
      operationId: listLinkedObjectDefinitions
      responses:
        "200":
          content:
            application/json:
              examples:
                ListLinkedObjectsEx:
                  $ref: '#/components/examples/ListLinkedObjects'
              schema:
                items:
                  $ref: '#/components/schemas/LinkedObject'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.linkedObjects.read
      summary: List all Linked Object Definitions
      tags:
      - LinkedObject
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a Linked Object definition
      operationId: createLinkedObjectDefinition
      requestBody:
        content:
          application/json:
            examples:
              CreateLinkedObjectRequestEx:
                $ref: '#/components/examples/CreateLinkedObjectRequest'
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateLinkedObjectResponseEx:
                  $ref: '#/components/examples/CreateLinkedObjectResponse'
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "409":
          content:
            application/json:
              examples:
                ErrorInvalidLinkedObjectDefEx:
                  $ref: '#/components/examples/ErrorInvalidLinkedObjectDef'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.linkedObjects.manage
      summary: Create a Linked Object Definition
      tags:
      - LinkedObject
      x-codegen-request-body-name: linkedObject
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    delete:
      description: "Deletes the Linked Object definition specified by either the `primary`\
        \ or `associated` name. The entire definition is removed, regardless of which\
        \ name that you specify."
      operationId: deleteLinkedObjectDefinition
      parameters:
      - description: Primary or Associated name
        explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.linkedObjects.manage
      summary: Delete a Linked Object Definition
      tags:
      - LinkedObject
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a Linked Object definition
      operationId: getLinkedObjectDefinition
      parameters:
      - description: Primary or Associated name
        explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateLinkedObjectResponseEx:
                  $ref: '#/components/examples/CreateLinkedObjectResponse'
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.linkedObjects.read
      summary: Retrieve a Linked Object Definition
      tags:
      - LinkedObject
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/schemas/user/{schemaId}:
    get:
      description: Retrieves the schema for a Schema Id
      operationId: getUserSchema
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/UserSchemaResponse'
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.read
      summary: Retrieve a User Schema
      tags:
      - Schema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Partially updates on the User Profile properties of the user schema
      operationId: updateUserProfile
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Add a custom property to the user schema:
                $ref: '#/components/examples/UserSchemaAddRequest'
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Response with a subset of properties for brevity:
                  $ref: '#/components/examples/UserSchemaResponse'
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.schemas.manage
      summary: Update a User Schema
      tags:
      - Schema
      x-codegen-request-body-name: userSchema
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/types/user:
    get:
      description: Lists all User Types in your org
      operationId: listUserTypes
      responses:
        "200":
          content:
            application/json:
              examples:
                ListsAllUserTypes:
                  $ref: '#/components/examples/ListsAllUserTypes'
              schema:
                items:
                  $ref: '#/components/schemas/UserType'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.read
      summary: List all User Types
      tags:
      - UserType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Creates a new User Type. Okta automatically creates a `default` User Type for your org. You may add up to nine additional User Types.
        > **Note**: New User Types are based on the current default schema template. Modifications to this schema do not automatically propagate to previously created User Types.
      operationId: createUserType
      requestBody:
        content:
          application/json:
            examples:
              CreateUserRequest:
                $ref: '#/components/examples/CreateUserRequest'
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateUserResponse:
                  $ref: '#/components/examples/CreateUserResponse'
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.manage
      summary: Create a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/types/user/{typeId}:
    delete:
      description: |-
        Deletes a User Type permanently.
        > **Note**: You can't delete the default User Type or a User Type that is currently assigned to users.
      operationId: deleteUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          description: The unique key for the User Type
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.manage
      summary: Delete a User Type
      tags:
      - UserType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a User Type by ID. Use `default` to fetch the default
        User Type.
      operationId: getUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          description: The unique key for the User Type
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetUserResponse:
                  $ref: '#/components/examples/GetUserResponse'
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.read
      summary: Retrieve a User Type
      tags:
      - UserType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Updates an existing User Type. This operation is a partial update.
        > **Note**: You can only update the `displayName` and `description` elements. The `name` of an existing User Type can't be changed.
      operationId: updateUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          description: The unique key for the User Type
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              UpdateUserTypePostRequest:
                $ref: '#/components/examples/UpdateUserTypePostRequest'
            schema:
              $ref: '#/components/schemas/UserTypePostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                UpdateUserTypePutRequest:
                  $ref: '#/components/examples/UpdateUserTypePostResponse'
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.manage
      summary: Update a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |-
        Replaces an existing User Type. This operation is a full update.
        > **Note**: The `name` of an existing User Type can't be changed, but must be part of the request body. You can only replace the `displayName` and `description` elements.
      operationId: replaceUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          description: The unique key for the User Type
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ReplaceUserTypePutRequest:
                $ref: '#/components/examples/ReplaceUserTypePutRequest'
            schema:
              $ref: '#/components/schemas/UserTypePutRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                ReplaceUserTypePutResponse:
                  $ref: '#/components/examples/ReplaceUserTypePutResponse'
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.userTypes.manage
      summary: Replace a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/meta/uischemas:
    get:
      description: Lists all UI Schemas in your org
      operationId: listUISchemas
      responses:
        "200":
          content:
            application/json:
              examples:
                UIISchemaList:
                  $ref: '#/components/examples/ListUISchemaResponse'
              schema:
                items:
                  $ref: '#/components/schemas/UISchemasResponseObject'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.uischemas.read
      summary: List all UI Schemas
      tags:
      - UISchema
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Creates an input for an enrollment form
      operationId: createUISchema
      requestBody:
        content:
          application/json:
            examples:
              UISchemaCreate:
                $ref: '#/components/examples/CreateUISchemaBody'
            schema:
              $ref: '#/components/schemas/CreateUISchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                UISchemaCreate:
                  $ref: '#/components/examples/CreateUISchemaResponse'
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.uischemas.manage
      summary: Create a UI Schema
      tags:
      - UISchema
      x-codegen-request-body-name: uischemabody
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/meta/uischemas/{id}:
    delete:
      description: Deletes a UI Schema by `id`
      operationId: deleteUISchemas
      parameters:
      - description: The unique ID of the UI Schema
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: uis4a7liocgcRgcxZ0g7
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.uischemas.manage
      summary: Delete a UI Schema
      tags:
      - UISchema
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves a UI Schema by `id`
      operationId: getUISchema
      parameters:
      - description: The unique ID of the UI Schema
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: uis4a7liocgcRgcxZ0g7
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                UISchemaRetrieve:
                  $ref: '#/components/examples/RetrieveUISchemaResponse'
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.uischemas.read
      summary: Retrieve a UI Schema
      tags:
      - UISchema
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces a UI Schema by `id`
      operationId: replaceUISchemas
      parameters:
      - description: The unique ID of the UI Schema
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: uis4a7liocgcRgcxZ0g7
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              UISchemaPUT:
                $ref: '#/components/examples/CreateUISchemaBody'
            schema:
              $ref: '#/components/schemas/UpdateUISchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                UISchemaUpdate:
                  $ref: '#/components/examples/CreateUISchemaResponse'
              schema:
                $ref: '#/components/schemas/UISchemasResponseObject'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.uischemas.manage
      summary: Replace a UI Schema
      tags:
      - UISchema
      x-codegen-request-body-name: updateUISchemaBody
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/org:
    get:
      description: Retrieves the org settings
      operationId: getOrgSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Org Settings
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Partially updates the org settings depending on provided fields
      operationId: updateOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Update the Org Settings
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the settings of your organization
      operationId: replaceOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Replace the Org Settings
      tags:
      - OrgSetting
      x-codegen-request-body-name: orgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/captcha:
    delete:
      description: Deletes the CAPTCHA settings object for your organization
      operationId: deleteOrgCaptchaSettings
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Delete the Org-wide CAPTCHA Settings
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: |-
        Retrieves the CAPTCHA settings object for your organization.
        > **Note**: If the current organization hasn't configured CAPTCHA Settings, the request returns an empty object.
      operationId: getOrgCaptchaSettings
      responses:
        "200":
          content:
            application/json:
              examples:
                configured:
                  $ref: '#/components/examples/OrgCAPTCHASettingsConfigured'
                empty:
                  $ref: '#/components/examples/OrgCAPTCHASettingsEmpty'
              schema:
                $ref: '#/components/schemas/OrgCAPTCHASettings'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.read
      summary: Retrieve the Org-wide CAPTCHA Settings
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: |-
        Replaces the CAPTCHA settings object for your organization.
        > **Note**: You can disable CAPTCHA for your organization by setting `captchaId` and `enabledPages` to `null`.
      operationId: replacesOrgCaptchaSettings
      requestBody:
        content:
          application/json:
            examples:
              Update:
                $ref: '#/components/examples/OrgCAPTCHASettingsUpdate'
              Disable:
                $ref: '#/components/examples/OrgCAPTCHASettingsDisable'
            schema:
              $ref: '#/components/schemas/OrgCAPTCHASettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update:
                  $ref: '#/components/examples/OrgCAPTCHASettingsUpdated'
                Disable:
                  $ref: '#/components/examples/OrgCAPTCHASettingsDisabled'
              schema:
                $ref: '#/components/schemas/OrgCAPTCHASettings'
          description: Success
        "400":
          content:
            application/json:
              examples:
                NoDisable:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSettingNull'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.captchas.manage
      summary: Replace the Org-wide CAPTCHA Settings
      tags:
      - CAPTCHA
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/org/contacts:
    get:
      description: Retrieves Contact Types of your organization
      operationId: getOrgContactTypes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgContactTypeObj'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Org Contact Types
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/contacts/{contactType}:
    get:
      description: Retrieves the URL of the User associated with the specified Contact
        Type
      operationId: getOrgContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the User of the Contact Type
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the User associated with the specified Contact Type
      operationId: replaceOrgContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgContactUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Replace the User of the Contact Type
      tags:
      - OrgSetting
      x-codegen-request-body-name: orgContactUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/email/bounces/remove-list:
    post:
      description: Removes a list of email addresses to be removed from the set of
        email addresses that are bounced
      operationId: bulkRemoveEmailAddressBounces
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  emailAddresses:
                  - name@company.com
                  - unknown.email@okta.com
                  - name@okta@com
            schema:
              $ref: '#/components/schemas/BouncesRemoveListObj'
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    errors:
                    - emailAddress: unknown.email@okta.com
                      reason: This email address does not belong to any user in your
                        organization.
                    - emailAddress: name@okta@com
                      reason: Invalid email address. The provided email address failed
                        validation against RFC 3696.
              schema:
                $ref: '#/components/schemas/BouncesRemoveListResult'
          description: Deletes the provided list of emails from the set of email addresses
            that are bounced so that the provider resumes sending emails to those
            addresses.
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Remove Emails from Email Provider Bounce List
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/logo:
    post:
      description: "Uploads and replaces the logo for your organization. The file\
        \ must be in PNG, JPG, or GIF format and less than 100kB in size. For best\
        \ results use landscape orientation, a transparent background, and a minimum\
        \ size of 300px by 50px to prevent upscaling."
      operationId: uploadOrgLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeLogo_request'
        description: logo file
      responses:
        "201":
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.apps.manage
      summary: Upload the Org Logo
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/orgSettings/thirdPartyAdminSetting:
    get:
      description: Retrieves the Third-Party Admin setting
      operationId: getThirdPartyAdminSetting
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyAdminSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Org Third-Party Admin setting
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates the Third-Party Admin setting
      operationId: updateThirdPartyAdminSetting
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyAdminSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Update the Org Third-Party Admin setting
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/preferences:
    get:
      description: Retrieves preferences of your organization
      operationId: getOrgPreferences
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Org Preferences
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      description: Updates the preference hide the Okta UI footer for all end users
        of your organization
      operationId: updateOrgHideOktaUIFooter
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Update the Preference to Hide the Okta Dashboard Footer
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/preferences/showEndUserFooter:
    post:
      description: Updates the preference to show the Okta UI footer for all end users
        of your organization
      operationId: updateOrgShowOktaUIFooter
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Update the Preference to Show the Okta Dashboard Footer
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaCommunication:
    get:
      description: Retrieves Okta Communication Settings of your organization
      operationId: getOktaCommunicationSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Okta Communication Settings
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      description: Opts in all users of this org to Okta Communication emails
      operationId: optInUsersToOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Opt in all Users to Okta Communication emails
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      description: Opts out all users of this org from Okta Communication emails
      operationId: optOutUsersFromOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Opt out all Users from Okta Communication emails
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaSupport:
    get:
      description: Retrieves Okta Support Settings of your organization
      operationId: getOrgOktaSupportSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Okta Support Settings
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      description: Extends the length of time that Okta Support can access your org
        by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: extendOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Extend Okta Support Access
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      description: Grants Okta Support temporary access your org as an administrator
        for eight hours
      operationId: grantOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Grant Okta Support Access to your Org
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      description: Revokes Okta Support access to your organization
      operationId: revokeOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Revoke Okta Support Access
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/org/settings/clientPrivilegesSetting:
    get:
      description: "Retrieves the Org settings to assign the [Super Admin role](https://help.okta.com/okta_help.htm?type=oie&id=ext_superadmin)\
        \ by default to a public client app"
      operationId: getClientPrivilegesSetting
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPrivilegesSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Org settings to assign the Super Admin role
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: "Assigns the [Super Admin role](https://help.okta.com/okta_help.htm?type=oie&id=ext_superadmin)\
        \ by default to a public client app"
      operationId: assignClientPrivilegesSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientPrivilegesSetting'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPrivilegesSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Assign the Super Admin role to a public client app
      tags:
      - OrgSetting
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies:
    get:
      description: Lists all policies with the specified type
      operationId: listPolicies
      parameters:
      - description: |-
          Specifies the type of policy to return. The following policy types are available only with the Okta Identity Engine - `ACCESS_POLICY`, `PROFILE_ENROLLMENT`, `CONTINUOUS_ACCESS`, and `ENTITY_RISK`.
          The `CONTINUOUS_ACCESS` and `ENTITY_RISK` are in Early Access (EA). Contact your Okta account team to enable these features.
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - OKTA_SIGN_ON
          - PASSWORD
          - MFA_ENROLL
          - IDP_DISCOVERY
          - ACCESS_POLICY
          - PROFILE_ENROLLMENT
          - CONTINUOUS_ACCESS (EA)
          - ENTITY_RISK (EA)
          type: string
        style: form
      - description: Refines the query by the `status` of the policy - `ACTIVE` or
          `INACTIVE`
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: Refines the query by sorting on the policy `name` in ascending
          order
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "Defines the number of policies returned, see [Pagination](https://developer.okta.com/docs/api/#pagination)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "End page cursor for pagination, see [Pagination](https://developer.okta.com/docs/api/#pagination)"
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listPolicies_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: List all Policies
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a policy
      operationId: createPolicy
      parameters:
      - description: This query parameter is only valid for Classic Engine orgs.
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Create a Policy
      tags:
      - Policy
      x-codegen-request-body-name: policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/simulate:
    post:
      description: |-
        Creates a policy or policy rule simulation. The access simulation evaluates policy and policy rules based on the existing policy rule configuration.
        The evaluation result simulates what the real-world authentication flow is and what policy rules have been applied or matched to the authentication flow.
      operationId: createPolicySimulation
      parameters:
      - description: Use `expand=EVALUATED` to include a list of evaluated but not
          matched policies and policy rules. Use `expand=RULE` to include details
          about why a rule condition was (not) matched.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: expand=EVALUATED&expand=RULE
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              SimulatePolicy:
                $ref: '#/components/examples/SimulatePolicyBody'
            schema:
              items:
                $ref: '#/components/schemas/SimulatePolicyBody'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                SimulatePolicy:
                  $ref: '#/components/examples/SimulatePolicyResponse'
              schema:
                $ref: '#/components/schemas/SimulatePolicyResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: Create a Policy Simulation
      tags:
      - Policy
      x-codegen-request-body-name: simulatePolicy
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/policies/{policyId}:
    delete:
      description: Deletes a policy
      operationId: deletePolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Delete a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a policy
      operationId: getPolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: Retrieve a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the properties of a Policy identified by `policyId`
      operationId: replacePolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Replace a Policy
      tags:
      - Policy
      x-codegen-request-body-name: policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/app:
    get:
      deprecated: true
      description: |-
        Lists all applications mapped to a policy identified by `policyId`

        > **Note:** Use [List all resources mapped to a Policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/#tag/Policy/operation/listPolicyMappings) to list all applications mapped to a policy.
      operationId: listPolicyApps
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: List all Applications mapped to a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/clone:
    post:
      description: Clones an existing policy
      operationId: clonePolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Clone an existing Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/policies/{policyId}/lifecycle/activate:
    post:
      description: Activates a policy
      operationId: activatePolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Activate a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivates a policy
      operationId: deactivatePolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Deactivate a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/mappings:
    get:
      description: Lists all resources mapped to a Policy identified by `policyId`
      operationId: listPolicyMappings
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PolicyMapping'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: List all resources mapped to a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Maps a resource to a Policy identified by `policyId`
      operationId: mapResourceToPolicy
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMapping'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Map a resource to a Policy
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/mappings/{mappingId}:
    delete:
      description: Deletes the resource Mapping for a Policy identified by  `policyId`
        and `mappingId`
      operationId: deletePolicyResourceMapping
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the policy resource Mapping'
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          example: maplr2rLjZ6NsGn1P0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Delete a policy resource Mapping
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a resource Mapping for a Policy identified by `policyId`
        and `mappingId`
      operationId: getPolicyMapping
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the policy resource Mapping'
        explode: false
        in: path
        name: mappingId
        required: true
        schema:
          example: maplr2rLjZ6NsGn1P0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyMapping'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: Retrieve a policy resource Mapping
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/rules:
    get:
      description: Lists all policy rules
      operationId: listPolicyRules
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listPolicyRules_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: List all Policy Rules
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a policy rule. **Note:** You can't create additional rules
        for the `PROFILE_ENROLLMENT` or `CONTINUOUS_ACCESS` policies.
      operationId: createPolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: Set this parameter to `false` to create an `INACTIVE` rule.
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              EnableSsprSecurityQuestionStepUp:
                $ref: '#/components/examples/sspr-enabled-sq-step-up'
              EnableSsprSSOStepUp:
                $ref: '#/components/examples/sspr-enabled-sso-step-up'
              EnableSsprNoStepUp:
                $ref: '#/components/examples/sspr-enabled-no-step-up'
              Enable2FAPreciseAuth:
                $ref: '#/components/examples/twofa-enabled-disallow-password-allow-phishing'
              EnableSpecificRoutingRule:
                $ref: '#/components/examples/idp-discovery-specific-routing-rule'
              EnableDynamicRoutingRule:
                $ref: '#/components/examples/idp-discovery-dynamic-routing-rule'
              CreateAuthPolicyRuleDevicePlatformCondition:
                $ref: '#/components/examples/create-auth-policy-rule-condition'
              EnableSsprWithConstraints:
                $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints'
            schema:
              $ref: '#/components/schemas/listPolicyRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-response'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-response'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-response'
                Enable2FAPreciseAuth:
                  $ref: '#/components/examples/twofa-enabled-disallow-password-allow-phishing-response'
                EnableSpecificRoutingRule:
                  $ref: '#/components/examples/idp-discovery-specific-routing-rule-response'
                EnableDynamicRoutingRule:
                  $ref: '#/components/examples/idp-discovery-dynamic-routing-rule-response'
                CreateAuthPolicyRuleDevicePlatformCondition:
                  $ref: '#/components/examples/create-auth-policy-rule-condition-response'
                EnableSsprWithConstraints:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-response'
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Create a Policy Rule
      tags:
      - Policy
      x-codegen-request-body-name: policyRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Deletes a Policy Rule identified by `policyId` and `ruleId`
      operationId: deletePolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Delete a Policy Rule
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a policy rule
      operationId: getPolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-update'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-update'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-update'
                EnableSsprWithConstraints:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-update'
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.read
      summary: Retrieve a Policy Rule
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the properties for a Policy Rule identified by `policyId`
        and `ruleId`
      operationId: replacePolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              EnableSsprSecurityQuestionStepUp:
                $ref: '#/components/examples/sspr-enabled-sq-step-up-update'
              EnableSsprSSOStepUp:
                $ref: '#/components/examples/sspr-enabled-sso-step-up-update'
              EnableSsprNoStepUp:
                $ref: '#/components/examples/sspr-enabled-no-step-up-update'
              UpdateAuthenticationPolicyRuleWithPlatformDeviceConstraints:
                $ref: '#/components/examples/update-auth-policy-rule-condition'
              EnableSsprWithConstraints:
                $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-update'
            schema:
              $ref: '#/components/schemas/listPolicyRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EnableSsprSecurityQuestionStepUp:
                  $ref: '#/components/examples/sspr-enabled-sq-step-up-response'
                EnableSsprSSOStepUp:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-response'
                EnableSsprNoStepUp:
                  $ref: '#/components/examples/sspr-enabled-no-step-up-response'
                UpdateAuthenticationPolicyRuleWithPlatformDeviceConstraints:
                  $ref: '#/components/examples/update-auth-policy-rule-condition-response'
                EnableSsprWithConstraints:
                  $ref: '#/components/examples/sspr-enabled-sso-step-up-with-constraints-response'
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Replace a Policy Rule
      tags:
      - Policy
      x-codegen-request-body-name: policyRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a Policy Rule identified by `policyId` and `ruleId`
      operationId: activatePolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Activate a Policy Rule
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a Policy Rule identified by `policyId` and `ruleId`
      operationId: deactivatePolicyRule
      parameters:
      - description: '`id` of the Policy'
        explode: false
        in: path
        name: policyId
        required: true
        schema:
          example: 00plrilJ7jZ66Gn0X0g3
          type: string
        style: simple
      - description: '`id` of the Policy Rule'
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          example: ruld3hJ7jZh4fn0st0g3
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.policies.manage
      summary: Deactivate a Policy Rule
      tags:
      - Policy
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/principal-rate-limits:
    get:
      description: Lists all Principal Rate Limit entities considering the provided
        parameters
      operationId: listPrincipalRateLimitEntities
      parameters:
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maximum: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrincipalRateLimitEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.principalRateLimits.read
      summary: List all Principal Rate Limits
      tags:
      - PrincipalRateLimit
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Creates a new Principal Rate Limit entity. In the current release,\
        \ we only allow one Principal Rate Limit entity per org and principal."
      operationId: createPrincipalRateLimitEntity
      requestBody:
        content:
          application/json:
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.principalRateLimits.manage
      summary: Create a Principal Rate Limit
      tags:
      - PrincipalRateLimit
      x-codegen-request-body-name: entity
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/principal-rate-limits/{principalRateLimitId}:
    get:
      description: Retrieves a Principal Rate Limit entity by `principalRateLimitId`
      operationId: getPrincipalRateLimitEntity
      parameters:
      - description: id of the Principal Rate Limit
        explode: false
        in: path
        name: principalRateLimitId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.principalRateLimits.read
      summary: Retrieve a Principal Rate Limit
      tags:
      - PrincipalRateLimit
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a principal rate limit entity by `principalRateLimitId`
      operationId: replacePrincipalRateLimitEntity
      parameters:
      - description: id of the Principal Rate Limit
        explode: false
        in: path
        name: principalRateLimitId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.principalRateLimits.manage
      summary: Replace a Principal Rate Limit
      tags:
      - PrincipalRateLimit
      x-codegen-request-body-name: entity
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/push-providers:
    get:
      description: Lists all push providers
      operationId: listPushProviders
      parameters:
      - description: Filters push providers by `providerType`
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ProviderType'
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                value:
                - id: ppchvbeucdTgqeiGxR0g4
                  providerType: APNS
                  name: Example Push Provider 1
                  lastUpdatedDate: 2022-01-00T00:00:00.000Z
                  configuration:
                    keyId: ABC123DEFG
                    teamId: DEF123GHIJ
                    fileName: fileName.p8
                  _links:
                    self:
                      href: "https://your-subdomain.okta.com/api/v1/push-providers/{pushProviderId}"
                      hints:
                        allow:
                        - DELETE
                        - GET
                        - PUT
                - id: ppctekcmngGaqeiBxB0g4
                  providerType: FCM
                  name: Example Push Provider 2
                  lastUpdatedDate: 2022-01-00T00:00:00.000Z
                  configuration:
                    projectId: PROJECT_ID
                    fileName: fileName.json
                  _links:
                    self:
                      href: "https://your-subdomain.okta.com/api/v1/push-providers/{pushProviderId}"
                      hints:
                        allow:
                        - DELETE
                        - GET
                        - PUT
              schema:
                items:
                  $ref: '#/components/schemas/listPushProviders_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.pushProviders.read
      summary: List all Push Providers
      tags:
      - PushProvider
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: Creates a new push provider. Each Push Provider must have a unique
        `name`.
      operationId: createPushProvider
      requestBody:
        content:
          application/json:
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
            schema:
              $ref: '#/components/schemas/listPushProviders_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.pushProviders.manage
      summary: Create a Push Provider
      tags:
      - PushProvider
      x-codegen-request-body-name: pushProvider
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/push-providers/{pushProviderId}:
    delete:
      description: "Deletes a push provider by `pushProviderId`. If the push provider\
        \ is currently being used in the org by a custom authenticator, the delete\
        \ will not be allowed."
      operationId: deletePushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot remove push provider in use by a custom app authenticator:
                  $ref: '#/components/examples/ErrorPushProviderUsedByCustomAppAuthenticator'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.pushProviders.manage
      summary: Delete a Push Provider
      tags:
      - PushProvider
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: Retrieves a push provider by `pushProviderId`
      operationId: getPushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.pushProviders.read
      summary: Retrieve a Push Provider
      tags:
      - PushProvider
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces a push provider by `pushProviderId`
      operationId: replacePushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
            schema:
              $ref: '#/components/schemas/listPushProviders_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.pushProviders.manage
      summary: Replace a Push Provider
      tags:
      - PushProvider
      x-codegen-request-body-name: pushProvider
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/rate-limit-settings/admin-notifications:
    get:
      description: Retrieves the currently configured Rate Limit Admin Notification
        Settings
      operationId: getRateLimitSettingsAdminNotifications
      responses:
        "200":
          content:
            application/json:
              examples:
                Enabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
                Disabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
              schema:
                $ref: '#/components/schemas/RateLimitAdminNotifications'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.read
      summary: Retrieve the Rate Limit Admin Notification Settings
      tags:
      - RateLimitSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the Rate Limit Admin Notification Settings and returns
        the configured properties
      operationId: replaceRateLimitSettingsAdminNotifications
      requestBody:
        content:
          application/json:
            examples:
              Enabled:
                $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
              Disabled:
                $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
            schema:
              $ref: '#/components/schemas/RateLimitAdminNotifications'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Enabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsEnabled'
                Disabled:
                  $ref: '#/components/examples/RateLimitAdminNotificationsDisabled'
              schema:
                $ref: '#/components/schemas/RateLimitAdminNotifications'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.manage
      summary: Replace the Rate Limit Admin Notification Settings
      tags:
      - RateLimitSettings
      x-codegen-request-body-name: RateLimitAdminNotifications
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/rate-limit-settings/per-client:
    get:
      description: Retrieves the currently configured Per-Client Rate Limit Settings
      operationId: getRateLimitSettingsPerClient
      responses:
        "200":
          content:
            application/json:
              examples:
                EnforceDefault:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
                EnforceDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
                PreviewDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
              schema:
                $ref: '#/components/schemas/PerClientRateLimitSettings'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.read
      summary: Retrieve the Per-Client Rate Limit Settings
      tags:
      - RateLimitSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the Per-Client Rate Limit Settings and returns the configured
        properties
      operationId: replaceRateLimitSettingsPerClient
      requestBody:
        content:
          application/json:
            examples:
              EnforceDefault:
                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
              EnforceDefaultWithOverrides:
                $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
              PreviewDefaultWithOverrides:
                $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
            schema:
              $ref: '#/components/schemas/PerClientRateLimitSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EnforceDefault:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefault'
                EnforceDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsEnforceDefaultWithOverrides'
                PreviewDefaultWithOverrides:
                  $ref: '#/components/examples/PerClientRateLimitSettingsPreviewDefaultWithOverrides'
              schema:
                $ref: '#/components/schemas/PerClientRateLimitSettings'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.manage
      summary: Replace the Per-Client Rate Limit Settings
      tags:
      - RateLimitSettings
      x-codegen-request-body-name: perClientRateLimitSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/rate-limit-settings/warning-threshold:
    get:
      description: Retrieves the currently configured threshold for warning notifications
        when the API's rate limit is exceeded
      operationId: getRateLimitSettingsWarningThreshold
      responses:
        "200":
          content:
            application/json:
              examples:
                ExampleThreshold:
                  $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
              schema:
                $ref: '#/components/schemas/RateLimitWarningThresholdResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.read
      summary: Retrieve the Rate Limit Warning Threshold Percentage
      tags:
      - RateLimitSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the Rate Limit Warning Threshold Percentage and returns
        the configured property
      operationId: replaceRateLimitSettingsWarningThreshold
      requestBody:
        content:
          application/json:
            examples:
              ExampleThreshold:
                $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
            schema:
              $ref: '#/components/schemas/RateLimitWarningThresholdRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                ExampleThreshold:
                  $ref: '#/components/examples/RateLimitWarningThresholdValidExample'
              schema:
                $ref: '#/components/schemas/RateLimitWarningThresholdResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.rateLimits.manage
      summary: Replace the Rate Limit Warning Threshold Percentage
      tags:
      - RateLimitSettings
      x-codegen-request-body-name: RateLimitWarningThreshold
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/realm-assignments:
    get:
      description: Lists all Realm Assignments
      operationId: listRealmAssignments
      parameters:
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                AssignmentLists:
                  $ref: '#/components/examples/ListRealmAssignmentsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/RealmAssignment'
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.read
      summary: List all Realm Assignments
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates a new Realm Assignment
      operationId: createRealmAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRealmAssignmentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmAssignment'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Create a Realm Assignment
      tags:
      - RealmAssignment
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realm-assignments/operations:
    get:
      description: Lists all Realm Assignment operations. The upper limit is 200 and
        operations are sorted in descending order from most recent to oldest by id
      operationId: listRealmAssignmentOperations
      parameters:
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Executions:
                  value:
                  - id: rre4mje4ez6B2a7B60g7
                    type: realm:assignment
                    status: COMPLETED
                    created: 2023-10-25T21:02:54.000Z
                    started: 2023-10-25T21:02:54.000Z
                    completed: 2023-10-25T21:02:54.000Z
                    realmId: 00g1b7rvh0xPLKXFf0g5
                    realmName: Realm Name
                    assignmentOperation:
                      configuration:
                        id: 0pr1b7rxZj2ibQzfP0g5
                        name: Realm Assignment 1
                        conditions:
                          profileSourceId: 0oa4enoRyjwSCy5hx0g4
                          expression:
                            value: string
                        actions:
                          assignUserToRealm:
                            realmId: 00g1b7rvh0xPLKXFf0g5
                    numUserMoved: 50
                    _links:
                      self:
                        rel: self
                        href: http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez6B2a7B60g7
                        method: GET
                  - id: rre4mje4ez7B2a7B60g7
                    type: realm:assignment
                    status: COMPLETED
                    created: 2023-10-25T21:02:54.000Z
                    started: 2023-10-25T21:02:54.000Z
                    completed: 2023-10-25T21:02:54.000Z
                    assignmentOperation:
                      configuration:
                        id: ALL
                        name: All Assignments
                    numUserMoved: 50
                    _links:
                      self:
                        rel: self
                        href: http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez7B2a7B60g7
                        method: GET
              schema:
                items:
                  $ref: '#/components/schemas/OperationResponse'
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.read
      summary: List all Realm Assignment operations
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Executes a Realm Assignment
      operationId: executeRealmAssignment
      requestBody:
        content:
          application/json:
            examples:
              ExecuteSpecificAssignment:
                value:
                  assignmentId: 0pr1b7rxZj2ibQzfP0g5
              ExecuteAllAssignments:
                value:
                  assignmentId: ALL
            schema:
              $ref: '#/components/schemas/OperationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Execution:
                  $ref: '#/components/examples/OperationResponse'
              schema:
                $ref: '#/components/schemas/OperationResponse'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Execute a Realm Assignment
      tags:
      - RealmAssignment
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realm-assignments/{assignmentId}:
    delete:
      description: Deletes a Realm Assignment
      operationId: deleteRealmAssignment
      parameters:
      - description: '`id` of the Realm Assignment'
        explode: false
        in: path
        name: assignmentId
        required: true
        schema:
          example: rul2jy7jLUlnO3ng00g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Delete a Realm Assignment
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves a Realm Assignment
      operationId: getRealmAssignment
      parameters:
      - description: '`id` of the Realm Assignment'
        explode: false
        in: path
        name: assignmentId
        required: true
        schema:
          example: rul2jy7jLUlnO3ng00g4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RealmAssignment:
                  $ref: '#/components/examples/GetRealmAssignmentResponse'
                CatchAllRealmAssignment:
                  $ref: '#/components/examples/DefaultRealmAssignment'
              schema:
                $ref: '#/components/schemas/RealmAssignment'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.read
      summary: Retrieve a Realm Assignment
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    put:
      description: Replaces a Realm Assignment
      operationId: replaceRealmAssignment
      parameters:
      - description: '`id` of the Realm Assignment'
        explode: false
        in: path
        name: assignmentId
        required: true
        schema:
          example: rul2jy7jLUlnO3ng00g4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRealmAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmAssignment'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Replace a Realm Assignment
      tags:
      - RealmAssignment
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realm-assignments/{assignmentId}/lifecycle/activate:
    post:
      description: Activates a Realm Assignment
      operationId: activateRealmAssignment
      parameters:
      - description: '`id` of the Realm Assignment'
        explode: false
        in: path
        name: assignmentId
        required: true
        schema:
          example: rul2jy7jLUlnO3ng00g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Activate a Realm Assignment
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realm-assignments/{assignmentId}/lifecycle/deactivate:
    post:
      description: Deactivates a Realm Assignment
      operationId: deactivateRealmAssignment
      parameters:
      - description: '`id` of the Realm Assignment'
        explode: false
        in: path
        name: assignmentId
        required: true
        schema:
          example: rul2jy7jLUlnO3ng00g4
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realmAssignments.manage
      summary: Deactivate a Realm Assignment
      tags:
      - RealmAssignment
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realms:
    get:
      description: Lists all Realms
      operationId: listRealms
      parameters:
      - description: Specifies the number of results returned. Defaults to 10 if `search`
          is provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Searches for Realms with a supported filtering expression for
          most properties
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Specifies field to sort by and can be any single property (for
          search queries only).
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          example: profile.name
          type: string
        style: form
      - description: Specifies sort order `asc` or `desc` (for search queries only).
          This parameter is ignored if `sortBy` isn't present.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Realm Lists:
                  $ref: '#/components/examples/ListRealmsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/Realm'
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realms.read
      summary: List all Realms
      tags:
      - Realm
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates a new Realm
      operationId: createRealm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRealmRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realms.manage
      summary: Create a Realm
      tags:
      - Realm
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/realms/{realmId}:
    delete:
      description: Deletes a Realm permanently. This operation can only be performed
        after disassociating other entities like Users and Identity Providers from
        a Realm.
      operationId: deleteRealm
      parameters:
      - description: '`id` of the Realm'
        explode: false
        in: path
        name: realmId
        required: true
        schema:
          example: vvrcFogtKCrK9aYq3fgV
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realms.manage
      summary: Delete a Realm
      tags:
      - Realm
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves a Realm
      operationId: getRealm
      parameters:
      - description: '`id` of the Realm'
        explode: false
        in: path
        name: realmId
        required: true
        schema:
          example: vvrcFogtKCrK9aYq3fgV
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                DefaultRealm:
                  $ref: '#/components/examples/DefaultRealmResponse'
                NonDefaultRealm:
                  $ref: '#/components/examples/RealmResponse'
              schema:
                $ref: '#/components/schemas/Realm'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realms.read
      summary: Retrieve a Realm
      tags:
      - Realm
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    put:
      description: Replaces the realm profile
      operationId: replaceRealm
      parameters:
      - description: '`id` of the Realm'
        explode: false
        in: path
        name: realmId
        required: true
        schema:
          example: vvrcFogtKCrK9aYq3fgV
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRealmRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Realm'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.realms.manage
      summary: Replace the realm profile
      tags:
      - Realm
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/resource-selectors/{resourceSelectorId}: {}
  /api/v1/risk/events/ip:
    post:
      description: |-
        Sends multiple IP risk events to Okta.
        This request is used by a third-party risk provider to send IP risk events to Okta. The third-party risk provider needs to be registered with Okta before they can send events to Okta. See [Risk Providers](/openapi/okta-management/management/tag/RiskProvider/).
        This API has a rate limit of 30 requests per minute. You can include multiple risk events (up to a maximum of 20 events) in a single payload to reduce the number of API calls. Prioritize sending high risk signals if you have a burst of signals to send that would exceed the maximum request limits.
      operationId: sendRiskEvents
      requestBody:
        content:
          application/json:
            examples:
              RiskEventsRequestExample:
                $ref: '#/components/examples/RiskEventsRequestExample'
            schema:
              items:
                $ref: '#/components/schemas/RiskEvent'
              type: array
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskEvents.manage
      summary: Send multiple Risk Events
      tags:
      - RiskEvent
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/risk/providers:
    get:
      description: Lists all Risk Provider objects
      operationId: listRiskProviders
      responses:
        "200":
          content:
            application/json:
              examples:
                RiskProviderList:
                  $ref: '#/components/examples/ListRiskProviderResponse'
              schema:
                items:
                  $ref: '#/components/schemas/RiskProvider'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskProviders.read
      summary: List all Risk Providers
      tags:
      - RiskProvider
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates a Risk Provider object. A maximum of three Risk Provider
        objects can be created.
      operationId: createRiskProvider
      requestBody:
        content:
          application/json:
            examples:
              RiskProviderRequestExample:
                $ref: '#/components/examples/RiskProviderRequest'
            schema:
              $ref: '#/components/schemas/RiskProvider'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                RiskProviderPostResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
              schema:
                $ref: '#/components/schemas/RiskProvider'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskProviders.manage
      summary: Create a Risk Provider
      tags:
      - RiskProvider
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/risk/providers/{riskProviderId}:
    delete:
      description: Deletes a Risk Provider object by its ID
      operationId: deleteRiskProvider
      parameters:
      - description: '`id` of the Risk Provider object'
        explode: false
        in: path
        name: riskProviderId
        required: true
        schema:
          example: 00rp12r4skkjkjgsn
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskProviders.manage
      summary: Delete a Risk Provider
      tags:
      - RiskProvider
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves a Risk Provider object by ID
      operationId: getRiskProvider
      parameters:
      - description: '`id` of the Risk Provider object'
        explode: false
        in: path
        name: riskProviderId
        required: true
        schema:
          example: 00rp12r4skkjkjgsn
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RiskProviderGetResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
              schema:
                $ref: '#/components/schemas/RiskProvider'
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskProviders.read
      summary: Retrieve a Risk Provider
      tags:
      - RiskProvider
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    put:
      description: Replaces the properties for a given Risk Provider object ID
      operationId: replaceRiskProvider
      parameters:
      - description: '`id` of the Risk Provider object'
        explode: false
        in: path
        name: riskProviderId
        required: true
        schema:
          example: 00rp12r4skkjkjgsn
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              RiskProviderPutRequestExample:
                $ref: '#/components/examples/RiskProviderPutRequest'
            schema:
              $ref: '#/components/schemas/RiskProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                RiskProviderPutResponseExample:
                  $ref: '#/components/examples/RiskProviderPutResponse'
              schema:
                $ref: '#/components/schemas/RiskProvider'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.riskProviders.manage
      summary: Replace a Risk Provider
      tags:
      - RiskProvider
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/roles/{roleRef}/subscriptions:
    get:
      description: Lists all subscriptions available to a specified Role
      operationId: listSubscriptionsRole
      parameters:
      - description: "A reference to an existing role. Standard roles require a `roleType`,\
          \ while Custom Roles require a `roleId`. See [Standard Roles](/openapi/okta-management/guides/roles/#standard-roles)."
        explode: false
        in: path
        name: roleRef
        required: true
        schema:
          $ref: '#/components/schemas/listSubscriptionsRole_roleRef_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Subscriptions for a Role
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}:
    get:
      description: Retrieves a subscription by `notificationType` for a specified
        Role
      operationId: getSubscriptionsNotificationTypeRole
      parameters:
      - description: "A reference to an existing role. Standard roles require a `roleType`,\
          \ while Custom Roles require a `roleId`. See [Standard Roles](/openapi/okta-management/guides/roles/#standard-roles)."
        explode: false
        in: path
        name: roleRef
        required: true
        schema:
          $ref: '#/components/schemas/listSubscriptionsRole_roleRef_parameter'
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Subscription for a Role
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/subscribe:
    post:
      description: Subscribes a Role to a specified notification type. Changes to
        Role subscriptions override the subscription status of any individual users
        with the Role.
      operationId: subscribeByNotificationTypeRole
      parameters:
      - description: "A reference to an existing role. Standard roles require a `roleType`,\
          \ while Custom Roles require a `roleId`. See [Standard Roles](/openapi/okta-management/guides/roles/#standard-roles)."
        explode: false
        in: path
        name: roleRef
        required: true
        schema:
          $ref: '#/components/schemas/listSubscriptionsRole_roleRef_parameter'
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      responses:
        "200":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Subscribe a Role to a Specific Notification Type
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: Unsubscribes a Role from a specified notification type. Changes
        to Role subscriptions override the subscription status of any individual users
        with the Role.
      operationId: unsubscribeByNotificationTypeRole
      parameters:
      - description: "A reference to an existing role. Standard roles require a `roleType`,\
          \ while Custom Roles require a `roleId`. See [Standard Roles](/openapi/okta-management/guides/roles/#standard-roles)."
        explode: false
        in: path
        name: roleRef
        required: true
        schema:
          $ref: '#/components/schemas/listSubscriptionsRole_roleRef_parameter'
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      responses:
        "200":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unsubscribe a Role from a Specific Notification Type
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/security-events-providers:
    get:
      description: Lists all Security Events Provider instances
      operationId: listSecurityEventsProviderInstances
      responses:
        "200":
          content:
            application/json:
              examples:
                list:
                  $ref: '#/components/examples/ListOfSecurityEventsProviderInstances'
              schema:
                items:
                  $ref: '#/components/schemas/SecurityEventsProviderResponse'
                type: array
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.read
      summary: List all Security Events Providers
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    post:
      description: Creates a Security Events Provider instance
      operationId: createSecurityEventsProviderInstance
      requestBody:
        content:
          application/json:
            examples:
              well-known-URL-provided:
                $ref: '#/components/examples/SecurityEventsProviderRequestWellKnownUrl'
              issuer-and-JWKS-URL-provided:
                $ref: '#/components/examples/SecurityEventsProviderRequestIssuerAndJwksUrl'
            schema:
              $ref: '#/components/schemas/SecurityEventsProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                well-known-URL-provided:
                  $ref: '#/components/examples/SecurityEventsProviderResponseWellKnownUrl'
                issuer-and-JWKS-URL-provided:
                  $ref: '#/components/examples/SecurityEventsProviderResponseIssuerAndJwksUrl'
              schema:
                $ref: '#/components/schemas/SecurityEventsProviderResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.manage
      summary: Create a Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      x-codegen-request-body-name: instance
  /api/v1/security-events-providers/{securityEventProviderId}:
    delete:
      description: Deletes a Security Events Provider instance specified by `id`
      operationId: deleteSecurityEventsProviderInstance
      parameters:
      - description: '`id` of the Security Events Provider instance'
        explode: false
        in: path
        name: securityEventProviderId
        required: true
        schema:
          example: sse1qg25RpusjUP6m0g5
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.manage
      summary: Delete a Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    get:
      description: Retrieves the Security Events Provider instance specified by `id`
      operationId: getSecurityEventsProviderInstance
      parameters:
      - description: '`id` of the Security Events Provider instance'
        explode: false
        in: path
        name: securityEventProviderId
        required: true
        schema:
          example: sse1qg25RpusjUP6m0g5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                get:
                  $ref: '#/components/examples/SecurityEventsProviderResponseWellKnownUrl'
              schema:
                $ref: '#/components/schemas/SecurityEventsProviderResponse'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.read
      summary: Retrieve the Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    put:
      description: Replaces a Security Events Provider instance specified by `id`
      operationId: replaceSecurityEventsProviderInstance
      parameters:
      - description: '`id` of the Security Events Provider instance'
        explode: false
        in: path
        name: securityEventProviderId
        required: true
        schema:
          example: sse1qg25RpusjUP6m0g5
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              well-known-URL-provided:
                $ref: '#/components/examples/SecurityEventsProviderRequestWellKnownUrl'
              issuer-and-JWKS-URL-provided:
                $ref: '#/components/examples/SecurityEventsProviderRequestIssuerAndJwksUrl'
            schema:
              $ref: '#/components/schemas/SecurityEventsProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                well-known-URL-provided:
                  $ref: '#/components/examples/SecurityEventsProviderResponseWellKnownUrl'
                issuer-and-JWKS-URL-provided:
                  $ref: '#/components/examples/SecurityEventsProviderResponseIssuerAndJwksUrl'
              schema:
                $ref: '#/components/schemas/SecurityEventsProviderResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.manage
      summary: Replace a Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      x-codegen-request-body-name: instance
  /api/v1/security-events-providers/{securityEventProviderId}/lifecycle/activate:
    post:
      description: |-
        Activates a Security Events Provider instance by setting its status to `ACTIVE`.
        This operation resumes the flow of events from the Security Events Provider to Okta.
      operationId: activateSecurityEventsProviderInstance
      parameters:
      - description: '`id` of the Security Events Provider instance'
        explode: false
        in: path
        name: securityEventProviderId
        required: true
        schema:
          example: sse1qg25RpusjUP6m0g5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                activatedInstance:
                  $ref: '#/components/examples/SecurityEventsProviderResponseWellKnownUrl'
              schema:
                $ref: '#/components/schemas/SecurityEventsProviderResponse'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.manage
      summary: Activate a Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/security-events-providers/{securityEventProviderId}/lifecycle/deactivate:
    post:
      description: |-
        Deactivates a Security Events Provider instance by setting its status to `INACTIVE`.
        This operation stops the flow of events from the Security Events Provider to Okta.
      operationId: deactivateSecurityEventsProviderInstance
      parameters:
      - description: '`id` of the Security Events Provider instance'
        explode: false
        in: path
        name: securityEventProviderId
        required: true
        schema:
          example: sse1qg25RpusjUP6m0g5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                deactivatedInstance:
                  $ref: '#/components/examples/DeactivatedSecurityEventsProviderResponse'
              schema:
                $ref: '#/components/schemas/SecurityEventsProviderResponse'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.securityEventsProviders.manage
      summary: Deactivate a Security Events Provider
      tags:
      - SSFReceiver
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/sessions:
    post:
      description: "Creates a new Session for a user with a valid session token. Use\
        \ this API if, for example, you want to set the session cookie yourself instead\
        \ of allowing Okta to set it, or want to hold the session ID to delete a session\
        \ through the API instead of visiting the logout URL."
      operationId: createSession
      requestBody:
        content:
          application/json:
            examples:
              SessionsCreate:
                $ref: '#/components/examples/CreateSessionBody'
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                SessionsCreate:
                  $ref: '#/components/examples/CreateSessionResponse'
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      summary: Create a Session with session token
      tags:
      - Session
      x-codegen-request-body-name: createSessionRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/sessions/me:
    delete:
      description: |-
        Closes the Session for the user who is currently signed in. Use this method in a browser-based application to sign out a user.

        > **Note:** This operation requires a session cookie for the user. An API token isn't allowed for this operation.
      operationId: closeCurrentSession
      parameters:
      - example: sid=abcde-123 or idx=abcde-123
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          description: Session ID (`sid`) or Identity Engine (`idx`) cookie
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security: []
      summary: Close the current Session
      tags:
      - Session
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: "Retrieves Session information for the current user. Use this method\
        \ in a browser-based application to determine if the user is signed in. \n\
        \n> **Note:** This operation requires a session cookie for the user. An API\
        \ token isn't allowed for this operation. "
      operationId: getCurrentSession
      parameters:
      - example: sid=abcde-123 or idx=abcde-123
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          description: Session ID (`sid`) or Identity Engine (`idx`) cookie
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CurrentSessionsRetrieve:
                  $ref: '#/components/examples/RetrieveCurrentSessionResponse'
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "404":
          description: Not Found
      security: []
      summary: Retrieve the current Session
      tags:
      - Session
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/sessions/me/lifecycle/refresh:
    post:
      description: |-
        Refreshes the Session for the current user

        > **Note:** This operation requires a session cookie for the user. An API token isn't allowed for this operation.
      operationId: refreshCurrentSession
      parameters:
      - example: sid=abcde-123 or idx=abcde-123
        explode: false
        in: header
        name: Cookie
        required: false
        schema:
          description: Session ID (`sid`) or Identity Engine (`idx`) cookie
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CurrentSessionsRefresh:
                  $ref: '#/components/examples/RefreshCurrentSessionResponse'
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "404":
          description: Not Found
      security: []
      summary: Refresh the current Session
      tags:
      - Session
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/sessions/{sessionId}:
    delete:
      description: Revokes the specified Session
      operationId: revokeSession
      parameters:
      - description: '`id` of the Session'
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          example: l7FbDVqS8zHSy65uJD85
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.sessions.manage
      summary: Revoke a Session
      tags:
      - Session
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves information about the Session specified by the given
        session ID
      operationId: getSession
      parameters:
      - description: '`id` of the Session'
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          example: l7FbDVqS8zHSy65uJD85
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                SessionsRetrieve:
                  $ref: '#/components/examples/RetrieveSessionResponse'
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.sessions.read
      summary: Retrieve a Session
      tags:
      - Session
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      description: Refreshes an existing Session using the `id` for that Session.
        A successful response contains the refreshed Session with an updated `expiresAt`
        timestamp.
      operationId: refreshSession
      parameters:
      - description: '`id` of the Session'
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          example: l7FbDVqS8zHSy65uJD85
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                SessionsRefresh:
                  $ref: '#/components/examples/RefreshSessionResponse'
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.sessions.manage
      summary: Refresh a Session
      tags:
      - Session
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/ssf/stream:
    delete:
      description: |-
        Deletes the specified SSF Stream.

        If the `stream_id` is not provided in the query string, the associated stream with the Client ID (through the request OAuth 2.0 access token) is deleted. Otherwise, the SSF Stream with the `stream_id` is deleted, if found.
      operationId: deleteSsfStream
      parameters:
      - description: The ID of the specified SSF Stream configuration
        example: esc1k235GIIztAuGK0g5
        explode: true
        in: query
        name: stream_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - ssf.manage
      summary: Delete an SSF Stream
      tags:
      - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    get:
      description: |-
        Retrieves either a list of all known SSF Stream configurations or the individual configuration if specified by ID.

        As Stream configurations are tied to a Client ID, only the Stream associated with the Client ID of the request OAuth 2.0 access token can be viewed.
      operationId: getSsfStreams
      parameters:
      - description: The ID of the specified SSF Stream configuration
        example: esc1k235GIIztAuGK0g5
        explode: true
        in: query
        name: stream_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                listResponse:
                  $ref: '#/components/examples/listStreamConfigurationExample'
                individualStreamResponse:
                  $ref: '#/components/examples/streamConfigurationExample'
              schema:
                $ref: '#/components/schemas/getSsfStreams_200_response'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - ssf.read
      summary: Retrieve the SSF Stream configuration(s)
      tags:
      - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    patch:
      description: |-
        Updates properties for an existing SSF Stream configuration.

        If the `stream_id` isn't provided in the request body, the associated stream with the Client ID (through the request OAuth 2.0 access token) is updated.
      operationId: updateSsfStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - ssf.manage
      summary: Update an SSF Stream
      tags:
      - SSFTransmitter
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    post:
      description: |-
        Creates an SSF Stream for an event receiver to start receiving security events in the form of Security Event Tokens (SETs) from Okta.

        An SSF Stream is associated with the Client ID of the OAuth 2.0 access token used to create the stream. The Client ID is provided by Okta for an [OAuth 2.0 app integration](https://help.okta.com/okta_help.htm?id=ext_Apps_App_Integration_Wizard-oidc). One SSF Stream is allowed for each Client ID, hence, one SSF Stream is allowed for each app integration in Okta.

        A maximum of 10 SSF Stream configurations can be created for one org.
      operationId: createSsfStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfigurationCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - ssf.manage
      summary: Create an SSF Stream
      tags:
      - SSFTransmitter
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: |-
        Replaces all properties for an existing SSF Stream configuration.

        If the `stream_id` isn't provided in the request body, the associated stream with the Client ID (through the request OAuth 2.0 access token) is replaced.
      operationId: replaceSsfStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - ssf.manage
      summary: Replace an SSF Stream
      tags:
      - SSFTransmitter
      x-codegen-request-body-name: instance
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /api/v1/templates/sms:
    get:
      description: Lists all custom SMS templates. A subset of templates can be returned
        that match a template type.
      operationId: listSmsTemplates
      parameters:
      - explode: true
        in: query
        name: templateType
        required: false
        schema:
          $ref: '#/components/schemas/SmsTemplateType'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                SMS Template List response:
                  $ref: '#/components/examples/SMSTemplateListResponse'
              schema:
                items:
                  $ref: '#/components/schemas/SmsTemplate'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: List all SMS Templates
      tags:
      - Template
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a new custom SMS template
      operationId: createSmsTemplate
      requestBody:
        content:
          application/json:
            examples:
              Create an SMS Template request:
                $ref: '#/components/examples/CreateOrReplaceSMSTemplateRequest'
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Create an SMS Template response:
                  $ref: '#/components/examples/CreateOrReplaceSMSTemplateResponse'
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Create an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/templates/sms/{templateId}:
    delete:
      description: Deletes an SMS template
      operationId: deleteSmsTemplate
      parameters:
      - description: '`id` of the Template'
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 6NQUJ5yR3bpgEiYmq8IC
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Delete an SMS Template
      tags:
      - Template
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a specific template by `id`
      operationId: getSmsTemplate
      parameters:
      - description: '`id` of the Template'
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 6NQUJ5yR3bpgEiYmq8IC
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get an SMS template response:
                  $ref: '#/components/examples/CreateOrReplaceSMSTemplateResponse'
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.read
      summary: Retrieve an SMS Template
      tags:
      - Template
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |
        Updates only some of the SMS Template properties:
          * All properties within the custom SMS Template that have values are updated.
          * Any translation that doesn't exist is added.
          * Any translation with a null or empty value is removed.
          * Any translation with non-empty/null value is updated.
      operationId: updateSmsTemplate
      parameters:
      - description: '`id` of the Template'
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 6NQUJ5yR3bpgEiYmq8IC
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update an SMS Template request:
                $ref: '#/components/examples/UpdateSMSTemplateRequest'
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Update an SMS Template response:
                  $ref: '#/components/examples/UpdateSMSTemplateResponse'
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Update an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |
        Replaces the SMS Template
        > **Notes:** You can't update the default SMS Template.
      operationId: replaceSmsTemplate
      parameters:
      - description: '`id` of the Template'
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 6NQUJ5yR3bpgEiYmq8IC
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Replace an SMS Template request:
                $ref: '#/components/examples/CreateOrReplaceSMSTemplateRequest'
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Replace an SMS Template response:
                  $ref: '#/components/examples/CreateOrReplaceSMSTemplateResponse'
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.templates.manage
      summary: Replace an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/threats/configuration:
    get:
      description: Retrieves the ThreatInsight configuration for the org
      operationId: getCurrentConfiguration
      responses:
        "200":
          content:
            application/json:
              examples:
                ThreatInsightResponseEx:
                  $ref: '#/components/examples/ThreatInsightResponseExample'
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.threatInsights.read
      summary: Retrieve the ThreatInsight Configuration
      tags:
      - ThreatInsight
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates the ThreatInsight configuration for the org
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            examples:
              ThreatInsightUpdateEx:
                $ref: '#/components/examples/ThreatInsightUpdateRequestExample'
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ThreatInsightUpdateEx:
                  $ref: '#/components/examples/ThreatInsightUpdateResponseExample'
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.threatInsights.manage
      summary: Update the ThreatInsight Configuration
      tags:
      - ThreatInsight
      x-codegen-request-body-name: threatInsightConfiguration
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/trustedOrigins:
    get:
      description: Lists all trusted origins
      operationId: listTrustedOrigins
      parameters:
      - description: A search string that will prefix match against the `name` and
          `origin`
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: |
          [Filter](/#filter) Trusted Origins with a supported expression for a subset of properties. You can filter on the following properties: `name`, `origin`, `status`, and `type` (type of scopes).
        examples:
          By name:
            value: name eq "Example Trusted Origin"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The after cursor provided by a prior request.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginsResponse:
                  $ref: '#/components/examples/TrustedOriginsResponse'
              schema:
                items:
                  $ref: '#/components/schemas/TrustedOrigin'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.read
      summary: List all Trusted Origins
      tags:
      - TrustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates a trusted origin
      operationId: createTrustedOrigin
      requestBody:
        content:
          application/json:
            examples:
              TrustedOriginBody:
                $ref: '#/components/examples/TrustedOriginBody'
              TrustedOriginBodyWithIframeEmbedding:
                $ref: '#/components/examples/TrustedOriginBodyWithIframeEmbedding'
              TrustedOriginBodyWithIframeEmbeddingSignIn:
                $ref: '#/components/examples/TrustedOriginBodyWithIframeEmbeddingSignIn'
            schema:
              $ref: '#/components/schemas/TrustedOriginWrite'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginResponse:
                  $ref: '#/components/examples/TrustedOriginResponse'
                TrustedOriginResponseWithIframeEmbedding:
                  $ref: '#/components/examples/TrustedOriginResponseWithIframeEmbedding'
                TrustedOriginResponseWithIframeEmbeddingSignIn:
                  $ref: '#/components/examples/TrustedOriginResponseWithIframeEmbeddingSignIn'
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.manage
      summary: Create a Trusted Origin
      tags:
      - TrustedOrigin
      x-codegen-request-body-name: trustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/trustedOrigins/{trustedOriginId}:
    delete:
      description: Deletes a trusted origin
      operationId: deleteTrustedOrigin
      parameters:
      - description: '`id` of the Trusted Origin'
        explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          example: 7j2PkU1nyNIDe26ZNufR
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.manage
      summary: Delete a Trusted Origin
      tags:
      - TrustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a trusted origin
      operationId: getTrustedOrigin
      parameters:
      - description: '`id` of the Trusted Origin'
        explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          example: 7j2PkU1nyNIDe26ZNufR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginResponse:
                  $ref: '#/components/examples/TrustedOriginResponse'
                TrustedOriginResponseWithIframeEmbedding:
                  $ref: '#/components/examples/TrustedOriginResponseWithIframeEmbedding'
                TrustedOriginResponseWithIframeEmbeddingSignIn:
                  $ref: '#/components/examples/TrustedOriginResponseWithIframeEmbeddingSignIn'
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.read
      summary: Retrieve a Trusted Origin
      tags:
      - TrustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a trusted origin
      operationId: replaceTrustedOrigin
      parameters:
      - description: '`id` of the Trusted Origin'
        explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          example: 7j2PkU1nyNIDe26ZNufR
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              TrustedOriginPutBody:
                $ref: '#/components/examples/TrustedOriginPutBody'
              TrustedOriginPutBodyWithIframeEmbedding:
                $ref: '#/components/examples/TrustedOriginPutBodyWithIframeEmbedding'
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginPutResponse:
                  $ref: '#/components/examples/TrustedOriginPutResponse'
                TrustedOriginPutResponseWithIFrameEmbedding:
                  $ref: '#/components/examples/TrustedOriginPutResponseWithIframeEmbedding'
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.manage
      summary: Replace a Trusted Origin
      tags:
      - TrustedOrigin
      x-codegen-request-body-name: trustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    post:
      description: Activates a Trusted Origin. Sets the `status` to `ACTIVE`.
      operationId: activateTrustedOrigin
      parameters:
      - description: '`id` of the Trusted Origin'
        explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          example: 7j2PkU1nyNIDe26ZNufR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginResponse:
                  $ref: '#/components/examples/TrustedOriginResponse'
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.manage
      summary: Activate a Trusted Origin
      tags:
      - TrustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    post:
      description: Deactivates a Trusted Origin. Sets the `status` to `INACTIVE`.
      operationId: deactivateTrustedOrigin
      parameters:
      - description: '`id` of the Trusted Origin'
        explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          example: 7j2PkU1nyNIDe26ZNufR
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                TrustedOriginInactiveResponse:
                  $ref: '#/components/examples/TrustedOriginInactiveResponse'
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.trustedOrigins.manage
      summary: Deactivate a Trusted Origin
      tags:
      - TrustedOrigin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users:
    get:
      description: "Lists all users that do not have a status of 'DEPROVISIONED' (by\
        \ default), up to the maximum (200 for most orgs), with pagination.  A subset\
        \ of users can be returned that match a supported filter expression or search\
        \ criteria."
      operationId: listUsers
      parameters:
      - description: "Finds a user that matches firstName, lastName, and email properties"
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results returned. Defaults to 10 if `q`
          is provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: Filters users with a supported expression for a subset of properties
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Searches for users with a supported filtering expression for
          most properties. Okta recommends using this parameter for search for best
          performance.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "Sorting is done in ASCII sort order (that is, by ASCII character\
          \ value), but isn't case sensitive."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                UserList:
                  $ref: '#/components/examples/ListRealmAwareUsersResponse'
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Users
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Creates a new user in your Okta organization with or without credentials<br>
        > **Legal Disclaimer**<br>
        After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,
        you agreed not to use Okta's service/product to spam and/or send unsolicited messages.
        Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all
        liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.
      operationId: createUser
      parameters:
      - description: Executes activation lifecycle operation when creating the user
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Indicates whether to create a user with a specified authentication
          provider
        explode: true
        in: query
        name: provider
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "With activate=true, set nextLogin to \"changePassword\" to have\
          \ the password be EXPIRED, so user must change it the next time they log\
          \ in."
        explode: true
        in: query
        name: nextLogin
        required: false
        schema:
          $ref: '#/components/schemas/UserNextLogin'
        style: form
        x-okta-added-version: 0.14.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              examples:
                Create user with too many groups specified:
                  $ref: '#/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse'
                Create user with expired password and activate set to `false`:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation'
                Create user with expired password and `null` password:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Create a User
      tags:
      - User
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userIdOrLogin}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      description: "Replaces the first user as the `associated` and the second user\
        \ as the `primary` for the specified relationship. If the first user is already\
        \ associated with a different `primary` for this relationship, replaces the\
        \ previous link. A Linked Object relationship can specify only one `primary`\
        \ user for an `associated` user."
      operationId: replaceLinkedObjectForUser
      parameters:
      - description: User ID or login value of the user assigned the `associated`
          relationship
        explode: false
        in: path
        name: userIdOrLogin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the `primary` relationship being assigned
        explode: false
        in: path
        name: primaryRelationshipName
        required: true
        schema:
          type: string
        style: simple
      - description: User ID to be assigned to the `primary` relationship for the
          `associated` user
        explode: false
        in: path
        name: primaryUserId
        required: true
        schema:
          example: ctxeQ5JnAVdGFBB7Zr7W
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - oauth2:
        - okta.users.manage
      summary: Replace the Linked Object value for `primary`
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userIdOrLogin}/linkedObjects/{relationshipName}:
    delete:
      description: "Deletes linked objects for a user, relationshipName can be ONLY\
        \ a primary relationship name"
      operationId: deleteLinkedObjectForUser
      parameters:
      - description: User ID or login value of the user assigned the `associated`
          relationship
        explode: false
        in: path
        name: userIdOrLogin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the `primary` or `associated` relationship being queried
        explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Delete a Linked Object
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: "Lists either the self link for the `primary` user or all `associated`\
        \ users in the relationship specified by `relationshipName`. If the specified\
        \ user isn't associated in any relationship, an empty array is returned."
      operationId: listLinkedObjectsForUser
      parameters:
      - description: User ID or login value of the user assigned the `associated`
          relationship
        explode: false
        in: path
        name: userIdOrLogin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the `primary` or `associated` relationship being queried
        explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                GetUserLinkedObjectResponse:
                  $ref: '#/components/examples/GetUserLinkedObjectResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ResponseLinks'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List the primary or all of the associated Linked Object values
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}:
    delete:
      description: Deletes a user permanently. This operation can only be performed
        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**.
        Calling this on an `ACTIVE` user will transition the user to `DEPROVISIONED`.
      operationId: deleteUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Delete a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a user from your Okta organization
      operationId: getUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: "An optional parameter to include metadata in the `_embedded`\
          \ attribute. Valid value: `blocks`"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          example: blocks
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetSingleton'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Updates a user partially determined by the request parameters
      operationId: updateUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Update a User
      tags:
      - User
      x-codegen-request-body-name: user
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces a user's profile and/or credentials using strict-update
        semantics
      operationId: replaceUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Replace a User
      tags:
      - User
      x-codegen-request-body-name: user
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/appLinks:
    get:
      description: Lists all appLinks for all direct or indirect (via group membership)
        assigned applications
      operationId: listAppLinks
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppLink'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Assigned Application Links
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/blocks:
    get:
      description: Lists information about how the user is blocked from accessing
        their account
      operationId: listUserBlocks
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BlocksUnknownDevices:
                  $ref: '#/components/examples/ListUserBlocksUnknownDevicesResponse'
                BlocksAnyDevices:
                  $ref: '#/components/examples/ListUserBlocksAnyDevicesResponse'
              schema:
                items:
                  $ref: '#/components/schemas/UserBlock'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all User Blocks
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/clients:
    get:
      description: Lists all client resources for which the specified user has grants
        or tokens
      operationId: listUserClients
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Clients
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/clients/{clientId}/grants:
    delete:
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke all Grants for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Grants for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    delete:
      description: Revokes all refresh tokens issued for the specified User and Client
      operationId: revokeTokensForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke all Refresh Tokens for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Lists all refresh tokens issued for the specified User and Client
      operationId: listRefreshTokensForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Refresh Tokens for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified refresh token
      operationId: revokeTokenForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke a Token for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a refresh token issued for the specified User and Client
      operationId: getRefreshTokenForUserAndClient
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of Token'
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: sHHSth53yJAyNSTQKDJZ
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a Refresh Token for a Client
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/credentials/change_password:
    post:
      description: "Changes a user's password by validating the user's current password.\
        \ This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,\
        \ or `RECOVERY` status that have a valid password credential"
      operationId: changePassword
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Change Password
      tags:
      - User
      x-codegen-request-body-name: changePasswordRequest
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      description: "Changes a user's recovery question & answer credential by validating\
        \ the user's current password.  This operation can only be performed on users\
        \ in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password\
        \ credential"
      operationId: changeRecoveryQuestion
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Change Recovery Question
      tags:
      - User
      x-codegen-request-body-name: userCredentials
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      description: Initiates the forgot password flow. Generates a one-time token
        (OTT) that can be used to reset a user's password.
      operationId: forgotPassword
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
          description: Reset url
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Initiate Forgot Password
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    post:
      description: Resets the user's password to the specified password if the provided
        answer to the recovery question is correct
      operationId: forgotPasswordSetNewPassword
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Credentials
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Reset Password with Recovery Question
      tags:
      - User
      x-codegen-request-body-name: userCredentials
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors:
    get:
      description: Lists all enrolled Factors for the specified user
      operationId: listFactors
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listFactors_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all enrolled Factors
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: "Enrolls a supported Factor for the specified user. Some Factor\
        \ types require a seperate activation to complete the enrollment process.\
        \ See [Activate a Factor](./#tag/UserFactor/operation/activateFactor)."
      operationId: enrollFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: "If `true`, indicates you are replacing the currently registered\
          \ phone number for the specified user. This parameter is ignored if the\
          \ existing phone number is used by an activated Factor."
        explode: true
        in: query
        name: updatePhone
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "ID of an existing custom SMS template. See the [SMS Templates\
          \ API](../Template). Only used by `sms` Factors. If the provided ID doesn't\
          \ exist, the default template is used instead."
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          example: cstk2flOtuCMDJK4b0g3
          type: string
        style: form
      - description: Defines how long the token remains valid
        explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          format: int32
          maximum: 86400
          minimum: 1
          type: integer
        style: form
        x-okta-added-version: 1.3.0
      - description: "If `true`, the `sms` Factor is immediately activated as part\
          \ of the enrollment. An activation text message isn't sent to the device."
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.3.0
      - description: "An ISO 639-1 two-letter language code that defines a localized\
          \ message to send. Only used by `sms` Factors. If a localized message doesn't\
          \ exist or the `templateId` is incorrect, the default template is used instead."
        explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          example: fr
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listFactors_200_response_inner'
        description: Factor
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Enroll a Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/catalog:
    get:
      description: Lists all the supported Factors that can be enrolled for the specified
        user
      operationId: listSupportedFactors
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserFactorSupported'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all supported Factors
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/questions:
    get:
      description: Lists all available Security Questions for the specified user
      operationId: listSupportedSecurityQuestions
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - question: disliked_food
                questionText: What is the food you least liked as a child?
              - question: name_of_first_plush_toy
                questionText: What is the name of your first stuffed animal?
              - question: first_award
                questionText: What did you earn your first medal or award for?
              schema:
                items:
                  $ref: '#/components/schemas/UserFactorSecurityQuestionProfile'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      summary: List all supported Security Questions
      tags:
      - UserFactor
      x-okta-no-scope-required: true
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/{factorId}:
    delete:
      description: |-
        Unenrolls an existing Factor for the specified user. This allows the user to enroll a new Factor.

        > **Note**: If you unenroll the `push` or the `signed_nonce` Factors, Okta also unenrolls any other `totp`, `signed_nonce`, or Okta Verify `push` Factors associated with the user.
      operationId: unenrollFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      - description: "If `true`, removes the the phone number as both a recovery method\
          \ and a Factor. Only used for `sms` and `call` Factors."
        explode: true
        in: query
        name: removeRecoveryEnrollment
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Unenroll a Factor
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an existing Factor for the specified user
      operationId: getFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a Factor
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      description: |-
        Activates a Factor. Some Factors (`call`, `email`, `push`, `sms`, `token:software:totp`, `u2f`, and `webauthn`) require activation to complete the enrollment process.

        Okta enforces a rate limit of five activation attempts within five minutes.
        After a user exceeds the rate limit, Okta returns an error message.
      operationId: activateFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactorActivateRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Activate a Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/{factorId}/resend:
    post:
      description: |-
        Resends an `sms`, `call`, or `email` factor challenge as part of an enrollment flow.

        For `call` and `sms` factors, Okta enforces a rate limit of one OTP challenge per device every 30 seconds. You can configure your `sms` and `call` factors to use a third-party telephony provider. See the [Telephony inline hook reference](https://developer.okta.com/docs/reference/telephony-hook/). Okta round-robins between SMS providers with every resend request to help ensure delivery of an SMS and Call OTPs across different carriers.

        > **Note**: Resend operations aren't allowed after a factor exceeds the activation rate limit. See [Activate a Factor](./#tag/UserFactor/operation/activateFactor).
      operationId: resendEnrollFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      - description: "ID of an existing custom SMS template. See the [SMS Templates\
          \ API](../Template). Only used by `sms` Factors."
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          example: cstk2flOtuCMDJK4b0g3
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resendEnrollFactor_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resendEnrollFactor_request'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Resend a Factor enrollment
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      description: Retrieves the status of a `push` Factor verification transaction
      operationId: getFactorTransactionStatus
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      - description: ID of an existing Factor verification transaction
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          example: gPAQcN3NDjSGOCAeG2Jv
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFactorTransactionStatus_200_response'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a Factor transaction status
      tags:
      - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      description: |-
        Verifies an OTP for a Factor. Some Factors (`call`, `email`, `push`, `sms`, `u2f`, and `webauthn`) must first issue a challenge before you can verify the Factor. Do this by making a request without a body. After a challenge is issued, make another request to verify the Factor.

        **Note**: To verify a `push` factor, use the **poll** link returned when you issue the challenge. See [Retrieve a Factor Transaction Status](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/getFactorTransactionStatus).
      operationId: verifyFactor
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of an existing user Factor
        explode: false
        in: path
        name: factorId
        required: true
        schema:
          example: zAgrsaBe0wVGRugDYtdv
          type: string
        style: simple
      - description: "ID of an existing custom SMS template. See the [SMS Templates\
          \ API](../Template). Only used by `sms` Factors."
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          example: cstk2flOtuCMDJK4b0g3
          type: string
        style: form
      - description: Defines how long the token remains valid
        explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          format: int32
          maximum: 86400
          minimum: 1
          type: integer
        style: form
        x-okta-added-version: 1.3.0
      - description: Public IP address for the user agent
        explode: false
        in: header
        name: X-Forwarded-For
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - description: Type of user agent detected when the request is made. Required
          to verify `push` Factors.
        explode: false
        in: header
        name: User-Agent
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - description: "An ISO 639-1 two-letter language code that defines a localized\
          \ message to send. Only used by `sms` Factors. If a localized message doesn't\
          \ exist or the `templateId` is incorrect, the default template is used instead."
        explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          example: fr
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactorVerifyRequest'
        description: "Some Factors (`call`, `email`, `push`, `sms`, `u2f`, and `webauthn`)\
          \ must first issue a challenge before you can verify the Factor. Do this\
          \ by making a request without a body. After a challenge is issued, make\
          \ another request to verify the Factor."
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorVerifyResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Verify a Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/grants:
    delete:
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke all User Grants
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scopeId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all User Grants
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/grants/{grantId}:
    delete:
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Grant ID
        explode: false
        in: path
        name: grantId
        required: true
        schema:
          example: iJoqkwx50mrgX4T9LcaH
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke a User Grant
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a grant for the specified user
      operationId: getUserGrant
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Grant ID
        explode: false
        in: path
        name: grantId
        required: true
        schema:
          example: iJoqkwx50mrgX4T9LcaH
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a User Grant
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/groups:
    get:
      description: Lists all groups of which the user is a member
      operationId: listUserGroups
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Groups
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/idps:
    get:
      description: Lists the IdPs associated with the user
      operationId: listUserIdentityProviders
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Identity Providers
      tags:
      - User
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      description: |-
        Activates a user. This operation can only be performed on users with a `STAGED` or `DEPROVISIONED` status.
        Activation of a user is an asynchronous operation. The user will have the `transitioningToStatus`
        property with a value of `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.
        The user will have a status of `ACTIVE` when the activation process is complete.
        > **Multibrand and User activation**<br>
        If you want to send a branded User Activation email, change the subdomain of your request to the custom domain that's associated with the brand.
        For example, change `subdomain.okta.com` to `custom.domain.one`. See [Multibrand and custom domains](https://developer.okta.com/docs/concepts/brands/#multibrand-and-custom-domains).
        <br><br>
        > **Legal disclaimer**<br>
        After a user is added to the Okta directory, they receive an activation email. As part of signing up for this service,
        you agreed not to use Okta's service/product to spam and/or send unsolicited messages.
        Please refrain from adding unrelated accounts to the directory as Okta is not responsible for, and disclaims any and all
        liability associated with, the activation email's content. You, and you alone, bear responsibility for the emails sent to any recipients.
      operationId: activateUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Activate a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      description: "Deactivates a user. This operation can only be performed on users\
        \ that do not have a `DEPROVISIONED` status. While the asynchronous operation\
        \ (triggered by HTTP header `Prefer: respond-async`) is proceeding the user's\
        \ `transitioningToStatus` property is `DEPROVISIONED`. The user's status is\
        \ `DEPROVISIONED` when the deactivation process is complete."
      operationId: deactivateUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Deactivate a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/expire_password:
    post:
      description: Expires a user's password and transitions the user to the status
        of `PASSWORD_EXPIRED` so that the user is required to change their password
        at their next login
      operationId: expirePassword
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Expire Password
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:
    post:
      description: "Expires a user's password and transitions the user to the status\
        \ of `PASSWORD_EXPIRED` so that the user is required to change their password\
        \ at their next login, and also sets the user's password to a temporary password\
        \ returned in the response"
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: "When set to `true` (and the session is a user session), all\
          \ user sessions are revoked except the current session."
        explode: true
        in: query
        name: revokeSessions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Expire Password and Set Temporary Password
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/reactivate:
    post:
      description: "Reactivates a user. This operation can only be performed on users\
        \ with a `PROVISIONED` status. \nThis operation restarts the activation workflow\
        \ if the user activation wasn't completed with the `activationToken` from\
        \ [Activate a user](/openapi/okta-management/management/tag/User/#tag/User/operation/activateUser).\n\
        \n> **Note:** A successful request to this endpoint records the same set of\
        \ events as when a user is activated in System Logs, since it invokes the\
        \ same activation workflow."
      operationId: reactivateUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Reactivate a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      description: Resets all factors for the specified user. All MFA factor enrollments
        returned to the unenrolled state. The user's status remains ACTIVE. This link
        is present only if the user is currently enrolled in one or more MFA factors.
      operationId: resetFactors
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: "If `true`, removes the phone number as both a recovery method\
          \ and a Factor. Supported Factors: `sms` and `call`"
        explode: true
        in: query
        name: removeRecoveryEnrollment
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Reset all Factors
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or returned
        to the API caller and distributed using a custom flow.
      operationId: generateResetPasswordToken
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          type: boolean
        style: form
      - description: "When set to `true` (and the session is a user session), all\
          \ user sessions are revoked except the current session."
        explode: true
        in: query
        name: revokeSessions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Generate a Reset Password Token
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      description: Suspends a user.  This operation can only be performed on users
        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when
        the process is complete.
      operationId: suspendUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Suspend a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      description: Unlocks a user with a `LOCKED_OUT` status or unlocks a user with
        an `ACTIVE` status that is blocked from unknown devices. Unlocked users have
        an `ACTIVE` status and can sign in with their current password.
      operationId: unlockUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Unlock a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Unsuspend a User
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles:
    get:
      description: Lists all roles assigned to a user identified by `userId`
      operationId: listAssignedRolesForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Roles assigned to a User
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Assigns a role to a user identified by `userId`
      operationId: assignRoleToUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Setting this to `true` grants the user third-party admin status
        explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign a Role to a User
      tags:
      - RoleAssignment
      x-codegen-request-body-name: assignRoleRequest
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}:
    delete:
      description: Unassigns a role identified by `roleId` from a user identified
        by `userId`
      operationId: unassignRoleFromUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Role from a User
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a role identified by `roleId` assigned to a user identified
        by `userId`
      operationId: getUserAssignedRole
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Role assigned to a User
      tags:
      - RoleAssignment
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a User.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Application Targets for Application Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns all Apps as Target to Role
      operationId: assignAllAppsAsTargetToRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign all Apps as Target to Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Unassigns an application target from application administrator
        role
      operationId: unassignAppTargetFromAppAdminRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign an Application Target from an Application Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns an application target to administrator role
      operationId: assignAppTargetToAdminRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign an Application Target to Administrator Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{appId}:
    delete:
      description: Unassigns an application instance target from an application administrator
        role
      operationId: unassignAppInstanceTargetFromAdminRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign an Application Instance Target from an Application Administrator
        Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns anapplication instance target to appplication administrator
        role
      operationId: assignAppInstanceTargetToAppAdminRoleForUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          example: 0oafxqCAJWWGELFTYASJ
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign an Application Instance Target to an Application Administrator
        Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      description: Lists all group targets for role
      operationId: listGroupTargetsForRole
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Group Targets for Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    delete:
      description: Unassigns a Group Target from Role
      operationId: unassignGroupTargetFromUserAdminRole
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Group Target from Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Assigns a Group Target to Role
      operationId: assignGroupTargetToUserRole
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign a Group Target to Role
      tags:
      - RoleTarget
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/sessions:
    delete:
      description: Revokes all active identity provider sessions of the user. This
        forces the user to authenticate on the next operation. Optionally revokes
        OpenID Connect and OAuth refresh and access tokens issued to the user.
      operationId: revokeUserSessions
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Revoke issued OpenID Connect and OAuth refresh and access tokens
        explode: true
        in: query
        name: oauthTokens
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Revoke all User Sessions
      tags:
      - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/subscriptions:
    get:
      description: Lists all subscriptions available to a specified User. Returns
        an `AccessDeniedException` message if requests are made for another user.
      operationId: listSubscriptionsUser
      parameters:
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: List all Subscriptions for a User
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      description: Retrieves a subscription by `notificationType` for a specified
        User. Returns an `AccessDeniedException` message if requests are made for
        another user.
      operationId: getSubscriptionsNotificationTypeUser
      parameters:
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.read
      summary: Retrieve a Subscription for a User
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      description: Subscribes the current user to a specified notification type. Returns
        an `AccessDeniedException` message if requests are made for another user.
      operationId: subscribeByNotificationTypeUser
      parameters:
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Subscribe a User to a Specific Notification Type
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: Unsubscribes the current user from a specified notification type.
        Returns an `AccessDeniedException` message if requests are made for another
        user.
      operationId: unsubscribeByNotificationTypeUser
      parameters:
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          $ref: '#/components/schemas/NotificationType'
        style: simple
      - description: ID of an existing Okta user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.users.manage
      summary: Unsubscribe a User from a Specific Notification Type
      tags:
      - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/zones:
    get:
      description: |-
        Lists all Network Zones with pagination. A subset of zones can be returned that match a supported filter expression or query.

        This operation requires URL encoding. For example, `filter=(id eq "nzoul0wf9jyb8xwZm0g3" or id eq "nzoul1MxmGN18NDQT0g3")` is encoded as `filter=%28id+eq+%22nzoul0wf9jyb8xwZm0g3%22+or+id+eq+%22nzoul1MxmGN18NDQT0g3%22%29`.

        Okta supports filtering on the `id` and `usage` properties. See [Filtering](https://developer.okta.com/docs/reference/core-okta-api/#filter) for more information on the expressions that are used in filtering.
      operationId: listNetworkZones
      parameters:
      - explode: true
        in: query
        name: after
        required: false
        schema:
          description: Specifies the pagination cursor for the next page of Network
            Zones
          example: BlockedIpZones
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          description: Specifies the number of results for a page
          example: 5
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          description: Filters zones by usage or ID expression
          example: id eq "nzowc1U5Jh5xuAK0o0g3"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveAllZonesWithFilter:
                  $ref: '#/components/examples/RetrieveAllZonesWithFilter'
                RetrieveAllZones:
                  $ref: '#/components/examples/RetrieveAllZones'
              schema:
                items:
                  $ref: '#/components/schemas/listNetworkZones_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.read
      summary: List all Network Zones
      tags:
      - NetworkZone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: |-
        Creates a Network Zone
        * For an IP Network Zone, you must define either `gateways` or `proxies`.
        * For a Dynamic Network Zone, you must define at least one of the following: `asns`, `locations`, or `proxyType`.
        * For an Enhanced Dynamic Network Zone, you must define at least one of the following: `asns`, `locations`, or `ipServiceCategories`.
      operationId: createNetworkZone
      requestBody:
        content:
          application/json:
            examples:
              CreateIPPolicyNetworkZone:
                $ref: '#/components/examples/CreateIPPolicyNetworkZone'
              CreateIPPolicyBlocklistNetworkZone:
                $ref: '#/components/examples/CreateIPPolicyBlockListNetworkZone'
              CreateEDNetworkZone:
                $ref: '#/components/examples/CreateEDNZRequest'
            schema:
              $ref: '#/components/schemas/listNetworkZones_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CreateIPPolicyNetworkZone:
                  $ref: '#/components/examples/CreateIPPolicyNetworkZoneResponse'
                CreateIPPolicyBlocklistNetworkZone:
                  $ref: '#/components/examples/CreateIPPolicyBlockListNetworkZoneResponse'
                CreateEDNetworkZone:
                  $ref: '#/components/examples/CreateEDNZResponse'
              schema:
                $ref: '#/components/schemas/listNetworkZones_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/NzErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.manage
      summary: Create a Network Zone
      tags:
      - NetworkZone
      x-codegen-request-body-name: zone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/zones/{zoneId}:
    delete:
      description: |-
        Deletes a Network Zone by `zoneId`
        > **Notes:**
        > * You can't delete a Network Zone that's used by a [Policy](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/) or [Rule](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/#tag/Policy/operation/listPolicyRules).
        > * For Okta Identity Engine orgs, you can't delete a Network Zone with an ACTIVE `status`. <x-lifecycle class="oie"></x-lifecycle>
      operationId: deleteNetworkZone
      parameters:
      - description: '`id` of the Network Zone'
        example: nzowc1U5Jh5xuAK0o0g3
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/NzErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.manage
      summary: Delete a Network Zone
      tags:
      - NetworkZone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves a Network Zone by `zoneId`
      operationId: getNetworkZone
      parameters:
      - description: '`id` of the Network Zone'
        example: nzowc1U5Jh5xuAK0o0g3
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                RetrieveNetworkZoneIP:
                  $ref: '#/components/examples/RetrieveNetworkZoneIP'
                RetrieveNetworkZoneDynamic:
                  $ref: '#/components/examples/RetrieveNetworkZoneDynamic'
                RetrieveNetworkZoneEnhancedDynamic:
                  $ref: '#/components/examples/CreateEDNZResponse'
              schema:
                $ref: '#/components/schemas/listNetworkZones_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/NzErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.read
      summary: Retrieve a Network Zone
      tags:
      - NetworkZone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: |-
        Replaces a Network Zone by `zoneId`. The replaced Network Zone type must be the same as the existing type.
        You can replace the usage (`POLICY`, `BLOCKLIST`) of a Network Zone by updating the `usage` attribute.
      operationId: replaceNetworkZone
      parameters:
      - description: '`id` of the Network Zone'
        example: nzowc1U5Jh5xuAK0o0g3
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ReplaceNetworkZone:
                $ref: '#/components/examples/ReplaceNetworkZone'
            schema:
              $ref: '#/components/schemas/listNetworkZones_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                ReplaceNetworkZone:
                  $ref: '#/components/examples/ReplaceNetworkZoneResponse'
              schema:
                $ref: '#/components/schemas/listNetworkZones_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/NzErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/NzErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.manage
      summary: Replace a Network Zone
      tags:
      - NetworkZone
      x-codegen-request-body-name: zone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/zones/{zoneId}/lifecycle/activate:
    post:
      description: Activates a Network Zone by `zoneId`
      operationId: activateNetworkZone
      parameters:
      - description: '`id` of the Network Zone'
        example: nzowc1U5Jh5xuAK0o0g3
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ActivateNetworkZone:
                  $ref: '#/components/examples/ActivateNetworkZone'
              schema:
                $ref: '#/components/schemas/listNetworkZones_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/NzErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.manage
      summary: Activate a Network Zone
      tags:
      - NetworkZone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    post:
      description: Deactivates a Network Zone by `zoneId`
      operationId: deactivateNetworkZone
      parameters:
      - description: '`id` of the Network Zone'
        example: nzowc1U5Jh5xuAK0o0g3
        explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                DeactivateNetworkZone:
                  $ref: '#/components/examples/DeactivateNetworkZone'
              schema:
                $ref: '#/components/schemas/listNetworkZones_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/NzErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.networkZones.manage
      summary: Deactivate a Network Zone
      tags:
      - NetworkZone
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /attack-protection/api/v1/authenticator-settings:
    get:
      description: Retrieves the Authenticator Settings for an org
      operationId: getAuthenticatorSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the Authenticator Settings
      tags:
      - AttackProtection
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
    put:
      description: Replaces the Authenticator Settings for an org
      operationId: replaceAuthenticatorSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Replace the Authenticator Settings
      tags:
      - AttackProtection
      x-codegen-request-body-name: authenticatorSettings
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
        - Okta Identity Engine
  /attack-protection/api/v1/user-lockout-settings:
    get:
      description: Retrieves the User Lockout Settings for an org
      operationId: getUserLockoutSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserLockoutSettings'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.read
      summary: Retrieve the User Lockout Settings
      tags:
      - AttackProtection
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      description: Replaces the User Lockout Settings for an org
      operationId: replaceUserLockoutSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLockoutSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLockoutSettings'
          description: OK
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.orgs.manage
      summary: Replace the User Lockout Settings
      tags:
      - AttackProtection
      x-codegen-request-body-name: lockoutSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services:
    get:
      description: Lists all API Service Integration instances with a pagination option
      operationId: listApiServiceIntegrationInstances
      parameters:
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationListResponse'
              schema:
                items:
                  $ref: '#/components/schemas/APIServiceIntegrationInstance'
                type: array
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.read
      summary: List all API Service Integration instances
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates and authorizes an API Service Integration instance
      operationId: createApiServiceIntegrationInstance
      requestBody:
        content:
          application/json:
            examples:
              postAPIServiceIntegrationRequestExample:
                $ref: '#/components/examples/postAPIServiceIntegrationRequest'
            schema:
              $ref: '#/components/schemas/postAPIServiceIntegrationInstanceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/postAPIServiceIntegrationResponse'
              schema:
                $ref: '#/components/schemas/postAPIServiceIntegrationInstance'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      summary: Create an API Service Integration instance
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services/{apiServiceId}:
    delete:
      description: Deletes an API Service Integration instance by `id`. This operation
        also revokes access to scopes that were previously granted to this API Service
        Integration instance.
      operationId: deleteApiServiceIntegrationInstance
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.manage
      summary: Delete an API Service Integration instance
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    get:
      description: Retrieves an API Service Integration instance by `id`
      operationId: getApiServiceIntegrationInstance
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationResponse'
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstance'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.read
      summary: Retrieve an API Service Integration instance
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets:
    get:
      description: Lists all client secrets for an API Service Integration instance
        by `apiServiceId`
      operationId: listApiServiceIntegrationInstanceSecrets
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APIServiceIntegrationResponseExample:
                  $ref: '#/components/examples/APIServiceIntegrationInstanceSecretListResponse'
              schema:
                items:
                  $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
                type: array
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.read
      summary: List all API Service Integration instance Secrets
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      description: Creates an API Service Integration instance Secret object with
        a new active client secret. You can create up to two Secret objects. An error
        is returned if you attempt to create more than two Secret objects.
      operationId: createApiServiceIntegrationInstanceSecret
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              examples:
                newAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/newAPIServiceIntegrationInstanceSecretResponse'
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
          description: Created
        "400":
          content:
            application/json:
              examples:
                APIValidationFailed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.manage
      summary: Create an API Service Integration instance Secret
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}:
    delete:
      description: Deletes an API Service Integration instance Secret by `secretId`.
        You can only delete an inactive Secret.
      operationId: deleteApiServiceIntegrationInstanceSecret
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the API Service Integration instance Secret'
        example: ocs2f4zrZbs8nUa7p0g4
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.manage
      summary: Delete an API Service Integration instance Secret
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}/lifecycle/activate:
    post:
      description: Activates an API Service Integration instance Secret by `secretId`
      operationId: activateApiServiceIntegrationInstanceSecret
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the API Service Integration instance Secret'
        example: ocs2f4zrZbs8nUa7p0g4
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                activeAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/activeAPIServiceIntegrationInstanceSecretResponse'
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.manage
      summary: Activate an API Service Integration instance Secret
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/api-services/{apiServiceId}/credentials/secrets/{secretId}/lifecycle/deactivate:
    post:
      description: Deactivates an API Service Integration instance Secret by `secretId`
      operationId: deactivateApiServiceIntegrationInstanceSecret
      parameters:
      - description: '`id` of the API Service Integration instance'
        example: 000lr2rLjZ6NsGn1P0g3
        explode: false
        in: path
        name: apiServiceId
        required: true
        schema:
          type: string
        style: simple
      - description: '`id` of the API Service Integration instance Secret'
        example: ocs2f4zrZbs8nUa7p0g4
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                inactiveAPIServiceIntegrationInstanceSecretResponse:
                  $ref: '#/components/examples/inactiveAPIServiceIntegrationInstanceSecretResponse'
              schema:
                $ref: '#/components/schemas/APIServiceIntegrationInstanceSecret'
          description: OK
        "401":
          content:
            application/json:
              examples:
                InvalidTokenProvided:
                  $ref: '#/components/examples/ErrorInvalidTokenProvided'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.oauthIntegrations.manage
      summary: Deactivate an API Service Integration instance Secret
      tags:
      - ApiServiceIntegrations
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /integrations/api/v1/submissions/{submissionId}: {}
  /integrations/api/v1/submissions/{submissionId}/submit: {}
  /integrations/api/v1/submissions/{submissionId}/testing: {}
  /oauth2/v1/clients/{clientId}/roles:
    get:
      description: Lists all Roles by `clientId`
      operationId: listRolesForClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                All role assignments:
                  $ref: '#/components/examples/ListRoleAssignments'
              schema:
                $ref: '#/components/schemas/Client'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Roles for a Client
      tags:
      - RoleAssignment
    post:
      description: Assigns a Role to a Client
      operationId: assignRoleToClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Standard Role:
                $ref: '#/components/examples/StandardRoleAssignmentRequest'
              Custom Role Assignment:
                $ref: '#/components/examples/CustomRoleAssignmentRequest'
            schema:
              $ref: '#/components/schemas/assignRoleToClient_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Standard Role:
                  $ref: '#/components/examples/StandardRoleAssignmentResponse'
                Custom Role Assignment:
                  $ref: '#/components/examples/CustomRoleAssignmentResponse'
              schema:
                $ref: '#/components/schemas/Client'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign Role to Client
      tags:
      - RoleAssignment
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}:
    delete:
      description: Unassigns a Role from a Client
      operationId: deleteRoleFromClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Unassign a Role from a Client
      tags:
      - RoleAssignment
    get:
      description: Retrieves a Client Role
      operationId: retrieveClientRole
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Standard Role:
                  $ref: '#/components/examples/StandardRoleAssignmentResponse'
                Custom Role Assignment:
                  $ref: '#/components/examples/CustomRoleAssignmentResponse'
              schema:
                $ref: '#/components/schemas/Client'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: Retrieve a Client Role
      tags:
      - RoleAssignment
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: Lists App Targets for Client and Role
      operationId: listAppTargetRoleToClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Application target:
                  $ref: '#/components/examples/ApplicationTargetResponse'
              schema:
                $ref: '#/components/schemas/Client'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all App Targets assigned to a Client
      tags:
      - RoleTarget
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Removes an Application Target by `clientId`
      operationId: removeAppTargetRoleFromClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Remove an App Target from a Client
      tags:
      - RoleTarget
    put:
      description: Assigns an Application Target to a Client
      operationId: assignAppTargetRoleToClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign an App Target to a Client
      tags:
      - RoleTarget
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}/targets/catalog/apps/{appName}/{appInstanceId}:
    delete:
      description: Deletes an App Instance Target from a Client
      operationId: removeAppTargetInstanceRoleForClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: '`id` of the application instance'
        explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete an App Instance Target for a Client
      tags:
      - RoleTarget
    put:
      description: Replaces an App Instance Target by `clientId`
      operationId: assignAppTargetInstanceRoleForClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: Application name for the app type
        explode: false
        in: path
        name: appName
        required: true
        schema:
          example: oidc_client
          type: string
        style: simple
      - description: '`id` of the application instance'
        explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Replace an App Instance Target for a Client
      tags:
      - RoleTarget
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}/targets/groups:
    get:
      description: Lists all Group Targets by `clientId` and `roleId`
      operationId: listGroupTargetRoleForClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](/#pagination)."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Application target:
                  $ref: '#/components/examples/GroupTargetResponse'
              schema:
                $ref: '#/components/schemas/Client'
          description: Success
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.read
      summary: List all Group Targets for a Client
      tags:
      - RoleTarget
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /oauth2/v1/clients/{clientId}/roles/{roleId}/targets/groups/{groupId}:
    delete:
      description: Deletes a Group Target from a Client
      operationId: removeGroupTargetRoleFromClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Delete a Group Target from a Client
      tags:
      - RoleTarget
    put:
      description: Assigns a Group Target to a Client
      operationId: assignGroupTargetRoleForClient
      parameters:
      - description: '`client_id` of the app'
        explode: false
        in: path
        name: clientId
        required: true
        schema:
          example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
          type: string
        style: simple
      - description: '`id` of the Role'
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          example: 3Vg1Pjp3qzw4qcCK5EdO
          type: string
        style: simple
      - description: The `id` of the group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          example: 00g1emaKYZTWRYYRRTSK
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                AccessDenied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                ResourceNotFound:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                TooManyRequests:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - apiToken: []
      - oauth2:
        - okta.roles.manage
      summary: Assign a Group Target to a Client
      tags:
      - RoleTarget
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: true
  /security/api/v1/security-events:
    post:
      description: "Publishes a Security Event Token (SET) sent by a Security Events\
        \ Provider. After the token is verified, Okta ingests the event and performs\
        \ any appropriate action."
      operationId: publishSecurityEventTokens
      requestBody:
        content:
          application/secevent+jwt:
            examples:
              SET:
                value: eyJraWQiOiJzYW1wbGVfa2lkIiwidHlwIjoic2ZXZlbnQra ... mrtmw
            schema:
              type: string
        description: |
          The request body is a signed [SET](https://datatracker.ietf.org/doc/html/rfc8417), which is a type of JSON Web Token (JWT).

          For SET JWT header and body descriptions, see [SET JWT header](/openapi/okta-management/management/tag/SSFSecurityEventToken/#tag/SSFSecurityEventToken/schema/SecurityEventTokenRequestJwtHeader) and [SET JWT body payload](/openapi/okta-management/management/tag/SSFSecurityEventToken/#tag/SSFSecurityEventToken/schema/SecurityEventTokenRequestJwtBody).
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEventTokenError'
          description: Bad Request
      security: []
      summary: Publish a Security Event Token
      tags:
      - SSFSecurityEventToken
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      x-codegen-request-body-name: Security Event Token
  /webauthn-registration/api/v1/users/{userId}/enrollments: {}
  /webauthn-registration/api/v1/users/{userId}/enrollments/{authenticatorEnrollmentId}: {}
components:
  examples:
    APIDevicesListAllResponse:
      summary: List all devices with embedded users
      value:
      - id: guo4a5u7YAHhjXrMK0g4
        status: CREATED
        created: 2019-10-02T18:03:07.000Z
        lastUpdated: 2019-10-02T18:03:07.000Z
        profile:
          displayName: Example Device name 1
          platform: WINDOWS
          serialNumber: XXDDRFCFRGF3M8MD6D
          sid: S-1-11-111
          registered: true
          secureHardwarePresent: false
          diskEncryptionType: ALL_INTERNAL_VOLUMES
        resourceType: UDDevice
        resourceDisplayName:
          value: Example Device name 1
          sensitive: false
        resourceAlternateId: null
        resourceId: guo4a5u7YAHhjXrMK0g4
        _links:
          activate:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/lifecycle/activate"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4"
            hints:
              allow:
              - GET
              - PATCH
              - PUT
          users:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/users"
            hints:
              allow:
              - GET
        _embedded:
          users: []
      - id: guo4a5u7YAHhjXrMK0g5
        status: ACTIVE
        created: 2023-06-21T23:24:02.000Z
        lastUpdated: 2023-06-21T23:24:02.000Z
        profile:
          displayName: Example Device name 2
          platform: ANDROID
          manufacturer: Google
          model: Pixel 6
          osVersion: 13:2023-05-05
          registered: true
          secureHardwarePresent: true
          diskEncryptionType: USER
        resourceType: UDDevice
        resourceDisplayName:
          value: Example Device name 2
          sensitive: false
        resourceAlternateId: null
        resourceId: guo4a5u7YAHhjXrMK0g5
        _links:
          activate:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/lifecycle/activate"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5"
            hints:
              allow:
              - GET
              - PATCH
              - PUT
          users:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/users"
            hints:
              allow:
              - GET
        _embedded:
          users:
          - managementStatus: MANAGED
            created: 2021-10-01T16:52:41.000Z
            screenLockType: BIOMETRIC
            user:
              id: 00u17vh0q8ov8IU881d7
              status: ACTIVE
              created: 2020-08-12T06:46:50.000Z
              activated: 2020-08-12T06:46:50.000Z
              statusChanged: 2021-01-27T21:05:32.000Z
              lastLogin: 2021-10-14T09:04:48.000Z
              lastUpdated: 2021-01-27T21:05:32.000Z
              passwordChanged: 2020-08-12T06:46:50.000Z
              type:
                id: oty7ut9Uu76oHVUZc0w4
              profile:
                firstName: fname
                lastName: lname
                mobilePhone: null
                secondEmail: null
                login: email@email.com
                email: email@email.com
              credentials:
                password: {}
                recovery_question:
                  question: What is the food you least liked as a child?
                provider:
                  type: OKTA
                  name: OKTA
              _links:
                suspend:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/suspend"
                  method: POST
                schema:
                  href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/osc7ut9Uu76oHVUZc0w4"
                resetPassword:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_password"
                  method: POST
                forgotPassword:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/forgot_password"
                  method: POST
                expirePassword:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/expire_password"
                  method: POST
                changeRecoveryQuestion:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_recovery_question"
                  method: POST
                self:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7"
                type:
                  href: "https://{yourOktaDomain}/api/v1/meta/types/user/oty7ut9Uu76oHVUZc0w4"
                changePassword:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_password"
                deactivate:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/deactivate"
    APIDevicesListAllUserSummaryResponse:
      summary: List all devices with embedded user summaries
      value:
      - id: guo4a5u7YAHhjXrMK0g4
        status: CREATED
        created: 2019-10-02T18:03:07.000Z
        lastUpdated: 2019-10-02T18:03:07.000Z
        profile:
          displayName: Example Device name 1
          platform: WINDOWS
          serialNumber: XXDDRFCFRGF3M8MD6D
          sid: S-1-11-111
          registered: true
          secureHardwarePresent: false
          diskEncryptionType: ALL_INTERNAL_VOLUMES
        resourceType: UDDevice
        resourceDisplayName:
          value: Example Device name 1
          sensitive: false
        resourceAlternateId: null
        resourceId: guo4a5u7YAHhjXrMK0g4
        _links:
          activate:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/lifecycle/activate"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4"
            hints:
              allow:
              - GET
              - PATCH
              - PUT
          users:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/users"
            hints:
              allow:
              - GET
        _embedded:
          users: []
      - id: guo4a5u7YAHhjXrMK0g5
        status: ACTIVE
        created: 2023-06-21T23:24:02.000Z
        lastUpdated: 2023-06-21T23:24:02.000Z
        profile:
          displayName: Example Device name 2
          platform: ANDROID
          manufacturer: Google
          model: Pixel 6
          osVersion: 13:2023-05-05
          registered: true
          secureHardwarePresent: true
          diskEncryptionType: USER
        resourceType: UDDevice
        resourceDisplayName:
          value: Example Device name 2
          sensitive: false
        resourceAlternateId: null
        resourceId: guo4a5u7YAHhjXrMK0g5
        _links:
          activate:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/lifecycle/activate"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5"
            hints:
              allow:
              - GET
              - PATCH
              - PUT
          users:
            href: "https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/users"
            hints:
              allow:
              - GET
        _embedded:
          users:
          - managementStatus: MANAGED
            created: 2021-10-01T16:52:41.000Z
            screenLockType: BIOMETRIC
            user:
              id: 00u17vh0q8ov8IU881d7
              realmId: 00u17vh0q8ov8IU8T0g5
              profile:
                firstName: fname
                lastName: lname
                login: email@email.com
                email: email@email.com
              _links:
                self:
                  href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7"
    APIDevicesListAllUsersResponse:
      summary: Response example
      value:
      - created: 2021-08-20T17:13:35.000Z
        managementStatus: NOT_MANAGED
        screenLockType: BIOMETRIC
        user:
          id: 00u17vh0q8ov8IU881d7
          status: ACTIVE
          created: 2021-08-20T16:08:25.000Z
          activated: null
          statusChanged: 2021-08-20T16:39:41.000Z
          lastLogin: 2023-04-18T17:54:12.000Z
          lastUpdated: 2021-12-20T18:27:30.000Z
          passwordChanged: 2021-12-20T18:27:30.000Z
          type:
            id: oty17vh0n2EHVnbYF1d7
          profile:
            firstName: Bunk
            lastName: Moreland
            mobilePhone: null
            secondEmail: null
            login: bunk.moreland@example.com
            email: bunk.moreland@example.com
          credentials:
            password: null
            provider:
              type: OKTA
              name: OKTA
          _links:
            suspend:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/suspend"
              method: POST
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/osc17vh0n2EHVnbYF1d7"
            resetPassword:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_password"
              method: POST
            forgotPassword:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/forgot_password"
              method: POST
            expirePassword:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/expire_password"
              method: POST
            changeRecoveryQuestion:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_recovery_question"
              method: POST
            self:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7"
            resetFactors:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_factors"
              method: POST
            type:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/oty17vh0n2EHVnbYF1d7"
            changePassword:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_password"
              method: POST
            deactivate:
              href: "https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/deactivate"
              method: POST
    APIPushProvidersListAllResponse:
      value:
      - id: ppchvbeucdTgqeiGxR0g4
        providerType: APNS
        name: Example Push Provider 1
        lastUpdatedDate: 2022-01-00T00:00:00.000Z
        configuration:
          keyId: ABC123DEFG
          teamId: DEF123GHIJ
          fileName: fileName.p8
        _links:
          self:
            href: "https://your-subdomain.okta.com/api/v1/push-providers/{pushProviderId}"
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      - id: ppctekcmngGaqeiBxB0g4
        providerType: FCM
        name: Example Push Provider 2
        lastUpdatedDate: 2022-01-00T00:00:00.000Z
        configuration:
          projectId: PROJECT_ID
          fileName: fileName.json
        _links:
          self:
            href: "https://your-subdomain.okta.com/api/v1/push-providers/{pushProviderId}"
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    APIServiceIntegrationInstanceSecretListResponse:
      summary: Secrets list response example
      value:
      - id: ocs2f4zrZbs8nUa7p0g4
        status: INACTIVE
        client_secret: '***DhOW'
        secret_hash: yk4SVx4sUWVJVbHt6M-UPA
        created: 2023-02-21T20:08:24.000Z
        lastUpdated: 2023-02-21T20:08:24.000Z
        _links:
          activate:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4/lifecycle/activate"
            hints:
              allow:
              - POST
          delete:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4"
            hints:
              allow:
              - DELETE
      - id: ocs2f50kZB0cITmYU0g4
        status: ACTIVE
        client_secret: '***MQGQ'
        secret_hash: 0WOOvBSzV9clc4Nr7Rbaug
        created: 2023-04-06T21:32:33.000Z
        lastUpdated: 2023-04-06T21:32:33.000Z
        _links:
          deactivate:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    APIServiceIntegrationListResponse:
      summary: List response example
      value:
      - id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        name: My App Cloud Identity Engine
        createdAt: 2023-02-21T20:08:24.000Z
        createdBy: 00uu3u0ujW1P6AfZC2d5
        configGuideUrl: "https://{docDomain}/my-app-cie/configuration-guide"
        grantedScopes:
        - okta.logs.read
        - okta.groups.read
        - okta.users.read
        _links:
          self:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
          logo:
            name: small
            href: "https://{logoDomain}/{logoPath}/my_app_cie_small_logo"
    APIServiceIntegrationResponse:
      summary: Response example
      value:
        id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        name: My App Cloud Identity Engine
        createdAt: 2023-02-21T20:08:24.000Z
        createdBy: 00uu3u0ujW1P6AfZC2d5
        configGuideUrl: "https://{docDomain}/my-app-cie/configuration-guide"
        grantedScopes:
        - okta.logs.read
        - okta.groups.read
        - okta.users.read
        _links:
          self:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
          logo:
            name: small
            href: "https://{logoDomain}/{logoPath}/my_app_cie_small_logo"
    ActivateNetworkZone:
      summary: Activated Network Zone
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: MyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-24T20:37:32.000Z
        lastUpdated: 2021-06-24T20:37:32.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        proxies:
        - type: RANGE
          value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
    AddMappingBody:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        properties:
          additionalProperties:
            fullName:
              expression: user.firstName + user.lastName
              pushStatus: PUSH
            nickName:
              expression: user.nickName
              pushStatus: PUSH
    AddMappingResponse:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.nickName
            pushStatus: PUSH
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4"
    AdminConsoleSettingsExample:
      summary: Default Okta Admin Console Settings
      value:
        sessionMaxLifetimeMinutes: 720
        sessionIdleTimeoutMinutes: 15
    AllAssignmentsOperationResponse:
      value:
        id: rre4mje4ez7B2a7B60g7
        type: realm:assignment
        status: COMPLETED
        created: 2023-10-25T21:02:54.000Z
        started: 2023-10-25T21:02:54.000Z
        completed: 2023-10-25T21:02:54.000Z
        assignmentOperation:
          configuration:
            id: ALL
            name: All Assignments
        numUserMoved: 50
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez7B2a7B60g7
            method: GET
    ApiTokenListMetadataResponse:
      value:
      - name: My API Token
        userId: 00uabcdefg1234567890
        tokenWindow: P30D
        network:
          connection: ANYWHERE
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890"
            hints:
              allow:
              - GET
      - name: Another API Token
        userId: 00uabcdefg1234567890
        tokenWindow: PT5M
        id: 00T1234567890abcdefg
        clientName: Okta API
        expiresAt: 2021-11-11T20:43:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/api-tokens/00T1234567890abcdefg"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00uabcdefg1234567890"
            hints:
              allow:
              - GET
    ApiTokenMetadataResponse:
      value:
        name: My API Token
        userId: 00uXXXXXXXXXXXXXXXXX
        tokenWindow: P30D
        network:
          connection: ANYWHERE
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00uXXXXXXXXXXXXXXXXX"
            hints:
              allow:
              - GET
    AppFeatureListResponseEx:
      summary: List app Feature response
      value:
      - name: USER_PROVISIONING
        status: ENABLED
        description: User provisioning settings from Okta to a downstream application
        capabilities:
          create:
            lifecycleCreate:
              status: DISABLED
          update:
            profile:
              status: DISABLED
            lifecycleDeactivate:
              status: DISABLED
            password:
              status: DISABLED
              seed: RANDOM
              change: KEEP_EXISTING
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING"
            hints:
              allow:
              - GET
              - PUT
    AppFeatureResponseEx:
      summary: App Feature response
      value:
        name: USER_PROVISIONING
        status: ENABLED
        description: User provisioning settings from Okta to a downstream application
        capabilities:
          create:
            lifecycleCreate:
              status: DISABLED
          update:
            profile:
              status: DISABLED
            lifecycleDeactivate:
              status: DISABLED
            password:
              status: DISABLED
              seed: RANDOM
              change: KEEP_EXISTING
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING"
            hints:
              allow:
              - GET
              - PUT
    AppGrantsEx:
      summary: App Grants example
      value:
        id: oag91n9ruw3dsaXzP0h6
        status: ACTIVE
        created: 2023-02-21T16:54:00.000Z
        createdBy:
          id: 00u6eltha0nrSc47i0h7
          type: User
        lastUpdated: 2023-02-21T16:54:00.000Z
        issuer: "{yourOktaDomain}"
        clientId: "{clientId}"
        scopeId: okta.users.read
        source: ADMIN
        _embedded:
          scope:
            id: okta.users.read
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
            title: Application name
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}/grants/oag91n9ruw3dsaXzP0h6"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: Client name
    AppGrantsPostEx:
      summary: App Grants example
      value:
        issuer: "{yourOktaDomain}"
        scopeId: okta.users.read
    AppUserAssignProvRequest:
      summary: SSO and provisioning Application User request example
      value:
        id: 00u15s1KDETTQMQYABRL
        scope: USER
        credentials:
          username: saml.jackson@example.com
        profile:
          salesforceGroups:
          - Employee
          role: Developer
          profile: Standard User
    AppUserAssignSSORequest:
      summary: SSO Application User request example
      value:
        id: 00ud4tVDDXYVKPXKVLCO
        scope: USER
        credentials:
          username: rae.cloud@example.com
    AppUserCredUpdateResponse:
      summary: Application User credential update
      value:
        id: 00ud4tVDDXYVKPXKVLCO
        externalId: null
        created: 2024-01-27T03:52:45.000Z
        lastUpdated: 2024-01-27T05:15:30.000Z
        scope: USER
        status: ACTIVE
        statusChanged: 2024-01-27T03:52:45.000Z
        passwordChanged: 2024-01-27T05:15:30.000Z
        syncState: DISABLED
        credentials":
          userName: rae.cloud@example.com
          password: {}
        profile:
          street_address: null
          country: null
          website: null
          zoneinfo: America/Los_Angeles
          birthdate: null
          gender: null
          formatted: null
          profile: null
          locality: null
          given_name: Rae
          middle_name: null
          locale: en_US
          picture: null
          name: Rae Cloud
          nickname: null
          phone_number: null
          region: null
          postal_code: null
          family_name: Cloud
          email: rae.cloud@example.com
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00ud4tVDDXYVKPXKVLCO"
    AppUserListEx:
      summary: List Application User example
      value:
      - id: 00u1dnq5S0CfjlkpABCD
        externalId: 00u5edt3PNbbjzvIABCD
        created: 2024-01-31T18:25:01.000Z
        lastUpdated: 2024-01-31T18:25:03.000Z
        scope: USER
        status: PROVISIONED
        statusChanged: 2024-01-31T18:25:03.000Z
        passwordChanged: null
        syncState: SYNCHRONIZED
        lastSync: 2024-01-31T18:25:03.000Z
        credentials:
          userName: saml.test@example.com
        profile:
          secondEmail: null
          lastName: Test
          mobilePhone: null
          displayName: Saml O Test
          email: saml.test@example.com
          salesforceGroups: []
          role: Tester
          firstName: Saml
          streetAddress: null
          profile: Standard Platform User
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/0oajiqIRNXPPJBNZMGYL"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD"
        _embedded:
          user:
            id: 00u1dnq5S0CfjlkpABCD
            status: ACTIVE
            created: 2024-01-09T15:36:04.000Z
            activated: 2024-01-09T15:36:05.000Z
            statusChanged: 2024-01-09T15:36:05.000Z
            lastLogin: null
            lastUpdated: 2024-01-09T15:36:05.000Z
            passwordChanged: 2024-01-09T15:36:05.000Z
            type:
              id: otyzhh29g7Python90g3
            profile:
              firstName: Saml
              lastName: Test
              mobilePhone: null
              secondEmail: null
              login: saml.test@example.com
              email: saml.test@example.com
            credentials:
              password: {}
              provider:
                type: OKTA
                name: OKTA
            _links:
              suspend:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/suspend"
                method: POST
              schema:
                href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscarho9g7PythoN23z9"
              resetPassword:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/reset_password"
                method: POST
              expirePassword:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/expire_password"
                method: POST
              changeRecoveryQuestion:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/credentials/change_recovery_question"
                method: POST
              self:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD"
              type:
                href: "https://{yourOktaDomain}/api/v1/meta/types/user/otyzhh29g7Python90g3"
              changePassword:
                href: https://rain.okta1.com/api/v1/users/00u1dnq5S0CfjlkpABCD/credentials/change_password
                method: POST
              deactivate:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/deactivate"
                method: POST
    AppUserProfUpdateResponse:
      summary: Application User profile update
      value:
        id: 00ud4tVDDXYVKPXKVLCO
        externalId: null
        created: 2024-01-27T03:52:45.000Z
        lastUpdated: 2024-01-27T05:05:32.000Z
        scope: USER
        status: ACTIVE
        statusChanged: 2024-01-27T03:52:45.000Z
        passwordChanged: null
        syncState: DISABLED
        credentials":
          userName: rae.cloud@example.com
        profile:
          street_address: null
          country: null
          website: null
          zoneinfo: America/Los_Angeles
          birthdate: null
          gender: null
          formatted: null
          profile: null
          locality: null
          given_name: Rae
          middle_name: Mae
          locale: en_US
          picture: null
          name: Rae Mae Cloud
          nickname: null
          phone_number: null
          region: null
          postal_code: null
          family_name: Cloud
          email: rae.cloud@example.com
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00ud4tVDDXYVKPXKVLCO"
    AppUserProvExpandResponse:
      summary: Application User expand example
      value:
        id: 00u1dnq5S0CfjlkpABCD
        externalId: 00u5edt3PNbbjzvIABCD
        created: 2024-01-31T18:25:01.000Z
        lastUpdated: 2024-01-31T18:25:03.000Z
        scope: USER
        status: PROVISIONED
        statusChanged: 2024-01-31T18:25:03.000Z
        passwordChanged: null
        syncState: SYNCHRONIZED
        lastSync: 2024-01-31T18:25:03.000Z
        credentials:
          userName: saml.test@example.com
        profile:
          secondEmail: null
          lastName: Test
          mobilePhone: null
          displayName: Saml O Test
          email: saml.test@example.com
          salesforceGroups: []
          role: Tester
          firstName: Saml
          streetAddress: null
          profile: Standard Platform User
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/0oajiqIRNXPPJBNZMGYL"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD"
        _embedded:
          user:
            id: 00u1dnq5S0CfjlkpABCD
            status: ACTIVE
            created: 2024-01-09T15:36:04.000Z
            activated: 2024-01-09T15:36:05.000Z
            statusChanged: 2024-01-09T15:36:05.000Z
            lastLogin: null
            lastUpdated: 2024-01-09T15:36:05.000Z
            passwordChanged: 2024-01-09T15:36:05.000Z
            type:
              id: otyzhh29g7Python90g3
            profile:
              firstName: Saml
              lastName: Test
              mobilePhone: null
              secondEmail: null
              login: saml.test@example.com
              email: saml.test@example.com
            credentials:
              password: {}
              provider:
                type: OKTA
                name: OKTA
            _links:
              suspend:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/suspend"
                method: POST
              schema:
                href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscarho9g7PythoN23z9"
              resetPassword:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/reset_password"
                method: POST
              expirePassword:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/expire_password"
                method: POST
              changeRecoveryQuestion:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/credentials/change_recovery_question"
                method: POST
              self:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD"
              type:
                href: "https://{yourOktaDomain}/api/v1/meta/types/user/otyzhh29g7Python90g3"
              changePassword:
                href: https://rain.okta1.com/api/v1/users/00u1dnq5S0CfjlkpABCD/credentials/change_password
                method: POST
              deactivate:
                href: "https://{yourOktaDomain}/api/v1/users/00u1dnq5S0CfjlkpABCD/lifecycle/deactivate"
                method: POST
    AppUserProvResponse:
      summary: SSO and provisioning Application User response example
      value:
        id: 00u15s1KDETTQMQYABRL
        externalId: 005o0000000ogQ9AAI
        created: 2014-08-16T02:35:14.000Z
        lastUpdated: 2014-08-16T02:56:49.000Z
        scope: USER
        status: PROVISIONED
        statusChanged: 2014-08-16T02:56:49.000Z
        passwordChanged: null
        syncState: SYNCHRONIZED
        lastSync: 2014-08-16T02:56:49.000Z
        credentials:
          userName: saml.jackson@example.com
        profile:
          secondEmail: null
          lastName: Jackson
          mobilePhone: null
          email: saml.jackson@example.com
          salesforceGroups:
          - Employee
          role: Developer
          firstName: Saml
          profile: Standard User
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL"
    AppUserSSOResponse:
      summary: SSO Application User response example
      value:
        id: 00ud4tVDDXYVKPXKVLCO
        externalId: null
        created: 2024-01-27T03:52:45.000Z
        lastUpdated: 2024-01-27T03:52:45.000Z
        scope: USER
        status: ACTIVE
        statusChanged: 2024-01-27T03:52:45.000Z
        passwordChanged: null
        syncState: DISABLED
        credentials":
          userName: rae.cloud@example.com
        profile:
          street_address: null
          country: null
          website: null
          zoneinfo: America/Los_Angeles
          birthdate: null
          gender: null
          formatted: null
          profile: null
          locality: null
          given_name: Rae
          middle_name: null
          locale: en_US
          picture: null
          name: Rae Cloud
          nickname: null
          phone_number: null
          region: null
          postal_code: null
          family_name: Cloud
          email: rae.cloud@example.com
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00ud4tVDDXYVKPXKVLCO"
    AppUserSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                required: false
                minLength: 1
                maxLength: 20
            required: []
    AppUserSchemaResponse:
      value:
        id: "https://{yourOktaDomain}/meta/schemas/apps/0oa25gejWwdXNnFH90g4/default"
        $schema: http://json-schema.org/draft-04/schema#
        name: Example App
        title: Example App User
        lastUpdated: 2017-07-18T23:18:43.000Z
        created: 2017-07-18T22:35:30.000Z
        definitions:
          base:
            id: '#base'
            type: object
            properties:
              userName:
                title: Username
                type: string
                required: true
                scope: NONE
                maxLength: 100
            required:
            - userName
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                scope: NONE
                minLength: 1
                maxLength: 20
            required: []
        type: object
        properties:
          profile:
            allOf:
            - $ref: '#/definitions/base'
            - $ref: '#/definitions/custom'
    AppUserUpdateCredRequest:
      summary: Application User credentials update
      value:
        credentials:
          userName: rae.cloud@example.com
          password:
            value: updatedP@55word
    AppUserUpdateProfileRequest:
      summary: Application User profile update
      value:
        profile:
          name: Rae Mae Cloud
          middle_name: Mae
    ApplicationTargetResponse:
      value:
      - name: google
        displayName: Google Workspace
        description: "Gmail, Google Drive, Google Calendar, and Google Sites"
        status: ACTIVE
        lastUpdated: 2021-06-23T22:23:29.000Z
        category: COLLABORATION
        verificationStatus: OKTA_VERIFIED
        website: http://www.example.com/google-apps.html
        signOnModes:
        - SAML_2_0
        features:
        - DOWNLOAD_USERS_FOR_ROGUE_REPORT
        - EXCHANGE_ACTIVE_SYNC
        - GROUP_PUSH
        - IMPORT_NEW_USERS
        - IMPORT_PROFILE_UPDATES
        - IMPORT_USER_SCHEMA
        - PROFILE_MASTERING
        - PUSH_NEW_USERS
        - PUSH_PASSWORD_UPDATES
        - PUSH_PROFILE_UPDATES
        - PUSH_USER_DEACTIVATION
        - REACTIVATE_USERS
        _links:
          logo:
          - name: "medium,"
          - href: https://www.example.com/gfs3qpyglct9KMswo0g7
          self:
            href: "https://{yourOktaDomain}/api/v1/catalog/apps/google"
    AssignGroupOwnerRequest:
      summary: Assign a group owner request example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
    AssignGroupOwnerResponse:
      summary: Assign a group owner response example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
        resolved: true
        originId: null
        originType: OKTA_DIRECTORY
        displayName: Oliver Putnam
        lastUpdated: Wed Mar 29 18:34:31 UTC 2023
    AuthenticatorMethodInactiveVoice:
      value:
        type: voice
        status: INACTIVE
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/voice"
            hints:
              allow:
              - GET
              - PUT
          activate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/voice/lifecycle/activate"
            hints:
              allow:
              - POST
    AuthenticatorMethodPhone:
      value:
      - type: sms
        status: ACTIVE
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/sms"
            hints:
              allow:
              - GET
              - PUT
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/sms/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: voice
        status: INACTIVE
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/voice"
            hints:
              allow:
              - GET
              - PUT
          activate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/voice/lifecycle/activate"
            hints:
              allow:
              - POST
    AuthenticatorMethodSms:
      value:
        type: sms
        status: ACTIVE
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/sms"
            hints:
              allow:
              - GET
              - PUT
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/sms/lifecycle/deactivate"
            hints:
              allow":
              - POST
    AuthenticatorMethodWebauth:
      value:
        type: webauthn
        status: ACTIVE
        settings:
          userVerification: DISCOURAGED
          attachment: ANY
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods/webauthn"
            hints:
              allow:
              - GET
              - PUT
    AuthenticatorRequestDuo:
      value:
        key: duo
        name: Duo Security
        provider:
          type: DUO
          configuration:
            userNameTemplate:
              template: oktaId
            integrationKey: testIntegrationKey
            secretKey: testSecretKey
            host: https://api-xxxxxxxx.duosecurity.com
    AuthenticatorResponseDuo:
      value:
        type: app
        id: aut9gnvcjUHIWb37J0g4
        key: duo
        status: ACTIVE
        name: Duo Security
        created: 2022-07-15T21:14:02.000Z
        lastUpdated: 2022-07-15T21:14:02.000Z
        settings: {}
        provider:
          type: DUO
          configuration:
            host: https://api-xxxxxxxx.duosecurity.com
            userNameTemplate:
              template: oktaId
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4"
            hints:
              allow:
              - GET
              - PUT
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut5gnvcjUHIWb25J0g4/methods"
            hints:
              allow:
              - GET
    AuthenticatorResponseEmail:
      value:
        type: email
        id: aut1nbsPHh7jNjjyP0g4
        key: okta_email
        status: ACTIVE
        name: Email
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-28T21:45:52.000Z
        settings:
          allowedFor: any
          tokenLifetimeInMinutes: 5
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    AuthenticatorResponseInactiveWebAuthn:
      value:
        type: security_key
        id: aut1nd8PQhGcQtSxB0g4
        key: webauthn
        status: INACTIVE
        name: Security Key or Biometric
        created: 2020-07-26T21:16:37.000Z
        lastUpdated: 2020-07-27T18:59:30.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    AuthenticatorResponsePassword:
      value:
        type: password
        id: aut1nbtrJKKA9m45a0g4
        key: okta_password
        status: ACTIVE
        name: Password
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-26T21:05:23.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4/methods"
            hints:
              allow:
              - GET
    AuthenticatorResponsePhone:
      value:
        type: phone
        id: aut1nbuyD8m1ckAYc0g4
        key: phone_number
        status: INACTIVE
        name: Phone
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-29T00:21:29.000Z
        settings:
          allowedFor: none
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/methods"
            hints:
              allow:
              - GET
          activate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/lifecycle/activate"
            hints:
              allow:
              - POST
    AuthenticatorResponseSecurityQuestion:
      summary: Security Question
      value:
        type: security_question
        id: aut1nbvIgEenhwE6c0g4
        key: security_question
        status: ACTIVE
        name: Security Question
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-26T21:05:23.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4"
            hints:
              allow:
              - GET
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbvIgEenhwE6c0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    AuthenticatorResponseWebAuthn:
      value:
        type: security_key
        id: aut1nd8PQhGcQtSxB0g4
        key: webauthn
        status: ACTIVE
        name: Security Key or Biometric
        created: 2020-07-26T21:16:37.000Z
        lastUpdated: 2020-07-27T18:59:30.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    AuthenticatorsResponse:
      summary: Org Authenticators
      value:
      - type: email
        id: aut1nbsPHh7jNjjyP0g4
        key: okta_email
        status: ACTIVE
        name: Email
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-28T21:45:52.000Z
        settings:
          allowedFor: any
          tokenLifetimeInMinutes: 5
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbsPHh7jNjjyP0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: password
        id: aut1nbtrJKKA9m45a0g4
        key: okta_password
        status: ACTIVE
        name: Password
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-26T21:05:23.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbtrJKKA9m45a0g4/methods"
            hints:
              allow:
              - GET
      - type: phone
        id: aut1nbuyD8m1ckAYc0g4
        key: phone_number
        status: INACTIVE
        name: Phone
        created: 2020-07-26T21:05:23.000Z
        lastUpdated: 2020-07-29T00:21:29.000Z
        settings:
          allowedFor: none
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/methods"
            hints:
              allow:
              - GET
          activate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nbuyD8m1ckAYc0g4/lifecycle/activate"
            hints:
              allow:
              - POST
      - type: security_key
        id: aut1nd8PQhGcQtSxB0g4
        key: webauthn
        status: ACTIVE
        name: Security Key or Biometric
        created: 2020-07-26T21:16:37.000Z
        lastUpdated: 2020-07-27T18:59:30.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4"
            hints:
              allow:
              - GET
              - PUT
          methods:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/methods"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authenticators/aut1nd8PQhGcQtSxB0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    BehaviorRuleRequest:
      value:
        name: My Behavior Rule
        type: VELOCITY
    BehaviorRuleResponse:
      value:
        id: abcd1234
        name: My Behavior Rule
        type: VELOCITY
        settings:
          velocityKph: 805
        status: ACTIVE
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/behaviors/abcd1234
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    BundleEntitlementsResponse:
      summary: List of governance bundle entitlements
      value:
        entitlements:
        - id: espfxqCAJWWGELFTYASJ
          role: GROUP_MEMBERSHIP_ADMIN
          name: Group Membership Admin
          description: Perform all admin activities for groups in the org
          _links:
            values: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements/espfxqCAJWWGELFTYASJ/values
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          next:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles?after=bundleId12
          bundle:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
    CAPTCHAInstanceRequestHCaptcha:
      value:
        name: myHCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
    CAPTCHAInstanceRequestReCaptcha:
      value:
        name: myReCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
    CAPTCHAInstanceResponseHCaptcha:
      value:
        id: abcd1234
        name: myHCaptcha
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CAPTCHAInstanceResponseReCaptcha:
      value:
        id: abcd4567
        name: myReCaptcha
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CreateAnEventHook:
      summary: Create an event hook
      value:
        name: Event Hook Test
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
            - key: X-Other-Header
              value: my-header-value
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    CreateAnEventHookWithFilter:
      summary: Create an event hook with a filter
      value:
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
            - event: group.user_membership.add
              condition:
                expression: "event.target.?[type eq 'UserGroup'].size()>0 && event.target.?[displayName\
                  \ eq 'Sales'].size()>0"
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    CreateAssocAuthServerBody:
      summary: Create a trusted relationship between authorization servers
      value:
      - trusted: "{authorizationServerId}"
    CreateAssocAuthServerResponse:
      summary: Create a trusted relationship between authorization servers
      value:
      - id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: CUSTOM_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: AUTO
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
            use: sig
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - DELETE
    CreateAuthServerBody:
      summary: Create a custom authorization server
      value:
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - api://default
    CreateAuthServerResponse:
      summary: Create a custom authorization server
      value:
        id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: ORG_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: AUTO
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
        _links:
          scopes:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes"
            hints:
              allow:
              - GET
          claims:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims"
            hints:
              allow:
              - GET
          policies:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/policies"
            hints:
              allow:
              - GET
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - GET
              - DELETE
              - PUT
          metadata:
          - name: oauth-authorization-server
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/oauth-authorization-server"
            hints:
              allow:
              - GET
          - name: openid-configuration
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/openid-configuration"
            hints:
              allow:
              - GET
          rotateKey:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/credentials/lifecycle/keyRotate"
            hints:
              allow:
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
    CreateBrandRequest:
      value:
        name: My Awesome Brand
    CreateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g5
        removePoweredByOkta: false
        customPrivacyPolicyUrl: "null,"
        agreeToCustomPrivacyPolicy: "false,"
        name: My Awesome Brand
        locale: en
        defaultApp:
          appInstanceId: null
          appLinkName: null
          classicApplicationUri: null
        isDefault: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          themes:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5/themes"
            hints:
              allow:
              - GET
    CreateCustomTokenClaimBody:
      summary: Create a custom token Claim
      value:
      - alwaysIncludeInToken: true
        claimType: IDENTITY
        conditions:
          scopes:
          - profile
        group_filter_type: CONTAINS
        name: Support
        status: ACTIVE
        system: false
        value: Support
        valueType: GROUPS
    CreateCustomTokenClaimResponse:
      summary: Create a custom token Claim response
      value:
      - id: "{claimId}"
        name: Support
        status: ACTIVE
        claimType: IDENTITY
        valueType: GROUPS
        value: Support
        conditions:
          scopes:
          - profile
        system: false
        alwaysIncludeInToken: true
        apiResourceId: null
        group_filter_type: CONTAINS
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims/{claimId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    CreateEDNZRequest:
      summary: Create an Enhanced Dynamic Network Zone
      value:
        type: DYNAMIC_V2
        name: testZone106
        status: ACTIVE
        usage: BLOCKLIST
        locations:
          include: []
          exclude: []
        asns:
          include: []
          exclude: []
        ipServiceCategories:
          include:
          - ALL_ANONYMIZERS
          exclude: []
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    CreateEDNZResponse:
      summary: Enhanced Dynamic Network Zone
      value:
        type: DYNAMIC_V2
        id: nzok0oz2xYHOZtIch0g4
        name: testZone106
        status: ACTIVE
        usage: BLOCKLIST
        create: 2024-05-13T16:33:44.000Z
        lastUpdated: 2024-05-13T16:33:44.000Z
        system: false
        locations:
          include: []
          exclude: []
        asns:
          include: []
          exclude: []
        ipServiceCategories:
          include:
          - ALL_ANONYMIZERS
          exclude: []
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/zones/nzok0oz2xYHOZtIch0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/zones/nzok0oz2xYHOZtIch0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    CreateEmailDomainRequest:
      value:
        displayName: Admin
        userName: admin
        domain: example.com
        brandId: bnd100iSrkcN6aR680g1
        validationSubdomain: mail
    CreateHookKeyResponse:
      summary: Create a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: 2022-08-31T18:09:58.000Z
        lastUpdated: 2022-08-31T18:09:58.000Z
        isUsed: "false"
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: "null"
          e: AQAB
          "n": 2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    CreateIPPolicyBlockListNetworkZone:
      summary: Create an IP Blocklist Network Zone
      value:
        type: IP
        name: newBlockListNetworkZone
        status: ACTIVE
        usage: BLOCKLIST
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        - type: CIDR
          value: 2.3.4.5/24
        proxies: null
    CreateIPPolicyBlockListNetworkZoneResponse:
      summary: IP Blocklist Network Zone
      value:
        type: IP
        id: nzo1qasnPb1kqEq0e0g4
        name: newBlockListNetworkzone
        status: ACTIVE
        usage: BLOCKLIST
        created: 2021-08-09T20:22:09.000Z
        lastUpdated: 2021-08-09T20:22:09.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        - type: CIDR
          value: 2.3.4.5/24
        proxies: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzo1qasnPb1kqEq0e0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzo1qasnPb1kqEq0e0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    CreateIPPolicyNetworkZone:
      summary: Create an IP Policy Network Zone
      value:
        type: IP
        name: newNetworkZone
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        - type: CIDR
          value: 2.3.4.5/24
        proxies:
        - type: CIDR
          value: 2.2.3.4/24
        - type: CIDR
          value: 3.3.4.5/24
    CreateIPPolicyNetworkZoneResponse:
      summary: IP Policy Network Zone
      value:
        type: IP
        id: nzowb8T5Jh5xuAJ0o0g7
        name: newNetworkZone
        status: ACTIVE
        usage: POLICY
        created: 2021-08-09T21:32:01.000Z
        lastUpdated: 2021-08-09T21:32:01.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24'
        - type: CIDR
          value: 2.3.4.5/24
        proxies:
        - type: CIDR
          value: 2.2.3.4/24
        - type: CIDR
          value: 3.3.4.5/24
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowb8T5Jh5xuAJ0o0g7"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowb8T5Jh5xuAJ0o0g7/lifecycle/deactivate"
            hints:
              allow:
              - POST
    CreateLinkedObjectRequest:
      summary: Create manager-subordinate link request
      value:
        primary:
          name: manager
          title: manager
          description: Manager link property
          type: USER
        associated:
          name: subordinate
          title: subordinate
          description: Subordinate link property
          type: USER
    CreateLinkedObjectResponse:
      summary: Create manager-subordinate link property response
      value:
        primary:
          name: manager
          title: manager
          description: Manager link property
          type: USER
        associated:
          name: subordinate
          title: subordinate
          description: Subordinate link property
          type: USER
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/meta/schemas/user/linkedObjects/manager
    CreateOrReplaceSMSTemplateRequest:
      value:
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
    CreateOrReplaceSMSTemplateResponse:
      value:
        id: 6NQUJ5yR3bpgEiYmq8IC
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
    CreateSessionBody:
      summary: Create a new Session with a valid session token
      value:
        sessionToken: 00HiohZYpJgMSHwmL9TQy7RRzuY-q9soKp1SPmYYow
    CreateSessionResponse:
      summary: Create a new Session with a valid session token
      value:
        amr:
        - pwd
        createdAt: 2019-08-24T14:15:22Z
        expiresAt: 2019-08-24T14:15:22Z
        id: l7FbDVqS8zHSy65uJD85
        idp:
          id: 01a2bcdef3GHIJKLMNOP
          type: ACTIVE_DIRECTORY
        lastFactorVerification: 2019-08-24T14:15:22Z
        lastPasswordVerification: 2019-08-24T14:15:22Z
        login: user@example.com
        status: ACTIVE
        userId: 00u0abcdefGHIJKLMNOP
        _links:
          self:
            hints:
              allow:
              - DELETE
          href: "https://{yourOktaDomain}/api/v1/sessions/l7FbDVqS8zHSy65uJD85"
    CreateUISchemaBody:
      summary: UI Schema body request
      value:
        uiSchema:
          type: Group
          elements:
          - type: Control
            scope: '#/properties/firstName'
            label: First Name
            options:
              format: text
          - type: Control
            scope: '#/properties/lastName'
            label: Last Name
            options:
              format: text
          - type: Control
            scope: '#/properties/email'
            label: Primary email
            options:
              format: text
          buttonLabel: Submit
          label: Sign in
    CreateUISchemaResponse:
      summary: Returns full UI Schema body
      value:
        id: uis4a7liocgcRgcxZ0g7
        uiSchema:
          type: Group
          label: Sign in
          buttonLabel: Submit
          elements:
          - type: Control
            scope: '#/properties/firstName'
            label: First name
            options:
              format: text
          - type: Control
            scope: '#/properties/lastName'
            label: Last name
            options:
              format: text
          - type: Control
            scope: '#/properties/email'
            label: Primary email
            options:
              format: text
        created: 2022-07-25T12:56:31.000Z
        lastUpdated: 2022-07-26T11:53:59.000Z
        _links:
          self:
            href: https://exmaple.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    CreateUpdateEmailCustomizationRequest:
      value:
        language: fr
        subject: "Bienvenue dans ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a\
          \ href=\"${activationLink}\">Activer le compte</a></p></body></html>"
        isDefault: false
    CreateUpdateEmailCustomizationResponse:
      value:
        language: fr
        subject: "Bienvenue dans ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a\
          \ href=\"${activationLink}\">Activer le compte</a></p></body></html>"
        isDefault: false
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    CreateUpdateIamRolePermissionRequestExample:
      value:
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
            - city
            - state
            - zipCode
    CreateUserRequest:
      summary: Create a user type request
      value:
        description: A new custom user type
        displayName: New User Type
        name: newUserType
    CreateUserResponse:
      summary: Create a user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: New User Type
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
    CustomRoleAssignmentRequest:
      value:
        type: CUSTOM
        role: cr04cxy6yzSCtNciD0g7
        resource-set: iam4cxy6z7hhaZCSk0g7
    CustomRoleAssignmentResponse:
      value:
        id: irb4ey26fpFI3vQ8y0g7
        label: view_minimal
        type: CUSTOM
        status: ACTIVE
        created: 2023-05-01T15:16:47.000Z
        lastUpdated: 2023-05-01T15:16:47.000Z
        assignmentType: CLIENT
        resource-set: iam4cxy6z7hhaZCSk0g7
        role: cr04cxy6yzSCtNciD0g7
        _links:
          role:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr04cxy6yzSCtNciD0g7"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iam4cxy6z7hhaZCSk0g7"
          permissions:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr04cxy6yzSCtNciD0g7/permissions"
          member:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iam4cxy6z7hhaZCSk0g7/bindings/cr04cxy6yzSCtNciD0g7/members/irb4ey26fpFI3vQ8y0g7"
          assignee:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oa4ee9vgbIuqTUvd0g7"
    DeactivateNetworkZone:
      summary: Deactivated Network Zone
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: MyIpZone
        status: INACTIVE
        usage: POLICY
        created: 2021-06-24T20:37:32.000Z
        lastUpdated: 2021-06-24T20:37:32.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        proxies:
        - type: RANGE
          value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          activate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/activate"
            hints:
              allow:
              - POST
    DeactivatedSecurityEventsProviderResponse:
      summary: Inactive Security Events Provider
      value:
        id: sse1qg25RpusjUP6m0g5
        name: Security Events Provider with well-known URL
        type: okta
        status: INACTIVE
        settings:
          well_known_url: https://example.okta.com/.well-known/ssf-configuration
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
        _links:
          self:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          activate:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5/lifecycle/activate
            hints:
              allow:
              - POST
    DefaultEnhancedDynamicNetworkZone:
      summary: Default Enhanced Dynamic Network Zone
      value:
        type: DYNAMIC_V2
        id: nzohcnxFrSgsiwyHp0g4
        name: DefaultEnhancedDynamicZone
        status: ACTIVE
        usage: BLOCKLIST
        created: 2024-05-06T19:12:29.000Z
        lastUpdated: 2024-05-09T21:02:31.000Z
        system: true
        locations:
          include: []
          exclude: []
        ipServiceCategories:
          include:
          - ALL_ANONYMIZERS
          exclue: []
        asns:
          include: []
          exclude: []
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
    DefaultIpBlocklistNetworkZone:
      summary: Default IP Blocklist Network Zone
      value:
        type: IP
        id: nzou3u0stMCmgOzXK1d6
        name: BlockedIpZone
        status: ACTIVE
        usage: BLOCKLIST
        created: 2021-06-09T21:32:46.000Z
        lastUpdated: 2021-06-09T21:32:46.000Z
        system: true
        gateways: null
        proxies: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
    DefaultIpNetworkZone:
      summary: Default IP Network Zone
      value:
        type: IP
        id: nzou3u0ssJfZjYsWL1d6
        name: LegacyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-09T21:32:46.000Z
        lastUpdated: 2021-06-09T21:32:46.000Z
        system: true
        gateways: null
        proxies: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0ssJfZjYsWL1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0ssJfZjYsWL1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
    DefaultRealmAssignment:
      value:
        id: rul2jy7jLUlnO5ng00g4
        status: ACTIVE
        name: Catch-all
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: true
        conditions:
          profileSourceId: "0oa4enoRyjwSCy6hx0g4,"
          expression:
            value: string
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf2g5
        priority: 499
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO5ng00g4
            method: GET
    DefaultRealmResponse:
      value:
        id: guox9jQ16k9V8IQWL0g3
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: true
        profile:
          name: Default Realm
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IQWL0g3
            method: GET
    DeviceAssuranceAndroidRequest:
      summary: Android request
      value:
        name: Device Assurance Android
        osVersion:
          minimum: 12
        diskEncryptionType:
          include:
          - USER
          - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
          - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceAndroidResponse:
      summary: Android response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Android
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - USER
          - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    DeviceAssuranceAndroidWithDynamicVersionRequirementRequest:
      summary: Android with dynamic version requirement request
      value:
        name: Device Assurance Android
        osVersion:
          dynamicVersionRequirement:
            type: MINIMUM
            distanceFromLatestMajor: 0
        diskEncryptionType:
          include:
          - USER
          - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
          - BIOMETRIC
        secureHardwarePresent: true
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceAndroidWithDynamicVersionRequirementResponse:
      summary: Android with dynamic version requirement response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Android
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          dynamicVersionRequirement:
            type: MINIMUM
            distanceFromLatestMajor: 0
        diskEncryptionType:
          include:
          - USER
          - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceChromeOSWithThirdPartySignalProvidersRequest:
      summary: ChromeOS with third-party signal providers request
      value:
        name: Device Assurance ChromeOS
        platform: CHROMEOS
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            allowScreenLock: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_OS_VERIFIED_MODE
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceChromeOSWithThirdPartySignalProvidersResponse:
      summary: ChromeOS with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance ChromeOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        platform: CHROMEOS
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            allowScreenLock: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_OS_VERIFIED_MODE
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceIosRequest:
      summary: iOS request
      value:
        name: Device Assurance iOS
        osVersion:
          minimum: 12.4.5
        jailbreak: false
        platform: IOS
        screenLockType:
          include:
          - BIOMETRIC
    DeviceAssuranceIosResponse:
      summary: iOS response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance iOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        jailbroken: false
        platform: IOS
        screenLockType:
          include:
          - BIOMETRIC
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    DeviceAssuranceIosWithDynamicVersionRequirementRequest:
      summary: iOS with dynamic version requirement request
      value:
        name: Device Assurance iOS
        osVersion:
          dynamicVersionRequirement:
            type: EXACT_ANY_SUPPORTED
            latestSecurityPatch: true
        jailbreak: false
        platform: IOS
        screenLockType:
          include:
          - BIOMETRIC
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceIosWithDynamicVersionRequirementResponse:
      summary: iOS with dynamic version requirement response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance iOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          dynamicVersionRequirement:
            type: EXACT_ANY_SUPPORTED
            latestSecurityPatch: true
        jailbroken: false
        platform: IOS
        screenLockType:
          include:
          - BIOMETRIC
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceMacOSRequest:
      summary: macOS request
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceMacOSResponse:
      summary: macOS response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance macOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    DeviceAssuranceMacOSWithDynamicVersionRequirementRequest:
      summary: macOS with dynamic version requirement request
      value:
        name: Device Assurance macOS
        osVersion:
          dynamicVersionRequirement:
            type: EXACT
            distanceFromLatestMajor: 0
            latestSecurityPatch: true
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceMacOSWithDynamicVersionRequirementResponse:
      summary: macOS with dynamic version requirement response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance macOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          dynamicVersionRequirement:
            type: EXACT
            distanceFromLatestMajor: 0
            latestSecurityPatch: true
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceMacOSWithThirdPartySignalProvidersRequest:
      summary: macOS with third-party signal providers request
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain": testDomain
            builtInDnsClientEnabled": true
            chromeRemoteDesktopAppBlocked": true
            safeBrowsingProtectionLevel": true
            siteIsolationEnabled": true
            passwordProtectionWarningTrigger": PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode": true
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceMacOSWithThirdPartySignalProvidersResponse:
      summary: macOS with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance macOS
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            keyTrustLevel: CHROME_BROWSER_HW_KEY
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsRequest:
      summary: Windows request
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceWindowsResponse:
      summary: Windows response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    DeviceAssuranceWindowsWithDynamicVersionRequirementsRequest:
      summary: Windows with Windows 11 and Windows 10 dynamic version requirements
        request
      value:
        name: Device Assurance Windows
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          dynamicVersionRequirement:
            type: MINIMUM
            distanceFromLatestMajor: 1
            latestSecurityPatch: true
        - majorVersionConstraint: WINDOWS_10
          dynamicVersionRequirement:
            type: EXACT_ANY_SUPPORTED
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithDynamicVersionRequirementsResponse:
      summary: Windows with Windows 11 and Windows 10 dynamic version requirements
        response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          dynamicVersionRequirement:
            type: MINIMUM
            distanceFromLatestMajor: 1
            latestSecurityPatch: true
        - majorVersionConstraint: WINDOWS_10
          dynamicVersionRequirement:
            type: EXACT_ANY_SUPPORTED
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithThirdPartySignalProvidersRequest:
      summary: Windows with third-party signal providers request
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            secureBootEnabled: true
            windowsMachineDomain: testMachineDomain
            windowsUserDomain: testUserDomain
            thirdPartyBlockingEnabled: true
            crowdStrikeCustomerId: testCustomerId
            crowdStrikeAgentId": testAgentId
            keyTrustLevel: CHROME_BROWSER_HW_KEY
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithThirdPartySignalProvidersResponse:
      summary: Windows with third-party signal providers response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        thirdPartySignalProviders:
          dtc:
            osVersion:
              minimum: 10.0.19041.1110
            diskEncrypted: true
            osFirewall: true
            screenLockSecured: true
            browserVersion:
              minimum: 15393.27.0
            deviceEnrollmentDomain: testDomain
            builtInDnsClientEnabled: true
            chromeRemoteDesktopAppBlocked: true
            safeBrowsingProtectionLevel: ENHANCED_PROTECTION
            siteIsolationEnabled: true
            passwordProtectionWarningTrigger: PASSWORD_PROTECTION_OFF
            realtimeUrlCheckMode: true
            secureBootEnabled: true
            windowsMachineDomain: testMachineDomain
            windowsUserDomain: testUserDomain
            thirdPartyBlockingEnabled: true
            crowdStrikeCustomerId: testCustomerId
            crowdStrikeAgentId": testAgentId
            keyTrustLevel: CHROME_BROWSER_HW_KEY
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringRequest:
      summary: Windows with Windows 11 dynamic version requirement and Windows 10
        minimum version request
      value:
        name: Device Assurance Windows
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          dynamicVersionRequirement:
            type: EXACT
            distanceFromLatestMajor: 1
        - majorVersionConstraint: WINDOWS_10
          minimum: 10.0.19045.0
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithWin11DynamicVersionRequirementAndWin10MinimumVersionStringResponse:
      summary: Windows with Windows 11 dynamic version requirement and Windows 10
        minimum version response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          dynamicVersionRequirement:
            type: EXACT
            distanceFromLatestMajor: 1
        - majorVersionConstraint: WINDOWS_10
          minimum: 10.0.19045.0
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementRequest:
      summary: Windows with Windows 11 minimum version and a Windows 10 dynamic version
        requirement request
      value:
        name: Device Assurance Windows
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          minimum: 10.0.22000.0
        - majorVersionConstraint: WINDOWS_10
          dynamicVersionRequirement:
            type: NOT_ALLOWED
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceWindowsWithWin11MinimumVersionStringAndWin10DynamicVersionRequirementResponse:
      summary: Windows with Windows 11 minimum version and Windows 10 dynamic version
        requirement response
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Windows
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersionConstraints:
        - majorVersionConstraint: WINDOWS_11
          minimum: 10.0.22000.0
        - majorVersionConstraint: WINDOWS_10
          dynamicVersionRequirement:
            type: NOT_ALLOWED
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    DeviceResponse:
      value:
        id: guo8jx5vVoxfvJeLb0w4
        status: ACTIVE
        created: 2020-11-03T21:47:01.000Z
        lastUpdated: 2020-11-03T23:46:27.000Z
        profile:
          displayName: DESKTOP-EHAD3IE
          platform: WINDOWS
          manufacturer: International Corp
          model: "VMware7,1"
          osVersion: 10.0.18362
          serialNumber: 56 4d 4f 95 74 c5 d3 e7-fc 3a 57 9c c2 f8 5d ce
          udid: 954F4D56-C574-E7D3-FC3A-579CC2F85DCE
          sid: S-1-5-21-3992267483-1860856704-2413701314-500
          registered: true
          secureHardwarePresent: false
          diskEncryptionType: NONE
        resourceId: guo8jx5vVoxfvJeLb0w4
        resourceDisplayName:
          value: DESKTOP-EHAD3IE
          sensitive: false
        resourceType: UDDevice
        resourceAlternateId: null
        _links:
          suspend:
            href: "https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/suspend"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4"
            hints:
              allow:
              - GET
              - PATCH
              - PUT
          users:
            href: "https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/users"
            hints:
              allow:
              - GET
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    EmailCustomizationResponse:
      value:
        language: en
        isDefault: true
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    EmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: Admin
        userName: admin
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
        - recordType: TXT
          fqdn: _oktaverification.example.com
          verificationValue: 759080212bda43e3bc825a7d73b4bb64
        - recordType: CNAME
          fqdn: mail.example.com
          verificationValue: u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t02._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t022._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    EmailSettingsRequest:
      value:
        recipients: ALL_USERS
    EmailSettingsResponse:
      value:
        recipients: ALL_USERS
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
    EmailTemplateDefaultContentResponse:
      value:
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview"
            hints:
              allow:
              - GET
    EmbeddedGroupAssignmentSampleResponse:
      summary: Application Group with an embedded Group
      value:
        id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-02T13:17:57.000Z
        profile:
          preferredLanguage: English
          manager: Donald Glover
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Ronaldinho
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: wazobia
          userType: null
          department: marketing
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
        _embedded:
          group:
            id: 00g15acRUy0SYb9GT0g4
            created: 2024-06-02T13:02:12.000Z
            lastUpdated: 2024-06-02T13:02:12.000Z
            lastMembershipUpdated: 2024-06-02T13:03:13.000Z
            objectClass:
            - okta:user_group
            type: OKTA_GROUP
            profile:
              name: Football Group
              description: Group with professional footballers
            _links:
              logo:
              - name: medium
                href: "http://{yourOktaDomain}/assets/img/logos/groups/odyssey/okta-medium.30ce6d4085dff29412984e4c191bc874.png"
                type: image/png
              - name: large
                href: "http://{yourOktaDomain}/assets/img/logos/groups/odyssey/okta-large.c3cb8cda8ae0add1b4fe928f5844dbe3.png"
                type: image/png
              users:
                href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4/users"
              apps:
                href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4/apps"
    EmbeddedMetadataGroupAssignmentSampleResponse:
      summary: Application Group with embedded metadata
      value:
        id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-02T13:17:57.000Z
        profile:
          preferredLanguage: English
          manager: Donald Glover
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Ronaldinho
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: wazobia
          userType: null
          department: marketing
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
        _embedded:
          metadata:
            credentials: {}
            profile:
              division:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              preferredLanguage:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              manager:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              securityQuestion:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              securityAnswer:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              timezone:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              organization:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              initialStatus:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              managerId:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              userType:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              locale:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              department:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
    EntitlementValuesResponse:
      summary: List of bundle entitlement values
      value:
        entitlementValues:
        - id: entfxqCAJWWGELFTYAAA
          value: orn:okta:00o5rb5mt2H3d1TJd0h7:groups:00guaxWZ0AOa5NFAj0g3
          name: Restricted users group
          _links:
            group: http://your-subdomain.okta.com/api/v1/groups/00guaxWZ0AOa5NFAj0g3
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          bundle:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
          entitlements:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorAgentTimeOut:
      value:
        errorCode: E0000237
        errorSummary: Timed out waiting for agent.
        errorLink: E0000237
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: {0}"
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorAppFeatureAPIValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: feature"
        errorLink: E0000001
        errorId: oaeZLxeiHUUQomPkM8xOqvu1A
        errorCauses:
        - errorSummary: Provisioning is not enabled for the app instance.
    ErrorAppUserForbiddenAction:
      description: "If the `PUSH_NEW_USERS` or `PUSH_PROFILE_UPDATES` feature is enabled\
        \ and the request specifies a value for a profile-mapped (Universal Directory)\
        \ attribute that doesn't match the mapped value, then a 403 error is returned."
      summary: Forbidden action
      value:
        errorCode: E0000075
        errorSummary: Cannot modify the firstName attribute because it has a field
          mapping and profile push is enabled.
        errorLink: E0000075
        errorId: sampleWXiR_K-WwaTKhlgBQ
        errorCauses: []
    ErrorAppUserUpdateBadRequest:
      description: "If you attempt to assign a username or password to an app with\
        \ an incompatible authentication scheme, then a 400 error is returned."
      summary: Bad request
      value:
        errorCode: E0000041
        errorSummary: Credentials should not be set on this resource based on the
          scheme.
        errorLink: E0000041
        errorId: oaeUM77NBynQQu4C_qT5ngjGQ
        errorCauses:
          errorSummary: User level credentials should not be provided for this scheme.
    ErrorCAPTCHALimitOfOne:
      value:
        errorCode: E0000165
        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is
          allowed per Org.
        errorLink: E0000165
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorCAPTCHAOrgWideSetting:
      value:
        errorCode: E0000149
        errorSummary: "Current CAPTCHA is associated with org-wide settings, cannot\
          \ be removed."
        errorLink: E0000149
        errorId: samplezsusshPdiTWiITwqBt8
        errorCauses: []
    ErrorCAPTCHAOrgWideSettingNull:
      summary: "captchaId is null, but enabledPages is defined"
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: captchaId"
        errorLink: E0000001
        errorId: oae-hk3rssXQmOWDRsaFfxe8A
        errorCauses:
          errorSummary: "captchaId: Invalid CAPTCHA ID. The value of captchaId cannot\
            \ be blank when enabledPages is not empty. Please resubmit with an existing\
            \ CAPTCHA ID or disable CAPTCHA support on all supported pages."
    ErrorCreateBrandExists:
      value:
        errorCode: E0000202
        errorSummary: Brand name already exists.
        errorLink: E0000202
        errorId: oaeKABuesTdRvCXeCTpSpXAcQ
        errorCauses: []
    ErrorCreateUserWithExpiredPasswordWithNullPassword:
      value:
        errorCode: E0000124
        errorSummary: "Could not create user. To create a user and expire their password\
          \ immediately, a password must be specified"
        errorLink: E0000124
        errorId: oaeXxuZgXBySvqi1FvtkwoYCA
        errorCauses:
        - errorSummary: "Could not create user. To create a user and expire their\
            \ password immediately, a password must be specified"
    ErrorCreateUserWithExpiredPasswordWithoutActivation:
      value:
        errorCode: E0000125
        errorSummary: "Could not create user. To create a user and expire their password\
          \ immediately, \"activate\" must be true"
        errorLink: E0000125
        errorId: oaeDd77L9R-TJaD7j_rXsQ31w
        errorCauses:
        - errorSummary: "Could not create user. To create a user and expire their\
            \ password immediately, \"activate\" must be true"
    ErrorCreateUserWithTooManyManyGroupsResponse:
      value:
        errorCode: E0000093
        errorSummary: Target count limit exceeded
        errorLink: E0000093
        errorId: oaePVSLIYnIQsC0B-ptBIllVA
        errorCauses:
        - errorSummary: The number of group targets is too large.
    ErrorDeleteBrandAssociatedWithDomain:
      value:
        errorCode: E0000201
        errorSummary: A brand associated with a domain cannot be deleted
        errorLink: E0000201
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorDeleteDefaultBrand:
      value:
        errorCode: E0000200
        errorSummary: A default brand cannot be deleted
        errorLink: E0000200
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorDeviceAssuranceInUse:
      summary: Cannot delete device assurance policy in use by authentication policies
      value:
        errorSummary: Device assurance is in use and cannot be deleted.
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorEmailCustomizationCannotClearDefault:
      value:
        errorCode: E0000185
        errorSummary: The isDefault parameter of the default email template customization
          can't be set to false.
        errorLink: E0000185
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorEmailCustomizationCannotDeleteDefault:
      value:
        errorCode: E0000184
        errorSummary: A default email template customization can't be deleted.
        errorLink: E0000184
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailCustomizationDefaultAlreadyExists:
      value:
        errorCode: E0000182
        errorSummary: A default email template customization already exists.
        errorLink: E0000182
        errorId: oaeXYwTiMvASsC3O4HCzjFaCA
        errorCauses: []
    ErrorEmailCustomizationLanguageAlreadyExists:
      value:
        errorCode: E0000183
        errorSummary: An email template customization for that language already exists.
        errorLink: E0000183
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    ErrorEmailDomainAlreadyExists:
      value:
        errorCode: E0000197
        errorSummary: Email domain already exists.
        errorLink: E0000197
        errorId: oaeEdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailDomainInUse:
      value:
        errorCode: E0000216
        errorSummary: Email domain can't be deleted due to mail provider restrictions.
        errorLink: E0000216
        errorId: oaeEdRqprFuTyKokyYPbURJkB
        errorCauses: []
    ErrorEmailDomainInvalidStatus:
      value:
        errorCode: E0000217
        errorSummary: Invalid status. Can't validate email domain with current status.
        errorLink: E0000217
        errorId: oaeEdRqprFuTyKokyYPbURJkD
        errorCauses: []
    ErrorEmailDomainNotVerified:
      value:
        errorCode: E0000218
        errorSummary: Email domain couldn't be verified by mail provider.
        errorLink: E0000218
        errorId: oaeEdRqprFuTyKokyYPbURJkC
        errorCauses: []
    ErrorInvalidEmailTemplateRecipients:
      value:
        errorCode: E0000189
        errorSummary: This template does not support the recipients value.
        errorLink: E0000189
        errorId: oae8L1-UkcNTeGi5xVQ28_lww
        errorCauses: []
    ErrorInvalidLinkedObjectDef:
      summary: Invalid linked objection definition
      value:
        errorCode: E0000127
        errorSummary: Invalid linked objection definition. Linked object identifier
          is already in use.
        errorLink: E0000127
        errorId: oaeh5FICFF2RnqakoNofPadhw
        errorCauses:
        - errorSummary: Linked object identifier for primary is already in use.
          reason: UNIQUE_CONSTRAINT
          locationType: body
          domain: linkedObjects
        - errorSummary: Linked object identifier for associated is already in use.
          reason: UNIQUE_CONSTRAINT
          locationType: body
          domain: linkedObjects
    ErrorInvalidTokenProvided:
      summary: Invalid Token Provided
      value:
        errorCode: E0000011
        errorSummary: Invalid token provided
        errorLink: E0000011
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorMissingRequiredParameter:
      summary: Missing Required Parameter
      value:
        errorCode: E0000028
        errorSummary: The request is missing a required parameter.
        errorLink: E0000028
        errorId: sampleiCF-l7mr9XqM1NQ
        errorCauses: []
    ErrorNoConnectedAgents:
      value:
        errorCode: E0000236
        errorSummary: There are no connected agents.
        errorLink: E0000236
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorPinOrCredRequestsGenerationFailure:
      summary: PIN or Cred Requests Generation Failed
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: pinRequest|credRequests"
        errorLink: E0000001
        errorId: oaehk3rssXQmOWDRsaFfxe8A
        errorCauses:
          errorSummary: There was a problem generating the pinRequest|credRequests.
    ErrorPinOrCredResponsesProcessingFailure:
      summary: PIN or Cred Response Processing Failed
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: pinResponse|credResponses"
        errorLink: E0000001
        errorId: oaehk3rssXQmOWDRsaFfxe8B
        errorCauses:
          errorSummary: There was a problem generating the pinResponse|credResponses.
    ErrorPushProviderUsedByCustomAppAuthenticator:
      value:
        errorCode: E0000187
        errorSummary: Cannot delete push provider because it is being used by a custom
          app authenticator.
        errorLink: E0000187
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: "Not found: {0}"
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: You exceeded the maximum number of requests. Try again in a
          while.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    GetBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        agreeToCustomPrivacyPolicy: false
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null
        name: Okta Default
        isDefault: true
        locale: en
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          themes:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes"
            hints:
              allow:
              - GET
          emailDomain:
            href: "https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
    GetEmailTemplateResponse:
      value:
        name: UserActivation
        _embedded:
          customizationCount: 0
          settings:
            recipients: ALL_USERS
            _links:
              self:
                href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings"
                hints:
                  allow:
                  - GET
                  - PUT
              template:
                href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
                hints:
                  allow:
                  - GET
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          settings:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          defaultContent:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          customizations:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations"
            hints:
              allow:
              - GET
              - POST
              - DELETE
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    GetRealmAssignmentResponse:
      value:
        id: rul2jy7jLUlnO3ng00g4
        status: ACTIVE
        name: Realm Assignment 1
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: false
        conditions:
          profileSourceId: 0oa4enoRyjwSCy5hx0g4
          expression:
            value: string
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf0g5
        priority: 0
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO3ng00g4
            method: GET
    GetThemeResponse:
      value:
        id: thdul904tTZ6kWVhP0g3
        logo: "https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png"
        favicon: "https://{yourOktaDomain}/favicon.ico"
        backgroundImage: null
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    GetUserLinkedObjectResponse:
      summary: Retrieve User Linked Object value
      value:
      - _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7"
    GetUserResponse:
      summary: Retrieve a user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: New User Type
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
    GovernanceBundle:
      summary: Governance Bundle
      value:
        id: 0bbfxqCAJWWGELFTYAAA
        name: Group admin bundle
        description: Group bundle for administrative access
        status: ACTIVE
        orn: orn:okta:governance:00o5rb5mt2H3d1TJd0h7:bundles:0bbfxqCAJWWGELFTYAAA
        _links:
          self: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
          entitlements: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
    GovernanceBundleCreateRequestCustomRole:
      summary: Create governance bundle with custom role
      value:
        name: Custom admin bundle
        description: Custom bundle for administrative access
        entitlements:
          role: cr0WxyzJxGIr0ouum0g4
          resourceSets:
          - iamoJDFKaJxGIr0oamd9g
    GovernanceBundleCreateRequestScopedStandardRole:
      summary: Create governance bundle with scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
          targets:
          - 00guaxWZ0AOa5NFAj0g3
    GovernanceBundleCreateRequestStandardRole:
      summary: Create governance bundle with non-scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
    GovernanceBundleUpdateRequestCustomRole:
      summary: Update governance bundle with custom role
      value:
        name: Custom admin bundle
        description: Custom bundle for administrative access
        entitlements:
          role: cr0WxyzJxGIr0ouum0g4
          resourceSets:
          - iamoJDFKaJxGIr0oamd9g
    GovernanceBundleUpdateRequestScopedStandardRole:
      summary: Update governance bundle with scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
          targets:
          - 00guaxWZ0AOa5NFAj0g3
    GovernanceBundleUpdateRequestStandardRole:
      summary: Update governance bundle with non-scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
    GovernanceBundlesResponse:
      summary: List of governance bundles
      value:
        bundles:
        - id: 0bbfxqCAJWWGELFTYAAA
          name: Group admin bundle
          description: Group bundle for administrative access
          status: ACTIVE
          orn: orn:okta:governance:00o5rb5mt2H3d1TJd0h7:bundles:0bbfxqCAJWWGELFTYAAA
          _links:
            entitlements: http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          next:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/bundles?after=bundleId12
    GroupAssignmentExListResponse:
      summary: Application Groups list with embedded metadata
      value:
      - id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-02T13:17:57.000Z
        profile:
          preferredLanguage: English
          manager: Donald Glover
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Ronaldinho
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: wazobia
          userType: null
          department: marketing
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
        _embedded:
          metadata:
            credentials: {}
            profile:
              division:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              preferredLanguage:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              manager:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              securityQuestion:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              securityAnswer:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              timezone:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              organization:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              initialStatus:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              managerId:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              userType:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
              locale:
                source:
                  type: USER
                  value:
                  - id: 00uzojLwDGgUynjJS0g3
                    self:
                      href: "http://{yourOktaDomain}/api/v1/users/00uzojLwDGgUynjJS0g3"
                lastUpdated: null
              department:
                source:
                  type: MAPPING
                  value:
                  - id: null
                lastUpdated: null
    GroupAssignmentExResponse:
      summary: Application Group response
      value:
        id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-02T13:17:57.000Z
        profile:
          preferredLanguage: English
          manager: Donald Glover
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Ronaldinho
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: wazobia
          userType: null
          department: marketing
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
    GroupAssignmentPatchRequestExample:
      summary: Update app group request
      value:
      - op: replace
        path: /profile/manager
        value: Carlo Ancelotti
    GroupAssignmentPatchResponseExample:
      summary: Update Application Group response
      value:
        id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-03T13:42:20.000Z
        profile:
          preferredLanguage: English
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Jay Jay Okocha
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: null
          userType: null
          department: Accounting
          manager: Carlo Ancelotti
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
    GroupAssignmentPutRequestExample:
      summary: Assign Application Group request
      value:
        id: 00g15acRUy0SYb9GT0g4
        profile:
          preferredLanguage: English
          manager: Arsene Wenger
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Jay Jay Okocha
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: null
          userType: null
          department: Accounting
    GroupAssignmentPutResponseExample:
      summary: Assign Application Group response
      value:
        id: 00g15acRUy0SYb9GT0g4
        priority: 0
        lastUpdated: 2024-06-03T13:52:07.000Z
        profile:
          preferredLanguage: English
          manager: Arsene Wenger
          securityQuestion: Who is the footballer to have played the game
          securityAnswer: Jay Jay Okocha
          timezone: Canada/Eastern
          initialStatus: active_with_pass
          managerId: ike.ogb@gmail.com
          locale: en_US
          division: top
          organization: null
          userType: null
          department: Accounting
        _links:
          app:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4"
          self:
            href: "http://{yourOktaDomain}/api/v1/apps/0oa15anjcUHSI6hTB0g4/groups/00g15acRUy0SYb9GT0g4"
          group:
            href: "http://{yourOktaDomain}/api/v1/groups/00g15acRUy0SYb9GT0g4"
    GroupSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              groupContact:
                title: Group administrative contact
                description: Group administrative contact
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                - principal: SELF
                  action: READ_WRITE
            required: []
    GroupSchemaResponse:
      value:
        $schema: http://json-schema.org/draft-04/schema#
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/group/default"
            method: GET
            rel: self
        created: 2021-01-30T00:18:24.000Z
        definitions:
          base:
            id: '#base'
            properties: {}
            required:
            - name
            type: object
          custom:
            id: '#custom'
            properties:
              groupContact:
                description: Group administrative contact
                master:
                  type: PROFILE_MASTER
                mutability: READ_WRITE
                permissions:
                - action: READ_WRITE
                  principal: SELF
                scope: NONE
                title: Group administrative contact
                type: string
            required: []
            type: object
        description: Okta group profile template
        id: "https://{yourOktaDomain}/meta/schemas/group/default"
        lastUpdated: 2021-02-25T23:05:31.000Z
        name: group
        properties:
          profile:
            allOf:
            - $ref: '#/definitions/custom'
            - $ref: '#/definitions/base'
        title: Okta group
        type: object
    GroupTargetResponse:
      value:
      - id: 00g4cweckiXJaEqWl0g7
        created: 2023-01-20T08:28:32.000Z
        lastUpdated: 2023-01-20T08:28:32.000Z
        lastMembershipUpdated: 2023-01-20T08:54:49.000Z
        objectClass:
        - okta:user_group
        type: OKTA_GROUP
        profile:
          name: test_group
          description: null
        _links:
          logo:
          - name: medium
            href: https://www.example.com/okta-medium.png
            type: image/png
          - name: large
            href: https://www.example.com/okta-large.png
            type: image/png
          users:
            href: "https://{yourOktaDomain}/api/v1/groups/00g4cweckiXJaEqWl0g7/users"
          apps:
            href: "https://{yourOktaDomain}/api/v1/groups/00g4cweckiXJaEqWl0g7/apps"
    InlineHookTelephony:
      value:
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://your-external-webservice/sendOtp
            headers: []
            method: POST
            authScheme:
              type: HEADER
              key: x-telephony-key
        created: 2024-03-28T17:30:25.000Z
        id: caldpyulr3nbET2du1d7
        lastUpdated: 2024-05-07T16:35:18.000Z
        name: testTelephonyHook
        status: ACTIVE
        type: com.okta.telephony.provider
        version: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/inlineHooks/caldpyulr3nbET2du1d7"
          execute:
            href: "https://{yourOktaDomain}/api/v1/inlineHooks/caldpyulr3nbET2du1d7/execute"
            hints:
              allow":
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/inlineHooks/caldpyulr3nbET2du1d7/lifecycle/deactivate"
            hints:
              allow":
              - POST
    ListAllKeysResponse:
      summary: List All Keys response example
      value:
      - id: HKY1i2htmXF5UNQhL0g4
        keyId: bb5bed7d-6e4d-488f-9c86-59b93a2bb3fb
        name: My new key
        created: 2022-08-22T16:34:33.000Z
        lastUpdated: 2022-08-22T16:34:33.000Z
        isUsed: "true"
      - id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: Test key
        created: 2022-08-31T18:09:58.000Z
        lastUpdated: 2022-08-31T18:09:58.000Z
        isUsed: "false"
    ListAppGrantsEx:
      summary: List all app Grants example
      value:
      - id: oag91n9ruw3dsaXzP0h6
        status: ACTIVE
        created: 2023-02-21T16:54:00.000Z
        createdBy:
          id: 00u6eltha0nrSc47i0h7
          type: User
        lastUpdated: 2023-02-21T16:54:00.000Z
        issuer: "{yourOktaDomain}"
        clientId: "{clientId}"
        scopeId: okta.users.read
        source: ADMIN
        _embedded:
          scope:
            id: okta.users.read
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
            title: Application name
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}/grants/oag91n9ruw3dsaXzP0h6"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: Client name
      - id: oaghm3sh9ukdkvDmO0h6
        status: ACTIVE
        created: 2023-02-03T21:57:49.000Z
        createdBy:
          id: 00u6eltha0nrSc47i0h7
          type: User
        lastUpdated: 2023-02-03T21:57:49.000Z
        issuer: "{yourOktaDomain}"
        clientId: "{clientId}"
        scopeId: okta.apps.manage
        source: ADMIN
        _embedded:
          scope:
            id: okta.apps.manage
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
            title: Application name
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}/grants/oaghm3sh9ukdkvDmO0h6"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: Client name
    ListAssocAuthServerResponse:
      summary: List associated Authorization Servers
      value:
      - id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: CUSTOM_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: DYNAMIC
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
            use: sig
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - DELETE
    ListAuthServersResponse:
      summary: List all custom authorization servers in your org
      value:
      - id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: ORG_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: AUTO
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
        _links:
          scopes:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes"
            hints:
              allow:
              - GET
          claims:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims"
            hints:
              allow:
              - GET
          policies:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/policies"
            hints:
              allow:
              - GET
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - GET
              - DELETE
              - PUT
          metadata:
          - name: oauth-authorization-server
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/oauth-authorization-server"
            hints:
              allow:
              - GET
          - name: openid-configuration
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/openid-configuration"
            hints:
              allow:
              - GET
          rotateKey:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/credentials/lifecycle/keyRotate"
            hints:
              allow:
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
    ListBrandsResponse:
      value:
      - id: bnd114iNkrcN6aR680g4
        name: Okta Default
        isDefault: true
        agreeToCustomPrivacyPolicy: false
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null
        locale: en
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          themes:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes"
            hints:
              allow:
              - GET
          emailDomain:
            href: "https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
    ListClientsResponse:
      summary: List all Client resources for which an authorization server has tokens
      value:
      - client_id: "{clientId}"
        client_name: My Web App
        client_uri: "null,"
        logo_uri: "null,"
        _links:
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: My Web App
          tokens:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/clients/{clientId}/tokens"
            hints:
              allow:
              - GET
              - DELETE
    ListCustomTokenClaimsResponse:
      summary: List all custom token Claims for an authorization server
      value:
      - id: "{claimId}"
        name: sub
        status: ACTIVE
        claimType: RESOURCE
        valueType: EXPRESSION
        value: "(appuser != null) ? appuser.userName : app.clientId"
        conditions:
          scopes:
          - profile
        system: true
        alwaysIncludeInToken: true
        apiResourceId: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims/{claimId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    ListEmailCustomizationResponse:
      value:
      - language: en
        isDefault: true
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    ListEmailTemplateResponse:
      value:
      - name: UserActivation
        _embedded:
          customizationCount: 0
          settings:
            recipients: ALL_USERS
            _links:
              self:
                href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings"
                hints:
                  allow:
                  - GET
                  - PUT
              template:
                href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
                hints:
                  allow:
                  - GET
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          settings:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          defaultContent:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          customizations:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations"
            hints:
              allow:
              - GET
              - POST
              - DELETE
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    ListFeatureDependenciesResponse:
      summary: List all dependencies for a feature
      value:
      - id: ftrZooGoT8b41iWRiQs7
        description: Example feature description
        name: Example feature name
        stage:
          state: OPEN
          value: EA
        status: ENABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7"
          dependents:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents"
          dependencies:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies"
    ListFeatureDependentsResponse:
      summary: List all feature dependents for the specified feature
      value:
      - id: ftrZooGoT8b41iWRiQs7
        description: Example feature description
        name: Example feature name
        stage:
          state: OPEN
          value: EA
        status: ENABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7"
          dependents:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents"
          dependencies:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies"
    ListFeaturesResponse:
      summary: List all self-service features for your org
      value:
      - id: ftrZooGoT8b41iWRiQs7
        description: Example feature description
        name: Example feature name
        stage:
          state: CLOSED
          value: BETA
        status: DISABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7"
          dependents:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents"
          dependencies:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies"
    ListLinkedObjects:
      summary: List all Linked Object definitions
      value:
      - primary:
          name: manager
          title: manager
          description: Manager link property
          type: USER
        associated:
          name: subordinate
          title: subordinate
          description: Subordinate link property
          type: USER
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/meta/schemas/user/linkedObjects/manager
    ListMappingsResponse:
      summary: List all Profile Mappings response
      value:
      - id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4"
    ListOfSecurityEventsProviderInstances:
      summary: List of Security Events Providers
      value:
      - id: sse1qg25RpusjUP6m0g5
        name: Security Events Provider with well-known URL
        type: okta
        status: ACTIVE
        settings:
          well_known_url: https://example.okta.com/.well-known/ssf-configuration
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
        _links:
          self:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5/lifecycle/deactivate
            hints:
              allow:
              - POST
      - id: sse1qu4fUtsoD12iF0g5
        name: Security Events Provider with an issuer and a JWKS URL
        type: okta
        status: ACTIVE
        settings:
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
        _links:
          self:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qu4fUtsoD12iF0g5
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qu4fUtsoD12iF0g5/lifecycle/deactivate
            hints:
              allow:
              - POST
    ListRealmAssignmentsResponse:
      value:
      - id: rul2jy7jLUlnO3ng00g4
        status: ACTIVE
        name: Realm Assignment 1
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: false
        conditions:
          profileSourceId: 0oa4enoRyjwSCy5hx0g4
          expression:
            value: user.profile.role ==\"Manager\"
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf0g5
        priority: 0
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO3ng00g4
            method: GET
      - id: rul2jy7jLUlnO5ng00g4
        status: ACTIVE
        name: Catch-all
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: true
        conditions:
          profileSourceId: "0oa4enoRyjwSCy6hx0g4,"
          expression:
            value: string
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf2g5
        priority: 499
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO5ng00g4
            method: GET
    ListRealmAwareUsersResponse:
      summary: List all Users
      value:
      - id: 00u118oQYT4TBGuay0g4
        status: ACTIVE
        created: 2022-04-04T15:56:05.000Z
        activated: null
        statusChanged: null
        lastLogin: 2022-05-04T19:50:52.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        passwordChanged: 2022-04-04T16:00:22.000Z
        type:
          id: oty1162QAr8hJjTaq0g4
        profile:
          firstName: Alice
          lastName: Smith
          mobilePhone: null
          secondEmail: null
          login: alice.smith@example.com
          email: alice.smith@example.com
        realmId: guo1afiNtSnZYILxO0g4
        credentials:
          password: {}
          provider:
            type: OKTA
            name: OKTA
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    ListRealmsResponse:
      value:
      - id: guox9jQ16k9V8IFEL0g3
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: false
        profile:
          name: Car Co
          realmType: PARTNER
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IFEL0g3
            method: GET
    ListRefreshTokensClientsResponse:
      summary: List all refresh tokens for a Client
      value:
      - id: "{refreshTokenId}"
        status: ACTIVE
        created: 2023-09-21T19:59:56.000Z
        lastUpdated: 2023-09-21T20:00:38.000Z
        expiresAt: 2023-09-28T20:00:38.000Z
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        client_id: "{clientId}"
        userId: "{userId}"
        scopes:
        - offline_access
        - openid
        _embedded:
          scopes:
          - id: "{scopeId}"
            name: openid
            displayName: openid
            description: Signals that a request is an OpenID request
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes/{scopeId}"
                title: openid
          - id: "{scopeID}"
            name: offline_access
            displayName: Keep you signed in to the app
            description: "This keeps you signed in to the app, even when you aren't\
              \ using it."
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes/{scopeId}"
                itle: Keep you signed in to the app
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
            title: My Web App
          authorizationServer:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            title: Authorization Server name
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/clients/{clientId}/tokens/{tokenId}"
          revoke:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/clients/{clientId}/tokens/{tokenId}"
            hints:
              allow:
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: My Web App
          user:
            href: "https://{yourOktaDomain}/api/v1/users/{userId}"
            title: Joe User
    ListRiskProviderResponse:
      summary: List Risk Provider response example
      value:
      - id: 00rp12r4skkjkjgsn
        action: log_only
        name: Risk-Partner-X
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: 2021-01-05 22:18:30
        lastUpdated: 2021-01-05 22:18:30
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn"
            hints:
              allow:
              - GET
              - PUT
    ListRoleAssignments:
      value:
      - id: JBCUYUC7IRCVGS27IFCE2SKO
        label: Help Desk Administrator
        type: HELP_DESK_ADMIN
        status: ACTIVE
        created: 2023-05-01T14:24:54.000Z
        lastUpdated: 2023-05-01T14:24:54.000Z
        assignmentType: CLIENT
        _links:
          assignee:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0jrabyQWm4B9zVJPbotY/roles"
      - id: irb4ey26fpFI3vQ8y0g7
        label: view_minimal
        type: CUSTOM
        status: ACTIVE
        created: 2023-05-01T15:16:47.000Z
        lastUpdated: 2023-05-01T15:16:47.000Z
        assignmentType: CLIENT
        resource-set: iam4cxy6z7hhaZCSk0g7
        role: cr04cxy6yzSCtNciD0g7
        _links:
          role:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr04cxy6yzSCtNciD0g7"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iam4cxy6z7hhaZCSk0g7"
          permissions:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr04cxy6yzSCtNciD0g7/permissions"
          member:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iam4cxy6z7hhaZCSk0g7/bindings/cr04cxy6yzSCtNciD0g7/members/irb4ey26fpFI3vQ8y0g7"
          assignee:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oa4ee9vgbIuqTUvd0g7"
    ListSessionsResponse:
      value:
      - id: uij4ri8ZLk0ywyqxB0g1
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: CREATED
        importType: INCREMENTAL
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T16:15:44.000Z
    ListSessionsResponseForGetSessions:
      value:
      - id: uij4ri8ZLk0ywyqxB0g1
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: CREATED
        importType: INCREMENTAL
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T16:15:44.000Z
      - id: uij4ri8ZLk0ywyqxB0g2
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: TRIGGERED
        importType: INCREMENTAL
        created: 2022-04-04T16:56:05.000Z
        lastUpdated: 2022-05-05T17:15:44.000Z
      - id: uij4ri8ZLk0ywyqxB0g3
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: IN_PROGRESS
        importType: INCREMENTAL
        created: 2022-04-04T17:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
      - id: uij4ri8ZLk0ywyqxB0g4
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: EXPIRED
        importType: INCREMENTAL
        created: 2022-04-04T18:56:05.000Z
        lastUpdated: 2022-05-05T19:15:44.000Z
      - id: uij4ri8ZLk0ywyqxB0g5
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: CLOSED
        importType: INCREMENTAL
        created: 2022-04-04T19:56:05.000Z
        lastUpdated: 2022-05-05T20:15:44.000Z
    ListThemesResponse:
      value:
      - id: thdul904tTZ6kWVhP0g3
        logo: "https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png"
        favicon: "https://{yourOktaDomain}/favicon.ico"
        backgroundImage: null
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    ListUISchemaResponse:
      summary: Lists all UI Schemas response
      value:
      - id: uis4a7liocgcRgcxZ0g7
        uiSchema:
          type: Group
          label: Sign in
          buttonLabel: Submit
          elements:
          - type: Control
            scope: '#/properties/firstName'
            label: First name
            options:
              format: text
          - type: Control
            scope: '#/properties/lastName'
            label: Last name
            options:
              format: text
          - type: Control
            scope: '#/properties/email'
            label: Email
            options:
              format: text
          - type: Control
            scope: '#/properties/countryCode'
            label: Country code
            options:
              format: select
          - type: Control
            scope: '#/properties/bool2'
            label: bool2
            options:
              format: checkbox
          - type: Control
            scope: '#/properties/date'
            label: date
            options:
              format: text
          - type: Control
            scope: '#/properties/enum'
            label: enum
            options:
              format: radio
        created: 2022-07-25T12:56:31.000Z
        lastUpdated: 2022-07-26T11:53:59.000Z
        _links:
          self:
            href: https://example.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
            hints:
              allow:
              - GET
              - PUT
              - DELETE
      - id: uis4abjqkkKXVPGAU0g7
        uiSchema:
          type: Group
          label: Sign in 2
          buttonLabel: Submit
          elements:
          - type: Control
            scope: '#/properties/firstName'
            label: First name
            options:
              format: text
          - type: Control
            scope: '#/properties/lastName'
            label: Last name
            options:
              format: text
          - type: Control
            scope: '#/properties/email'
            label: Email
            options:
              format: text
          - type: Control
            scope: '#/properties/countryCode'
            label: Country code
            options:
              format: select
          - type: Control
            scope: '#/properties/bool2'
            label: bool2
            options:
              format: checkbox
          - type: Control
            scope: '#/properties/date'
            label: date
          - type: Control
            scope: '#/properties/enum'
            label: enum
            options:
              format: radio
        created: 2022-07-25T12:56:31.000Z
        lastUpdated: 2022-07-26T11:53:59.000Z
        _links:
          self:
            href: https://example.com/api/v1/meta/uischemas/uis4abjqkkKXVPGAU0g7
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    ListUserBlocksAnyDevicesResponse:
      value:
      - type: DEVICE_BASED
        appliesTo: ANY_DEVICES
    ListUserBlocksUnknownDevicesResponse:
      value:
      - type: DEVICE_BASED
        appliesTo: UNKNOWN_DEVICES
    ListUsersResponse:
      summary: List all Users
      value:
      - id: 00u118oQYT4TBTemp0g4
        status: ACTIVE
        created: 2022-04-04T15:56:05.000Z
        activated: null
        statusChanged: null
        lastLogin: 2022-05-04T19:50:52.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        passwordChanged: 2022-04-04T16:00:22.000Z
        type:
          id: oty1162QAr8hJjTaq0g4
        profile:
          firstName: Alice
          lastName: Smith
          mobilePhone: null
          secondEmail: null
          login: alice.smith@example.com
          email: alice.smith@example.com
        credentials:
          password: {}
          provider:
            type: OKTA
            name: OKTA
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    ListsAllUserTypes:
      summary: Lists all user types
      value:
      - id: otyfnly5cQjJT9PnR0g4
        displayName: New User Type
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
      - id: otyz9fj2jMiRBC1ZT1d6
        displayName: User
        name: user
        description: Okta user profile template with default permission settings
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: true
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
    ListsOwnerOneResponse:
      summary: Lists a response with one owner
      value:
      - id: 00g1gae1k0znUcLuU0h8
        type: GROUP
        resolved: true
        originId: "null"
        originType: OKTA_DIRECTORY
        displayName: Product & Engineering
        lastUpdated: 2023-03-29 18:18:37.0
    ListsOwnersMultipleResponse:
      summary: Lists a response with multiple owners
      value:
      - id: 00u1cmbqjkkmFXeqb0h8
        type: USER
        resolved: true
        originId: "null"
        originType: OKTA_DIRECTORY
        displayName: Mabel Mora
        lastUpdated: 2023-03-29T18:30:58.000Z
      - id: 00u1cmc52x5B86cnZ0h8
        type: USER
        resolved: true
        originId: "null"
        originType: OKTA_DIRECTORY
        displayName: Cinda Canning
        lastUpdated: 2023-03-29T18:30:55.000Z
    LogStreamActivateResponse:
      summary: Activate Log Stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: 2023-03-24T21:22:43.000Z
        created: 2023-03-24T21:02:43.000Z
        status: ACTIVE
        settings:
          accountId: "123456789012"
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4"
            method: GET
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate"
            method: POST
    LogStreamDeactivateResponse:
      summary: Deactivate Log Stream response
      value:
        id: 0oa7agphh5FT7H521d7
        type: splunk_cloud_logstreaming
        name: Splunk Cloud Example
        lastUpdated: 2023-03-24T21:23:00.000Z
        created: 2023-03-24T21:15:13.000Z
        status: INACTIVE
        settings:
          edition: aws
          host: okexample.splunkcloud.com
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7"
            method: GET
          activate:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7/lifecycle/activate"
            method: POST
    LogStreamGetAllResponse:
      summary: Lists all Log Streams
      value:
      - id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: 2023-03-24T21:02:43.000Z
        created: 2023-03-24T21:02:43.000Z
        status: ACTIVE
        settings:
          accountId: "123456789012"
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4"
            method: GET
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate"
            method: POST
    LogStreamPostRequest:
      summary: Create an AWS EventBridge Log Stream
      value:
        type: aws_eventbridge
        name: Example AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: "123456789012"
          region: us-east-2
    LogStreamPostResponse:
      summary: AWS EventBridge Log Stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: 2023-03-24T21:02:43.000Z
        created: 2023-03-24T21:02:43.000Z
        status: ACTIVE
        settings:
          accountId: "123456789012"
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4"
            method: GET
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate"
            method: POST
    LogStreamPutRequest:
      summary: Replace AWS EventBridge name
      value:
        type: aws_eventbridge
        name: Updated AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: "123456789012"
          region: us-east-2
    LogStreamPutResponse:
      summary: Replace AWS EventBridge name response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Updated AWS EventBridge
        lastUpdated: 2023-03-24T21:12:43.000Z
        created: 2023-03-24T21:02:43.000Z
        status: ACTIVE
        settings:
          accountId: "123456789012"
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4"
            method: GET
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate"
            method: POST
    LogStreamSchemaAws:
      value:
        $schema: https://json-schema.org/draft/2020-12/schema
        $id: "http://{yourOktaDomain}/api/v1/meta/schemas/logStream/aws_eventbridge"
        title: AWS EventBridge
        type: object
        properties:
          settings:
            description: Configuration properties specific to AWS EventBridge
            type: object
            properties:
              accountId:
                title: AWS Account ID
                description: Your Amazon AWS Account ID.
                type: string
                writeOnce: true
                pattern: "^\\d{12}$"
              eventSourceName:
                title: AWS Event Source Name
                description: An alphanumeric name (no spaces) to identify this event
                  source in AWS EventBridge.
                type: string
                writeOnce: true
                pattern: "^[\\.\\-_A-Za-z0-9]{1,75}$"
              region:
                title: AWS Region
                description: The destination AWS region for your system log events.
                type: string
                writeOnce: true
                oneOf:
                - title: US East (Ohio)
                  const: us-east-2
                - title: US East (N. Virginia)
                  const: us-east-1
                - title: US West (N. California)
                  const: us-west-1
                - title: US West (Oregon)
                  const: us-west-2
                - title: Canada (Central)
                  const: ca-central-1
                - title: Europe (Frankfurt)
                  const: eu-central-1
                - title: Europe (Ireland)
                  const: eu-west-1
                - title: Europe (London)
                  const: eu-west-2
                - title: Europe (Paris)
                  const: eu-west-3
                - title: Europe (Milan)
                  const: eu-south-1
                - title: Europe (Stockholm)
                  const: eu-north-1
            required:
            - eventSourceName
            - accountId
            - region
            errorMessage:
              properties:
                accountId: Account number must be 12 digits.
                eventSourceName: "Event source name can use numbers, letters, the\
                  \ symbols \".\", \"-\" or \"_\". It must use fewer than 76 characters."
          name:
            title: Name
            description: A name for this log stream in Okta
            type: string
            writeOnce: false
            pattern: "^.{1,100}$"
        required:
        - name
        - settings
        errorMessage:
          properties:
            name: Name can't exceed 100 characters.
    LogStreamSchemaList:
      value:
      - $schema: https://json-schema.org/draft/2020-12/schema
        $id: "http://{yourOktaDomain}/api/v1/meta/schemas/logStream/aws_eventbridge"
        title: AWS EventBridge
        type: object
        properties:
          settings:
            description: Configuration properties specific to AWS EventBridge
            type: object
            properties:
              accountId:
                title: AWS Account ID
                description: Your Amazon AWS Account ID.
                type: string
                writeOnce: true
                pattern: "^\\d{12}$"
              eventSourceName:
                title: AWS Event Source Name
                description: An alphanumeric name (no spaces) to identify this event
                  source in AWS EventBridge.
                type: string
                writeOnce: true
                pattern: "^[\\.\\-_A-Za-z0-9]{1,75}$"
              region:
                title: AWS Region
                description: The destination AWS region for your system log events.
                type: string
                writeOnce: true
                oneOf:
                - title: US East (Ohio)
                  const: us-east-2
                - title: US East (N. Virginia)
                  const: us-east-1
                - title: US West (N. California)
                  const: us-west-1
                - title: US West (Oregon)
                  const: us-west-2
                - title: Canada (Central)
                  const: ca-central-1
                - title: Europe (Frankfurt)
                  const: eu-central-1
                - title: Europe (Ireland)
                  const: eu-west-1
                - title: Europe (London)
                  const: eu-west-2
                - title: Europe (Paris)
                  const: eu-west-3
                - title: Europe (Milan)
                  const: eu-south-1
                - title: Europe (Stockholm)
                  const: eu-north-1
            required:
            - eventSourceName
            - accountId
            - region
            errorMessage:
              properties:
                accountId: Account number must be 12 digits.
                eventSourceName: "Event source name can use numbers, letters, the\
                  \ symbols \".\", \"-\" or \"_\". It must use fewer than 76 characters."
          name:
            title: Name
            description: A name for this log stream in Okta
            type: string
            writeOnce: false
            pattern: "^.{1,100}$"
        required:
        - name
        - settings
        errorMessage:
          properties:
            name: Name can't exceed 100 characters.
      - $schema: https://json-schema.org/draft/2020-12/schema
        $id: "http://{yourOktaDomain}/api/v1/meta/schemas/logStream/splunk_cloud_logstreaming"
        title: Splunk Cloud
        type: object
        properties:
          settings:
            description: Configuration properties specific to Splunk Cloud
            type: object
            properties:
              host:
                title: Host
                description: "The domain for your Splunk Cloud instance without http\
                  \ or https. For example: acme.splunkcloud.com"
                type: string
                writeOnce: false
                pattern: "^([a-z0-9]+(-[a-z0-9]+)*){1,100}\\.splunkcloud(gc|fed)?\\\
                  .com$"
              token:
                title: HEC Token
                description: The token from your Splunk Cloud HTTP Event Collector
                  (HEC).
                type: string
                writeOnce: false
                pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
            required:
            - host
            - token
            errorMessage:
              properties:
                host: "Host should be a domain without http or https. For example:\
                  \ acme.splunkcloud.com"
          name:
            title: Name
            description: A name for this log stream in Okta
            type: string
            writeOnce: false
            pattern: "^.{1,100}$"
        required:
        - name
        - settings
        errorMessage:
          properties:
            name: Name can't exceed 100 characters.
    LogStreamSchemaSplunk:
      value:
        $schema: https://json-schema.org/draft/2020-12/schema
        $id: "http://{yourOktaDomain}/api/v1/meta/schemas/logStream/splunk_cloud_logstreaming"
        title: Splunk Cloud
        type: object
        properties:
          settings:
            description: Configuration properties specific to Splunk Cloud
            type: object
            properties:
              host:
                title: Host
                description: "The domain for your Splunk Cloud instance without http\
                  \ or https. For example: acme.splunkcloud.com"
                type: string
                writeOnce: false
                pattern: "^([a-z0-9]+(-[a-z0-9]+)*){1,100}\\.splunkcloud(gc|fed)?\\\
                  .com$"
              token:
                title: HEC Token
                description: The token from your Splunk Cloud HTTP Event Collector
                  (HEC).
                type: string
                writeOnce: false
                pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
            required:
            - host
            - token
            errorMessage:
              properties:
                host: "Host should be a domain without http or https. For example:\
                  \ acme.splunkcloud.com"
          name:
            title: Name
            description: A name for this log stream in Okta
            type: string
            writeOnce: false
            pattern: "^.{1,100}$"
        required:
        - name
        - settings
        errorMessage:
          properties:
            name: Name can't exceed 100 characters.
    NzErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000003
        errorSummary: The request body was not well-formed.
        errorLink: E0000003
        errorId: samplewNxQUR9iohr4QYlD0eg
        errorCauses: []
    NzErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: "Not found: Resource not found: itd (NetworkZone)"
        errorLink: E0000007
        errorId: samplejCSVaKFDkCMElmKQ
        errorCauses: []
    OAuth2RefreshTokenResponseEx:
      summary: OAuth 2.0 refresh token example
      value:
        id: oar579Mcp7OUsNTlo0g3
        status: ACTIVE
        created: 2023-03-09T03:18:06.000Z
        lastUpdated: 2023-03-09T03:18:06.000Z
        expiresAt: 2023-03-16T03:18:06.000Z
        issuer: "https://{yourOktaDomain}/oauth2/ausain6z9zIedDCxB0h7"
        clientId: 0oabskvc6442nkvQO0h7
        userId: 00u5t60iloOHN9pBi0h7
        scopes:
        - offline_access
        - car:drive
        _embedded:
          scopes:
          - id: scppb56cIl4GvGxy70g3
            name: offline_access
            description: Requests a refresh token by default and is used to obtain
              more access tokens without re-prompting the user for authentication
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scppb56cIl4GvGxy70g3"
                title: offline_access
          - id: scp142iq2J8IGRUCS0g4
            name: car:drive
            displayName: Drive car
            description: Allows the user to drive a car
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scp142iq2J8IGRUCS0g4"
                title: Drive car
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7"
            title: Native
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
          revoke:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            hints:
              allow:
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oabskvc6442nkvQO0h7"
            title: Example Client App
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00upcgi9dyWEOeCwM0g3"
            title: Saml Jackson
          authorizationServer:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7"
            title: Example Authorization Server
    OAuth2RefreshTokenResponseListEx:
      summary: App refresh token list example
      value:
      - id: oar579Mcp7OUsNTlo0g3
        status: ACTIVE
        created: 2023-03-09T03:18:06.000Z
        lastUpdated: 2023-03-09T03:18:06.000Z
        expiresAt: 2023-03-16T03:18:06.000Z
        issuer: "https://{yourOktaDomain}/oauth2/ausain6z9zIedDCxB0h7"
        clientId: 0oabskvc6442nkvQO0h7
        userId: 00u5t60iloOHN9pBi0h7
        scopes:
        - offline_access
        - car:drive
        _embedded:
          scopes:
          - id: scppb56cIl4GvGxy70g3
            name: offline_access
            description: Requests a refresh token by default and is used to obtain
              more access tokens without re-prompting the user for authentication
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scppb56cIl4GvGxy70g3"
                title: offline_access
          - id: scp142iq2J8IGRUCS0g4
            name: car:drive
            displayName: Drive car
            description: Allows the user to drive a car
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scp142iq2J8IGRUCS0g4"
                title: Drive car
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7"
            title: Native
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
          revoke:
            href: "https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3"
            hints:
              allow:
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oabskvc6442nkvQO0h7"
            title: Example Client App
          user:
            href: "https://{yourOktaDomain}/api/v1/users/00upcgi9dyWEOeCwM0g3"
            title: Saml Jackson
          authorizationServer:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7"
            title: Example Authorization Server
    OperationResponse:
      value:
        id: rre4mje4ez6B2a7B60g7
        type: realm:assignment
        status: COMPLETED
        created: 2023-10-25T21:02:54.000Z
        started: 2023-10-25T21:02:54.000Z
        completed: 2023-10-25T21:02:54.000Z
        realmId: 00g1b7rvh0xPLKXFf0g5
        realmName: Realm Name
        assignmentOperation:
          configuration:
            id: 0pr1b7rxZj2ibQzfP0g5
            name: Realm Assignment 1
            conditions:
              profileSourceId: 0oa4enoRyjwSCy5hx0g4
              expression:
                value: string
            actions:
              assignUserToRealm:
                realmId: 00g1b7rvh0xPLKXFf0g5
        numUserMoved: 50
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez6B2a7B60g7
            method: GET
    OptInStatusResponse:
      summary: Opt in response
      value:
        optInStatus: OPTING_IN
        _links:
          optInStatus:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/optIn
    OptOutStatusResponse:
      summary: Opt out response
      value:
        optInStatus: OPTING_OUT
        _links:
          optInStatus:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/optIn
    OrgCAPTCHASettingsConfigured:
      summary: Org-wide Captcha Settings are configured
      value:
        captchaId: abcd4567
        enabledPages:
        - SSR
        - SIGN_IN
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    OrgCAPTCHASettingsDisable:
      summary: Disable Org-wide Captcha Settings
      value:
        captchaId: "null"
        enabledPages: "null"
    OrgCAPTCHASettingsDisabled:
      summary: Disabled Org-wide Captcha Settings
      value:
        captchaId: "null"
        enabledPages: "[]"
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/
            hints:
              allow:
              - GET
              - PUT
    OrgCAPTCHASettingsEmpty:
      summary: Org-wide Captcha Settings aren't configured
      value:
        captchaId: null
        enabledPages: []
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    OrgCAPTCHASettingsUpdate:
      summary: Update Org-wide Captcha Settings
      value:
        captchaId: abcd4567
        enabledPages:
        - SSR
        - SIGN_IN
    OrgCAPTCHASettingsUpdated:
      summary: Updated Org-wide Captcha Settings
      value:
        captchaId: abcd4567
        enabledPages:
        - SSR
        - SIGN_IN
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    PasswordImportPayloadExample:
      summary: An example password import inline hook request body
      value:
        eventId: 3o9jBzq1SmOGmmsDsqyyeQ
        eventTime: 2020-01-17T21:23:56.000Z
        eventType: com.okta.user.credential.password.import
        eventTypeVersion: "1.0"
        contentType: application/json
        cloudEventVersion: "0.1"
        source: "https://${yourOktaDomain}/api/v1/inlineHooks/cbl2ad6phv9fsPLcF0g7"
        data:
          context:
            request:
              id: XiIl6wn7005Rr@fjYqeC7CCDBxw
              method: POST
              url:
                value: /idp/idx/challenge/answer
              ipAddress: 66.124.153.138
            credential:
              username: isaac.brock@example.com
              password: Okta
          action:
            credential: UNVERIFIED
    PasswordImportUnVerifiedResponse:
      summary: A sample response for an unverified user password
      value:
        commands:
        - type: com.okta.action.update
          value:
            credential: UNVERIFIED
    PasswordImportVerifiedResponse:
      summary: A sample response for a verified user password
      value:
        commands:
        - type: com.okta.action.update
          value:
            credential: VERIFIED
    PerClientRateLimitSettingsEnforceDefault:
      value:
        defaultMode: ENFORCE
    PerClientRateLimitSettingsEnforceDefaultWithOverrides:
      value:
        defaultMode: ENFORCE
        useCaseModeOverrides:
          OAUTH2_AUTHORIZE: PREVIEW
          OIE_APP_INTENT: DISABLE
    PerClientRateLimitSettingsPreviewDefaultWithOverrides:
      value:
        defaultMode: PREVIEW
        useCaseModeOverrides:
          LOGIN_PAGE: ENFORCE
    PermissionResponse:
      value:
        label: okta.users.manage
        created: 2021-02-06T16:20:57.000Z
        lastUpdated: 2021-02-06T16:20:57.000Z
        _links:
          role:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.manage"
    PermissionResponseWithConditions:
      value:
        label: okta.users.read
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
            - city
            - state
            - zipCode
        created: 2021-02-06T16:20:57.000Z
        lastUpdated: 2021-02-06T16:20:57.000Z
        _links:
          role:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read"
    PermissionsResponse:
      value:
        permissions:
        - label: okta.users.create
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            role:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.create"
        - label: okta.users.read
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            role:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read"
        - label: okta.groups.read
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            role:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.groups.read"
        - label: okta.users.userprofile.manage
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            role:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.userprofile.manage"
    PreviewEmailCustomizationResponse:
      value:
        subject: Welcome to Okta!
        body: "<!DOCTYPE html><html><body><p>Hello, John. Click <a href=\"https://{yourOktaDomain}/...\"\
          >here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview"
            hints:
              allow:
              - GET
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          test:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    PreviewEmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to Okta!
        body: "<!DOCTYPE html><html><body><p>Hello, John. Click <a href=\"https://{yourOktaDomain}/...\"\
          >here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview"
            hints:
              allow:
              - GET
          template:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          defaultContent:
            href: "https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test/default-content"
            hints:
              allow:
              - POST
    PrincipalRateLimitEntityRequestEmptyPercentages:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
    PrincipalRateLimitEntityRequestSSWSToken:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
    PrincipalRateLimitEntityResponseSSWSToken:
      value:
        id: abcd1234
        orgId: org1234
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
        createdDate: 2022-05-19T20:05:32.720Z
        createdBy: user1234
        lastUpdate: 2022-05-20T21:13:07.410Z
        lastUpdatedBy: user4321
    PrivilegedResourceCreateAppAccountRequest:
      value:
        resourceType: APP_ACCOUNT
        containerDetails:
          containerId: 0oa103099SBEb3Z2b0g4
        credentials:
          userName: testuser@example.com
    PrivilegedResourceCreateOktaAccountRequest:
      value:
        resourceType: OKTA_USER_ACCOUNT
        resourceId: 00u100xTfFs4MasRf0g4
    PrivilegedResourcesGetAppAccountResponse:
      value:
        id: opa100xTfFs4MasRf0g4
        resourceType: APP_ACCOUNT
        containerDetails:
          appName: "google,"
          containerId: "0oa103099SBEb3Z2b0g4,"
          displayName: "Google App1,"
          globalAppId: "964b82aa-85b4-5645-b790-83312c473480,"
          passwordPushSupported: "true,"
          provisioningEnabled: "true,"
          _links:
            login:
              href: "https://appinstance-admin.oktapreview.com/home/google/0oa103099SBEb3Z2b0g4,"
            logo:
              href: "https://appinstance-admin.oktapreview.com/assets/img/logos/default.6770228fb0dab49a1695ef440a5279bb.png,"
        credentials:
          userName: testuser@example.com
        created: 2024-06-10T11:11:01.000Z
        lastUpdated: 2024-06-10T11:11:01.000Z
        status: ACTIVE
        credentialChanged: 2024-06-10T11:30:01.000Z
        credentialSyncState: SYNCED
    PrivilegedResourcesGetOktaAccountResponse:
      value:
        id: opa100xTfFs4MasRf0g4
        resourceType: OKTA_USER_ACCOUNT
        resourceId: "00u100xTfFs4MasRf0g4,"
        credentials:
          userName: testuser@example.com
        profile:
          email: testuser@example.com
        created: 2024-06-10T11:11:01.000Z
        lastUpdated: 2024-06-10T11:11:01.000Z
        status: ACTIVE
        credentialChanged: 2024-06-10T11:30:01.000Z
        credentialSyncState: SYNCED
    ProvisioningConnectionOauthO365RequestEx:
      summary: Provisioning Connection with OAuth 2.0 for Microsoft Office 365 app
      value:
        profile:
          authScheme: OAUTH2
          settings:
            adminUsername: office_admin-username
            adminPassword: office_admin-password
    ProvisioningConnectionOauthRequestEx:
      summary: Provisioning Connection with OAuth 2.0
      value:
        profile:
          authScheme: OAUTH2
    ProvisioningConnectionOauthResponseEx:
      summary: Provisioning Connection with OAuth 2.0 for Microsoft Office 365 app
      value:
        status: ENABLED
        profile:
          authScheme: OAUTH2
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default"
            hints:
              allow:
              - GET
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default/lifecycle/deactivate"
            hints:
              allow:
              - POST
          authorize:
            href: https://login.microsoftonline.com/myofficetenant.onmicrosoft.com/oauth2/authorize?response_type=code&state=<code>>&client_id=<client_id>&redirect_uri=<redirect_uri>&scope=<scope>
            hints:
              allow:
              - GET
            guidance:
            - Specifies the URI to invoke in a browser for granting scope consent
              required to complete the OAuth 2.0 connection.
    ProvisioningConnectionTokenOrg2OrgRequestEx:
      summary: Provisioning Connection with token for Okta Org2Org app
      value:
        profile:
          authScheme: TOKEN
          clientId: 0oa2h6su6bVFyJzIf1d7
    ProvisioningConnectionTokenRequestEx:
      summary: Provisioning Connection with token for Zscaler 2.0 (`zscalerbyz`) app
      value:
        baseUrl: https://scim.zscalerbeta.net/1234567/890/scim
        profile:
          authScheme: TOKEN
          token: 00NgAPZqUVy8cX9ehNzzahEE5b-On9sImTcInvWp-x
    ProvisioningConnectionTokenResponseWithProfileOrg2OrgEx:
      summary: Provisioning Connection with token for Okta Org2Org (`okta_org2org`)
        app
      value:
        authScheme: TOKEN
        status: ENABLED
        baseUrl: https://targetorg.okta.com
        profile:
          authScheme: TOKEN
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default"
            hints:
              allow:
              - GET
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default/lifecycle/deactivate"
            hints:
              allow:
              - POST
    ProvisioningConnectionTokenResponseWithProfileZscalerEx:
      summary: Provisioning Connection with token for Zscaler 2.0 (`zscalerbyz`) app
      value:
        authScheme: TOKEN
        status: ENABLED
        baseUrl: https://scim.zscalerbeta.net/1234567/890/scim
        profile:
          authScheme: TOKEN
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default"
            hints:
              allow:
              - GET
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/connections/default/lifecycle/deactivate"
            hints:
              allow:
              - POST
    PushProviderAPNsRequest:
      value:
        name: APNs Example
        providerType: APNS
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          tokenSigningKey: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE
            KEY-----\n'
          fileName: fileName.p8
    PushProviderAPNsResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: APNs Example
        providerType: APNS
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    PushProviderFCMRequest:
      value:
        name: FCM Example
        providerType: FCM
        configuration:
          serviceAccountJson:
            type: service_account
            project_id: PROJECT_ID
            private_key_id: KEY_ID
            private_key: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE
              KEY-----\n'
            client_email: SERVICE_ACCOUNT_EMAIL
            client_id: CLIENT_ID
            auth_uri: https://accounts.google.com/o/oauth2/auth
            token_uri: https://accounts.google.com/o/oauth2/token
            auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
            client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL
          fileName: fileName.json
    PushProviderFCMResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: FCM Example
        providerType: FCM
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          projectId: PROJECT_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    RateLimitAdminNotificationsDisabled:
      value:
        notificationsEnabled: false
    RateLimitAdminNotificationsEnabled:
      value:
        notificationsEnabled: true
    RateLimitWarningThresholdValidExample:
      value:
        warningThreshold: 66
    RealmResponse:
      value:
        id: guox9jQ16k9V8IFEL0g3
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        isDefault: false
        profile:
          name: Car Co
        _links:
          self:
            rel: self
            href: http://your-subdomain.okta.com/api/v1/realms/guox9jQ16k9V8IFEL0g3
            method: GET
    RefreshCurrentSessionResponse:
      summary: Refresh current session
      value:
        amr:
        - pwd
        createdAt: 2019-08-24T14:15:22Z
        expiresAt: 2019-08-24T14:15:22Z
        id: l7FbDVqS8zHSy65uJD85
        idp:
          id: 01a2bcdef3GHIJKLMNOP
          type: ACTIVE_DIRECTORY
        lastFactorVerification: 2019-08-24T14:15:22Z
        lastPasswordVerification: 2019-08-24T14:15:22Z
        login: user@example.com
        status: ACTIVE
        userId: 00u0abcdefGHIJKLMNOP
        _links:
          self:
            hints:
              allow:
              - GET
              - DELETE
            href: "https://{yourOktaDomain}/api/v1/sessions/me"
          refresh:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/sessions/me/lifecycle/refresh"
          user:
            hints:
              allow:
              - GET
            href: "https://{yourOktaDomain}/api/v1/users/me"
            name: User Name
    RefreshSessionResponse:
      summary: Refresh an existing Session using the session ID
      value:
        amr:
        - pwd
        createdAt: 2019-08-25T14:17:22Z
        expiresAt: 2019-08-25T14:17:22Z
        id: l7FbDVqS8zHSy65uJD85
        idp:
          id: 01a2bcdef3GHIJKLMNOP
          type: ACTIVE_DIRECTORY
        lastFactorVerification: 2019-08-24T14:15:22Z
        lastPasswordVerification: 2019-08-24T14:15:22Z
        login: user@example.com
        status: ACTIVE
        userId: 00u0abcdefGHIJKLMNOP
        _links:
          self:
            hints:
              allow:
              - DELETE
          href: "https://{yourOktaDomain}/api/v1/sessions/l7FbDVqS8zHSy65uJD85"
    RemoveMappingBody:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        properties:
          nickName:
            expression: null
            pushStatus: null
    RemoveMappingResponse:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4"
    ReplaceAnEventHookWithFilter:
      summary: Replace an event hook
      value:
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
            - event: group.user_membership.add
              condition:
                expression: "event.target.?[type eq 'UserGroup'].size()>0 && event.target.?[displayName\
                  \ eq 'Sales'].size()>0"
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    ReplaceAuthServerBody:
      summary: Replace a custom authorization server
      value:
        name: New Authorization Server
        description: Authorization Server description
        audiences:
        - api://default
        credentials:
          signing:
            rotationMode: AUTO
            use: sig
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: ORG_URL
        status: ACTIVE
    ReplaceAuthServerResponse:
      summary: Replace a custom authorization server
      value:
        id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: ORG_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: AUTO
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
        _links:
          scopes:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes"
            hints:
              allow:
              - GET
          claims:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims"
            hints:
              allow:
              - GET
          policies:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/policies"
            hints:
              allow:
              - GET
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - GET
              - DELETE
              - PUT
          metadata:
          - name: oauth-authorization-server
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/oauth-authorization-server"
            hints:
              allow:
              - GET
          - name: openid-configuration
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/openid-configuration"
            hints:
              allow:
              - GET
          rotateKey:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/credentials/lifecycle/keyRotate"
            hints:
              allow:
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
    ReplaceCustomTokenClaimBody:
      summary: Replace a custom token Claim
      value:
      - alwaysIncludeInToken: true
        claimType: IDENTITY
        conditions:
          scopes:
          - profile
        group_filter_type: CONTAINS
        name: Knowledge_Base
        status: ACTIVE
        system: false
        value: Knowledge Base
        valueType: GROUPS
    ReplaceCustomTokenClaimResponse:
      summary: Replace a custom token Claim response
      value:
      - id: "{claimId}"
        name: Knowledge_Base
        status: ACTIVE
        claimType: IDENTITY
        valueType: GROUPS
        value: Knowledge Base
        conditions:
          scopes:
          - profile
        system: false
        alwaysIncludeInToken: true
        apiResourceId: null
        group_filter_type: CONTAINS
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims/{claimId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    ReplaceKeyResponse:
      summary: Replace a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My updated new key
        created: 2022-08-31T18:09:58.000Z
        lastUpdated: 2022-08-31T18:16:59.000Z
        isUsed: "false"
    ReplaceNetworkZone:
      summary: Replace a Network Zone
      value:
        type: IP
        id: nzovw2rFz2YoqmvwZ0g9
        name: UpdatedNetZone
        status: ACTIVE
        system: false
        usage: POLICY
        gateways:
        - type: CIDR
          value: 10.2.3.4/24
        - type: CIDR
          value: 12.2.3.4/24
        - type: RANGE
          value: 13.4.5.6-13.4.5.8
        - type: CIDR
          value: 14.2.3.4/24
        proxies:
        - type: CIDR
          value: 12.2.3.4/24
        - type: CIDR
          value: 13.3.4.5/24
        - type: RANGE
          value: 14.4.5.6-14.4.5.8
        - type: RANGE
          value: 15.5.6.7/24-15.5.6.9
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9/lifecycle/deactivate"
            hints:
              allow:
              - POST
    ReplaceNetworkZoneResponse:
      summary: Replace Network Zone
      value:
        type: IP
        id: nzovw2rFz2YoqmvwZ0g9
        name: UpdatedNetZone
        status: ACTIVE
        usage: POLICY
        created: 2022-05-08T18:25:05.000Z
        lastUpdated: 2022-05-10T13:15:22.000Z
        system: false
        gateways:
        - type: CIDR
          value: 10.2.3.4/24
        - type: CIDR
          value: 12.2.3.4/24
        - type: RANGE
          value: 13.4.5.6-13.4.5.8
        - type: CIDR
          value: 14.2.3.4/24
        proxies:
        - type: CIDR
          value: 12.2.3.4/24
        - type: CIDR
          value: 13.3.4.5/24
        - type: RANGE
          value: 14.4.5.6-14.4.5.8
        - type: RANGE
          value: 15.5.6.7/24-15.5.6.9
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzovw2rFz2YoqmvwZ0g9/lifecycle/deactivate"
            hints:
              allow:
              - POST
    ReplaceUserTypePutRequest:
      summary: Replace user type request
      value:
        displayName: Replacement Display Name
        description: Replacement description
        name: newUserType
    ReplaceUserTypePutResponse:
      summary: Replace user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: Replacement Display Name
        name: newUserType
        description: Replacement description
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
    ResourceSelectorCreateRequestExample:
      value:
        name: All applications except Workday applications
        description: All applications except Workday applications
        schema: /api/v1/apps
        filter: name ne "workday"
    ResourceSelectorCreateResponseExample:
      value:
        id: rsl1hx31gVEa6x10v0g5
        name: All applications except Workday applications
        description: All applications except Workday applications
        orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:resource_selectors:rsl1hx31gVEa6x10v0g5:apps
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/resource-selectors/rsl1hx31gVEa6x10v0g5"
          resources:
            href: "https://{yourOktaDomain}/api/v1/apps?filter=\"name ne \"workday\"\
              \""
    ResourceSelectorPatchRequestExample:
      value:
        name: All applications except Facebook applications
        description: All applications except Facebook applications
        filter: name ne "facebook"
    ResourceSelectorPatchResponseExample:
      value:
        id: rsl1hx31gVEa6x10v0g5
        name: All applications except Facebook applications
        description: All applications except Facebook applications
        orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:resource_selectors:rsl1hx31gVEa6x10v0g5:apps
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/resource-selectors/rsl1hx31gVEa6x10v0g5"
          resources:
            href: "https://{yourOktaDomain}/api/v1/apps?filter=\"name ne \"facebook\"\
              \""
    ResourceSelectorResponseExample:
      value:
        id: rsl1hx31gVEa6x10v0g5
        name: All applications except a specific application
        description: All applications except a specific application
        orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:resource_selectors:rsl1hx31gVEa6x10v0g5:apps
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/resource-selectors/rsl1hx31gVEa6x10v0g5"
          resources:
            href: "https://{yourOktaDomain}/api/v1/apps?filter=\"id ne 0oafxqAAJWWGELFTYASH\""
    ResourceSelectorsResponseExample:
      value:
        resourceSelectors:
        - id: rsl1hx31gVEa6x10v0g5
          name: All applications except Workday applications
          description: All applications except Workday applications
          orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:resource_selectors:rsl1hx31gVEa6x10v0g5:apps
          _links:
            resources:
              href: "http://${yourOktaDomain}/api/v1/apps?filter=\"id ne 0oafxqCAJWWGELFTYASJ\""
        - id: rsl1hx31gVEa6x10v0g6
          name: All applications except Facebook applications
          description: All applications except Facebook applications
          orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:resource_selectors:rsl1hx31gVEa6x10v0g6:apps
          _links:
            resources:
              href: "http://${yourOktaDomain}/api/v1/apps?filter=\"id ne 0oafxqAAJWWGELFTYASH"
        _links:
          next:
            href: "https://{yourOktaDomain}/api/v1/resource-selectors?after=rsl1hx31gVEa6x10v0g6"
    ResourceSetBindingAddMembersRequestExample:
      value:
        additions:
        - "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
        - "https://{yourOktaDomain}/api/v1/users/00u67DU2qNCjNZYO0g3"
    ResourceSetBindingCreateRequestExample:
      value:
        role: cr0Yq6IJxGIr0ouum0g3
        members:
        - "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
    ResourceSetBindingMemberResponse:
      value:
        id: irb1qe6PGuMc7Oh8N0g4
        created: 2021-02-06T16:20:57.000Z
        lastUpdated: 2021-02-06T16:20:57.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3"
    ResourceSetBindingMembersResponse:
      value:
        members:
        - id: irb1qe6PGuMc7Oh8N0g4
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3"
        - id: irb1q92TFAHzySt3x0g4
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
        _links:
          binding:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3"
          next:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members?after=0ouRq6IJmGIr3ouum0g3"
    ResourceSetBindingResponseExample:
      value:
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3"
          bindings:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
    ResourceSetBindingResponseWithIdExample:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3"
          bindings:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
    ResourceSetBindingsResponse:
      value:
        roles:
        - id: cr0WxyzJxGIr0ouum0g4
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0WxyzJxGIr0ouum0g4"
            members:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0WxyzJxGIr0ouum0g4/members"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
          next:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings?after=cr0WxyzJxGIr0ouum0g4"
    ResourceSetRequest:
      value:
        label: SF-IT-People
        description: People in the IT department of San Francisco
        resources:
        - "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
        - "https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users"
        - "https://{yourOktaDomain}/api/v1/users"
    ResourceSetResourcePatchRequestExample:
      value:
        additions:
        - "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
        - "https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users"
    ResourceSetResourcesResponse:
      value:
        resources:
        - id: ire106sQKoHoXXsAe0g4
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3"
        - id: ire106riDrTYl4qA70g4
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users"
        - id: irezvo4AwE2ngpMw40g3
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            users:
              href: "https://{yourOktaDomain}/api/v1/users"
            groups:
              href: "https://{yourOktaDomain}/api/v1/groups"
        _links:
          next:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources?after=irezvn1ZZxLSIBM2J0g3"
          resource-set:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
    ResourceSetResponse:
      value:
        id: iamoJDFKaJxGIr0oamd9g
        label: SF-IT-People
        description: People in the IT department of San Francisco
        created: 2021-02-06T16:20:57.000Z
        lastUpdated: 2021-02-06T16:20:57.000Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
          resources:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources"
          bindings:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings"
    ResourceSetsResponse:
      value:
        resource-sets:
        - id: iamoJDFKaJxGIr0oamd9g
          label: SF-IT-1
          description: First San Francisco IT Resource Set
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g"
            resources:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources"
            bindings:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings"
        - id: iamoJDFKaJxGIr0oamd0q
          label: SF-IT-2
          description: Second San Francisco IT Resource Set
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q"
            resources:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/resources"
            bindings:
              href: "https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/bindings"
        _links:
          next:
            href: "https://{yourOktaDomain}/api/v1/iam/resource-sets?after=iamoJDFKaJxGIr0oamd0q"
    RetrieveADeactivatedEventHook:
      summary: Deactivated event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: INACTIVE
        verificationStatus: VERIFIED
        name: Event Hook Test
        description: null
        created: 2023-07-07T13:41:56.000Z
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: 2023-07-07T13:43:03.000Z
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter: null
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
            - key: X-Other-Header
              value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
            hints:
              allow:
              - POST
          deactivate:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
              - POST
    RetrieveAllEventHooks:
      summary: Retrieves all event hooks
      value:
      - id: who8tsqyrhCdmetzx135
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook Test
        description: null
        created: 2023-07-07T17:41:56.000Z
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: 2023-07-07T17:43:03.000Z
        events:
          type: EVENT_TYPE
          items:
          - user.lifecycle.deactivate
          - user.lifecycle.activate
          filter: null
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userDeactivate
            headers: []
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135
          verify:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135/lifecycle/verify
            hints:
              allow:
              - POST
          deactivate:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135/lifecycle/deactivate
            hints:
              allow:
              - POST
      - id: who8vt36qfNpCGz9H1e6
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        created: 2023-07-07T13:41:56.000Z
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: 2023-07-07T13:43:03.000Z
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
            - event: group.user_membership.add
              condition:
                version: null
                expression: "event.target.?[type eq 'UserGroup'].size()>0 && event.target.?[displayName\
                  \ eq 'Sales'].size()>0"
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers: []
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
            hints:
              allow:
              - POST
          deactivate:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
              - POST
    RetrieveAllZones:
      summary: Retrieves all Network Zones
      value:
      - type: DYNAMIC_V2
        id: nzok0oz2xYHOZtIch0g4
        name: testZone106
        status: ACTIVE
        usage: BLOCKLIST
        create: 2024-05-13T16:33:44.000Z
        lastUpdated: 2024-05-13T16:33:44.000Z
        system: false
        locations:
          include: []
          exclude: []
        asns:
          include: []
          exclude: []
        ipServiceCategories:
          include:
          - ALL_ANONYMIZERS
          exclude: []
        _links:
          self:
            href: "http://{yourOktaDomain}/api/v1/zones/nzok0oz2xYHOZtIch0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "http://{yourOktaDomain}/api/v1/zones/nzok0oz2xYHOZtIch0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: DYNAMIC
        id: nzoy0ox5xADOZtKrh0g6
        name: test
        status: ACTIVE
        usage: POLICY
        created: 2022-05-19T15:33:32.000Z
        lastUpdated: 2022-05-19T15:33:32.000Z
        system: false
        locations:
        - country: AF
          region: AF-BGL
        proxyType: ANY
        asns:
        - "23457"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzoy0ox5xADOZtKrh0g6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzoy0ox5xADOZtKrh0g6/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: MyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-24T20:37:32.000Z
        lastUpdated: 2021-06-24T20:37:32.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        proxies:
        - type: RANGE
          value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: IP
        id: nzou3u0stMCmgOzXK1d6
        name: BlockedIpZone
        status: ACTIVE
        usage: BLOCKLIST
        created: 2021-06-09T21:32:46.000Z
        lastUpdated: 2021-06-09T21:32:46.000Z
        system: true
        gateways: null
        proxies: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: DYNAMIC_V2
        id: nzohcnxFrSgsiwyHp0g4
        name: DefaultEnhancedDynamicZone
        status: ACTIVE
        usage: BLOCKLIST
        created: 2024-05-06T19:12:29.000Z
        lastUpdated: 2024-05-09T21:02:31.000Z
        system: true
        locations:
          include: []
          exclude: []
        ipServiceCategories:
          include:
          - ALL_ANONYMIZERS
          exclue: []
        asns:
          include: []
          exclude: []
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0stMCmgOzXK1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
      - type: IP
        id: nzou3u0ssJfZjYsWL1d6
        name: LegacyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-09T21:32:46.000Z
        lastUpdated: 2021-06-09T21:32:46.000Z
        system: true
        gateways: null
        proxies: null
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0ssJfZjYsWL1d6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzou3u0ssJfZjYsWL1d6/lifecycle/deactivate"
            hints:
              allow:
              - POST
    RetrieveAllZonesWithFilter:
      summary: Retrieves Network Zones with filter
      value:
      - type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: MyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-24T20:37:32.000Z
        lastUpdated: 2021-06-24T20:37:32.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        proxies:
        - type: RANGE
          value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
    RetrieveAnEventHook:
      summary: Retrieve an event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook Test
        description: null
        created: 2023-07-07T13:41:56.000Z
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: 2023-07-07T13:43:03.000Z
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter: null
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
            - key: X-Other-Header
              value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
            hints:
              allow:
              - POST
          deactivate:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
              - POST
    RetrieveAnEventHookWithFilter:
      summary: Retrieve an event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        created: 2023-07-07T13:41:56.000Z
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: 2023-07-07T13:43:03.000Z
        events:
          type: EVENT_TYPE
          items:
          - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
            - event: group.user_membership.add
              condition:
                version: null
                expression: "event.target.?[type eq 'UserGroup'].size()>0 && event.target.?[displayName\
                  \ eq 'Sales'].size()>0"
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
          hints:
            allow:
            - POST
          deactivate:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
              - POST
    RetrieveAuthServerResponse:
      summary: Retrieve a custom authorization server
      value:
        id: "{authorizationServerId}"
        name: Sample Authorization Server
        description: Sample Authorization Server description
        audiences:
        - https://api.resource.com
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        issuerMode: ORG_URL
        status: ACTIVE
        created: 2023-05-17T22:25:57.000Z
        lastUpdated: 2023-05-17T22:25:57.000Z
        credentials:
          signing:
            rotationMode: AUTO
            lastRotated: 2023-05-17T22:25:57.000Z
            nextRotation: 2023-08-15T22:25:57.000Z
            kid: WYQxoK4XAwGFn5Zw5AzLxFvqEKLP79BbsKmWeuc5TB4
        _links:
          scopes:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes"
            hints:
              allow:
              - GET
          claims:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims"
            hints:
              allow:
              - GET
          policies:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/policies"
            hints:
              allow:
              - GET
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            hints:
              allow:
              - GET
              - DELETE
              - PUT
          metadata:
          - name: oauth-authorization-server
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/oauth-authorization-server"
            hints:
              allow:
              - GET
          - name: openid-configuration
            href: "https://{yourOktaDomain}/oauth2/{authorizationServerId}/.well-known/openid-configuration"
            hints:
              allow:
              - GET
          rotateKey:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/credentials/lifecycle/keyRotate"
            hints:
              allow:
              - POST
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
    RetrieveCurrentSessionResponse:
      summary: Retrieve current session
      value:
        amr:
        - pwd
        createdAt: 2019-08-24T14:15:22Z
        expiresAt: 2019-08-24T14:15:22Z
        id: l7FbDVqS8zHSy65uJD85
        idp:
          id: 01a2bcdef3GHIJKLMNOP
          type: ACTIVE_DIRECTORY
        lastFactorVerification: 2019-08-24T14:15:22Z
        lastPasswordVerification: 2019-08-24T14:15:22Z
        login: user@example.com
        status: ACTIVE
        userId: 00u0abcdefGHIJKLMNOP
        _links:
          self:
            hints:
              allow:
              - GET
              - DELETE
            href: "https://{yourOktaDomain}/api/v1/sessions/me"
          refresh:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/sessions/me/lifecycle/refresh"
          user:
            hints:
              allow:
              - GET
            href: "https://{yourOktaDomain}/api/v1/users/me"
            name: User Name
    RetrieveCustomTokenClaimResponse:
      summary: Retrieve a custom token Claim response
      value:
      - id: "{claimId}"
        name: Support
        status: ACTIVE
        claimType: IDENTITY
        valueType: GROUPS
        value: Support
        conditions:
          scopes:
          - profile
        system: false
        alwaysIncludeInToken: true
        apiResourceId: null
        group_filter_type: CONTAINS
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/claims/{claimId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    RetrieveFeaturesResponse:
      summary: Retrieve a feature by ID
      value:
        id: ftrZooGoT8b41iWRiQs7
        description: Example feature description
        name: Example feature name
        stage:
          state: CLOSED
          value: BETA
        status: DISABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7"
          dependents:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents"
          dependencies:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies"
    RetrieveKeyResponse:
      summary: Retrieve a key by hookKeyId response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: 2022-08-31T18:09:58.000Z
        lastUpdated: 2022-08-31T18:09:58.000Z
        isUsed: "false"
    RetrieveMappingsResponse:
      summary: Retrieve a single Profile Mapping
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
        properties:
          firstName:
            expression: user.firstName
            pushStatus: PUSH
          lastName:
            expression: user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4"
    RetrieveNetworkZoneDynamic:
      summary: Dynamic Network Zone
      value:
        type: DYNAMIC
        id: nzoy0ox5xADOZtKrh0g6
        name: test
        status: ACTIVE
        usage: POLICY
        created: 2022-05-19T15:33:32.000Z
        lastUpdated: 2022-05-19T15:33:32.000Z
        system: false
        locations:
        - country: AF
          region: AF-BGL
        proxyType: ANY
        asns:
        - "23457"
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzoy0ox5xADOZtKrh0g6"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzoy0ox5xADOZtKrh0g6/lifecycle/deactivate"
            hints:
              allow:
              - POST
    RetrieveNetworkZoneIP:
      summary: IP Network Zone
      value:
        type: IP
        id: nzowc1U5Jh5xuAK0o0g3
        name: MyIpZone
        status: ACTIVE
        usage: POLICY
        created: 2021-06-24T20:37:32.000Z
        lastUpdated: 2021-06-24T20:37:32.000Z
        system: false
        gateways:
        - type: CIDR
          value: 1.2.3.4/24
        proxies:
        - type: RANGE
          value: 3.3.4.5-3.3.4.15
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/zones/nzowc1U5Jh5xuAK0o0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
    RetrievePublicKeyResponse:
      summary: Retrieve Public Key response example
      value:
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: null
          e: AQAB
          "n": 2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    RetrieveRefreshTokenClientResponse:
      summary: Retrieve a refresh token for a Client
      value:
      - id: "{refreshTokenId}"
        status: ACTIVE
        created: 2023-09-21T19:59:56.000Z
        lastUpdated: 2023-09-21T20:00:38.000Z
        expiresAt: 2023-09-28T20:00:38.000Z
        issuer: "https://{yourOktaDomain}/oauth2/{authorizationServerId}"
        client_id: "{clientId}"
        userId: "{userId}"
        scopes:
        - offline_access
        - openid
        _embedded:
          scopes:
          - id: "{scopeID}"
            name: offline_access
            displayName: Keep you signed in to the app
            description: "This keeps you signed in to the app, even when you aren't\
              \ using it."
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes/{scopeId}"
                title: Keep you signed in to the app
          - id: "{scopeId}"
            name: openid
            displayName: openid
            description: Signals that a request is an OpenID request
            _links:
              scope:
                href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/scopes/{scopeId}"
                title: openid
        _links:
          app:
            href: "https://{yourOktaDomain}/api/v1/apps/{appId}"
            title: My Web App
          authorizationServer:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}"
            title: Authorization Server name
          self:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/clients/{clientId}/tokens/{tokenId}"
          revoke:
            href: "https://{yourOktaDomain}/api/v1/authorizationServers/{authorizationServerId}/clients/{clientId}/tokens/{tokenId}"
            hints:
              allow:
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/{clientId}"
            title: My Web App
          user:
            href: "https://{yourOktaDomain}/api/v1/users/{userId}"
            title: Joe User
    RetrieveSessionResponse:
      summary: Retrieve Session information for a single session ID
      value:
        amr:
        - pwd
        createdAt: 2019-08-24T14:15:22Z
        expiresAt: 2019-08-24T14:15:22Z
        id: l7FbDVqS8zHSy65uJD85
        idp:
          id: 01a2bcdef3GHIJKLMNOP
          type: ACTIVE_DIRECTORY
        lastFactorVerification: 2019-08-24T14:15:22Z
        lastPasswordVerification: 2019-08-24T14:15:22Z
        login: user@example.com
        status: ACTIVE
        userId: 00u0abcdefGHIJKLMNOP
        _links:
          self:
            hints:
              allow:
              - DELETE
          href: "https://{yourOktaDomain}/api/v1/sessions/l7FbDVqS8zHSy65uJD85"
    RetrieveUISchemaResponse:
      summary: Retrieves a UI Schema response
      value:
        id: uis4a7liocgcRgcxZ0g7
        uiSchema:
          type: Group
          label: Sign in
          buttonLabel: Submit
          elements:
          - type: Control
            scope: '#/properties/firstName'
            label: First name
            options:
              format: text
          - type: Control
            scope: '#/properties/lastName'
            label: Last name
            options:
              format: text
          - type: Control
            scope: '#/properties/email'
            label: Email
            options:
              format: text
          - type: Control
            scope: '#/properties/countryCode'
            label: Country code
            options:
              format: select
          - type: Control
            scope: '#/properties/bool2'
            label: bool2
            options:
              format: checkbox
          - type: Control
            scope: '#/properties/date'
            label: date
          - type: Control
            scope: '#/properties/enum'
            label: enum
            options:
              format: radio
        created: 2022-07-25T12:56:31.000Z
        lastUpdated: 2022-07-26T11:53:59.000Z
        _links:
          self:
            href: https://exmaple.com/api/v1/meta/uischemas/uis4a7liocgcRgcxZ0g7
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    RiskEventsRequestExample:
      summary: Risk Events payload example
      value:
      - timestamp: 2021-01-20T00:00:00.001Z
        subjects:
        - ip: 6.7.6.7
          riskLevel: MEDIUM
        - ip: 1.1.1.1
          riskLevel: HIGH
          message: Detected Attack tooling and suspicious activity
      - timestamp: 2021-01-20T01:00:00.001Z
        subjects:
        - ip: 6.7.6.7
          riskLevel: LOW
        - ip: 2.2.2.2
          riskLevel: HIGH
    RiskProviderPutRequest:
      summary: Replace Risk Provider request example
      value:
        name: Risk-Partner-Y
        action: enforce_and_log
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderPutResponse:
      summary: Replace Risk Provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: enforce_and_log
        name: Risk-Partner-Y
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: 2021-01-05 22:18:30
        lastUpdated: 2021-01-05 23:18:30
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn"
            hints:
              allow:
              - GET
              - PUT
    RiskProviderRequest:
      summary: Risk Provider payload example
      value:
        name: Risk-Partner-X
        action: log_only
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderResponse:
      summary: Risk Provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: log_only
        name: Risk-Partner-X
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: 2021-01-05 22:18:30
        lastUpdated: 2021-01-05 22:18:30
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn"
            hints:
              allow:
              - GET
              - PUT
    RoleAssignedUsersResponseExample:
      value:
        value:
        - id: 00u118oQYT4TBGuay0g4
          orn: orn:okta:00o5rb5mt2H3d1TJd0h7:users:00u118oQYT4TBGuay0g4
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
            roles:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4/roles
        _links:
          next:
            href: http://your-subdomain.okta.com/api/v1/iam/assignees/users?after=00u118oQYT4TBGuay0g4&limit=1
    RoleRequest:
      value:
        label: UserCreator
        description: Create users
        permissions:
        - okta.users.create
        - okta.users.read
        - okta.groups.read
        - okta.users.userprofile.manage
    RoleResponse:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        label: UserCreator
        description: Create users
        created: 2021-02-06T16:20:57.000Z
        lastUpdated: 2021-02-06T16:20:57.000Z
        _links:
          permissions:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions"
          self:
            href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
    RolesResponse:
      value:
        roles:
        - id: cr0Yq6IJxGIr0ouum0g3
          label: UserCreator
          description: Create users
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            permissions:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3"
        - id: cr0Fw7HKcWIroo88m3r1
          label: GroupMembershipManager
          description: Manage group membership
          created: 2021-02-06T16:20:57.000Z
          lastUpdated: 2021-02-06T16:20:57.000Z
          _links:
            permissions:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1/permissions"
            self:
              href: "https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1"
        _links:
          next:
            href: "https://{yourOktaDomain}/api/v1/iam/roles?after=cr0Fw7HKcWIroo88m3r1"
    SMSTemplateEditablePropertyValues:
      value:
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
    SMSTemplateListResponse:
      value:
      - id: 6NQUJ5yR3bpgEiYmq8IC
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
    SMSTemplateResponseValues:
      value:
        id: 6NQUJ5yR3bpgEiYmq8IC
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
    SecurityEventsProviderRequestIssuerAndJwksUrl:
      summary: Provider with issuer and JWKS
      value:
        name: Security Events Provider with an issuer and a JWKS URL
        type: okta
        settings:
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
    SecurityEventsProviderRequestWellKnownUrl:
      summary: Provider with well-known URL
      value:
        name: Security Events Provider with well-known URL
        type: okta
        settings:
          well_known_url: https://example.okta.com/.well-known/ssf-configuration
    SecurityEventsProviderResponseIssuerAndJwksUrl:
      summary: Provider with issuer and JWKS
      value:
        id: sse1qu4fUtsoD12iF0g5
        name: Security Events Provider with an issuer and a JWKS URL
        type: okta
        status: ACTIVE
        settings:
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
        _links:
          self:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qu4fUtsoD12iF0g5
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qu4fUtsoD12iF0g5/lifecycle/deactivate
            hints:
              allow:
              - POST
    SecurityEventsProviderResponseWellKnownUrl:
      summary: Provider with well-known URL
      value:
        id: sse1qg25RpusjUP6m0g5
        name: Security Events Provider with well-known URL
        type: okta
        status: ACTIVE
        settings:
          well_known_url: https://example.okta.com/.well-known/ssf-configuration
          issuer: Issuer
          jwks_url: https://example.okta.com/jwks/path
        _links:
          self:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: https://example.okta.com/api/v1/security-events-providers/sse1qg25RpusjUP6m0g5/lifecycle/deactivate
            hints:
              allow:
              - POST
    SimulatePolicyBody:
      description: Simulate policy request body
      summary: Simulate policy request body
      value:
        policyType:
        - OKTA_SIGN_ON
        - MFA_ENROLL
        appInstance: 0oa4eroj3nYCIJIW70g7
        policyContext:
          groups:
            ids:
            - 00g4eralvekR5RLuS0g7
            - 00g4eralvekR5RLuS0g8
        risk:
          level: LOW
        zones:
          ids:
          - nzo4eralxcRnbIHYJ0g7
        device:
          platform: IOS
          registered: true
          managed: true
    SimulatePolicyResponse:
      description: Simulate policy response body
      summary: Simulate policy response body
      value:
        evaluation:
        - status: null
          policyType: OKTA_SIGN_ON
          result:
            policies:
            - id: 00p4eromwukk6qUku0g7
              name: test policy
              status: MATCH
              conditions: []
              rules:
              - id: 0pr4erof85nGcyC7Y0g7
                name: test rule
                status: MATCH
                conditions:
                - type: people.groups.include
                  status: MATCH
          undefined:
            policies: []
          evaluated:
            policies: []
        - status: null
          policyType: MFA_ENROLL
          result:
            policies:
            - id: 00p4eram2kw1aLcrx0g7
              name: Default Policy
              status: MATCH
              conditions: []
              rules:
              - id: 0pr4eram2lMQT5FZF0g7
                name: null
                status: MATCH
                conditions: []
          undefined:
            policies: []
          evaluated:
            policies: []
        - status: null
          policyType: ACCESS_POLICY
          result:
            policies:
            - id: rst4eram06ZKZewEe0g7
              name: Any two factors
              status: MATCH
              conditions: []
              rules:
              - id: rul4eram07VsWgybo0g7
                name: Catch-all rule
                status: MATCH
                conditions: []
          undefined:
            policies: []
          evaluated:
            policies: []
        - status: null
          policyType: PROFILE_ENROLLMENT
          result:
            policies:
            - id: rst4eram08ZSjPTOl0g7
              name: Default Policy
              status: MATCH
              conditions: []
              rules:
              - id: rul4eram094PrQ2BX0g7
                name: Catch-all rule
                status: MATCH
                conditions: []
          undefined:
            policies: []
          evaluated:
            policies: []
    StandardRoleAssignmentRequest:
      value:
        type: "HELP_DESK_ADMIN,"
    StandardRoleAssignmentResponse:
      value:
        id: JBCUYUC7IRCVGS27IFCE2SKO
        label: Help Desk Administrator
        type: HELP_DESK_ADMIN
        status: ACTIVE
        created: 2023-05-01T14:24:54.000Z
        lastUpdated: 2023-05-01T14:24:54.000Z
        assignmentType: CLIENT
        _links:
          assignee:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0jrabyQWm4B9zVJPbotY/roles"
    SubmissionOidcRequest:
      summary: Submission OIDC request example
      value:
        name: Strawberry Central
        description: Your one source for in-season strawberry deals
        logo: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
        sso:
          oidc:
            redirectUris:
            - "https://${org.subdomain}.example.com/strawberry/oidc/login"
            initiateLoginUri: "https://${org.subdomain}.example.com/strawberry/oidc/sp-init"
            postLogoutUris:
            - "https://${org.subdomain}.example.com/strawberry/oidc/logged-out"
            doc: https://example.com/strawberry/help/oidcSetup
        config:
        - name: subdomain
          label: Subdomain
    SubmissionOidcResponse:
      summary: Submission OIDC response example
      value:
        id: acme_strawberrycentral_1
        name: Strawberry Central
        description: Your one source for in-season strawberry deals
        logo: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
        sso:
          oidc:
            redirectUris:
            - "https://${org.subdomain}.example.com/strawberry/oidc/login"
            initiateLoginUri: "https://${org.subdomain}.example.com/strawberry/oidc/sp-init"
            postLogoutUris:
            - "https://${org.subdomain}.example.com/strawberry/oidc/logged-out"
            doc: https://example.com/strawberry/help/oidcSetup
        config:
        - name: subdomain
          label: Subdomain
        status: New
        lastUpdated: 2023-08-24T14:15:22.000Z
        lastUpdatedBy: 00ub0oNGTSWTBKOLGLNR
        lastPublished: 2023-09-01T13:23:45.000Z
    SubmissionSamlRequest:
      summary: Submission SAML request example
      value:
        name: Strawberry Central
        description: Your one source for in-season strawberry deals
        logo: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
        sso:
          saml:
            acs:
            - url: "https://${org.subdomain}.example.com/saml/login"
            entityId: "https://${org.subdomain}.example.com"
            doc: https://example.com/strawberry/help/samlSetup
        config:
        - name: subdomain
          label: Subdomain
    SubmissionSamlResponse:
      summary: Submission SAML response example
      value:
        id: acme_strawberrycentral_1
        name: Strawberry Central
        description: Your one source for in-season strawberry deals
        logo: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
        sso:
          saml:
            acs:
            - url: "https://${org.subdomain}.example.com/saml/login"
            entityId: "https://${org.subdomain}.example.com"
            doc: https://example.com/strawberry/help/samlSetup
        config:
        - name: subdomain
          label: Subdomain
        status: To be reviewed by Okta
        lastUpdated: 2023-08-24T14:15:22.000Z
        lastUpdatedBy: 00ub0oNGTSWTBKOLGLNR
        lastPublished: null
    SubmissionsResponse:
      summary: Submission list example
      value:
      - id: acme_strawberrycentral_1
        name: Strawberry Central
        description: Your one source for in-season strawberry deals
        logo: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
        sso:
          saml:
            acs:
            - url: "https://${org.subdomain}.example.com/saml/login"
            entityId: "https://${org.subdomain}.example.com"
            doc: https://example.com/strawberry/help/samlSetup
        config:
        - name: subdomain
          label: Subdomain
        status: Complete
        lastUpdated: 2023-08-24T14:15:22.000Z
        lastUpdatedBy: 00ub0oNGTSWTBKOLGLNR
        lastPublished: 2023-09-01T13:23:45.000Z
    TelephonyFailureResponse:
      summary: A sample response for external webservice returning failure
      value:
        error:
        - errorSummary: Failed to deliver SMS OTP to test.user@okta.com
        - errorCauses:
            errorSummary: Provider could not deliver OTP
            reason: The content of the message is not supported
            location: South Africa
    TelephonyPayloadExample:
      summary: An example Telephony inline hook request body
      value:
        eventId: uS5871kJThSsU8qlA1LTcg
        eventTime: 2020-01-17T21:23:56.000Z
        eventType: com.okta.telephony.provider
        eventTypeVersion: "1.0"
        contentType: application/json
        cloudEventVersion: "0.1"
        source: "https://${yourOktaDomain}/api/v1/inlineHooks/cbl2ad6phv9fsPLcF0g7"
        data:
          context:
            request:
              id: reqRgSk8IBBRhuo0YdlEDTmUw
              method: POST
              url:
                value: /api/internal/v1/inlineHooks/com.okta.telephony.provider/generatePreview
              ipAddress: 127.0.0.1
          userProfile:
            firstName: test
            lastName: user
            login: test.user@okta.com
            userId: 00uyxxSknGtK8022w0g3
          messageProfile:
            msgTemplate: (HOOK)Your code is 11111
            phoneNumber: 9876543210
            otpExpires: 2022-01-28T21:48:34.321Z
            deliveryChannel: SMS
            otpCode: 11111
            locale: EN-US
    TelephonySuccessResponse:
      summary: A sample response for external webservice returning success
      value:
        commands:
        - type: com.okta.telephony.action
        - value:
            status: FAILURE
            provider: VONAGE
            transactionId: SM49a8ece2822d44e4adaccd7ed268f954
            transactionMetadata: Duration=300ms
    TestInfoOidcRequest:
      summary: OIDC SSO Submission Testing Information request
      value:
        testAccount:
          url: https://example.com/strawberry/login
          username: test@example.com
          password: sUperP@ssw0rd
          instructions: Go to your app URL from a browser and enter your credentials
        escalationSupportContact: strawberry.support@example.com
        oidcTestConfiguration:
          jit: false
          spInitiateUrl: https://test.example.com/strawberry/oidc/sp-init
    TestInfoOidcResponse:
      summary: OIDC SSO Submission Testing Information response
      value:
        testAccount:
          url: https://example.com/strawberry/login
          username: test@example.com
          password: sUperP@ssw0rd
          instructions: Go to your app URL from a browser and enter your credentials
        escalationSupportContact: strawberry.support@example.com
        oidcTestConfiguration:
          idp: true
          sp: true
          jit: false
          spInitiateUrl: https://test.example.com/strawberry/oidc/sp-init
    TestInfoSamlRequest:
      summary: SAML SSO Submission Testing Information request
      value:
        testAccount:
          url: https://example.com/strawberry/login
          username: test@example.com
          password: sUperP@ssw0rd
          instructions: Go to your app URL from a browser and enter your credentials
        escalationSupportContact: strawberry.support@example.com
        samlTestConfiguration:
          idp: true
          sp: true
          jit: false
          spInitiateUrl: https://test.example.com/strawberry/saml/sp-init
          spInitiateDescription: Go to the app URL from a browser and enter your username
    TestInfoSamlResponse:
      summary: SAML SSO Submission Testing Information response
      value:
        testAccount:
          url: https://example.com/strawberry/login
          username: test@example.com
          password: sUperP@ssw0rd
          instructions: Go to your app URL from a browser and enter your credentials
        escalationSupportContact: strawberry.support@example.com
        samlTestConfiguration:
          idp: true
          sp: true
          jit: false
          spInitiateUrl: https://test.example.com/strawberry/saml/sp-init
          spInitiateDescription: Go to the app URL from a browser and enter your username
    ThreatInsightResponseExample:
      summary: ThreatInsight response
      value:
        action: none
        excludeZones: []
        created: 2020-08-05T22:18:30.629Z
        lastUpdated: 2020-08-05T22:18:30.629Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/threats/configuration"
            hints:
              allow:
              - GET
              - POST
    ThreatInsightUpdateRequestExample:
      summary: ThreatInsight update request
      value:
        action: audit
        excludeZones:
        - nzo1q7jEOsoCnoKcj0g4
        - nzouagptWUz5DlLfM0g3
    ThreatInsightUpdateResponseExample:
      summary: ThreatInsight update response
      value:
        action: audit
        excludeZones:
        - nzo1q7jEOsoCnoKcj0g4
        - nzouagptWUz5DlLfM0g3
        created: 2020-08-05T22:18:30.629Z
        lastUpdated: 2020-10-13T21:23:10.178Z
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/threats/configuration"
            hints:
              allow:
              - GET
              - POST
    TriggerSessionResponse:
      value:
      - id: uij4ri8ZLk0ywyqxB0g4
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: TRIGGERED
        importType: INCREMENTAL
        created: 2022-04-04T15:56:05.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
    TrustedOriginBody:
      summary: Trusted origin request body
      value:
        name: New Trusted Origin
        origin: http://example.com
        scopes:
        - type: CORS
        - type: REDIRECT
    TrustedOriginBodyWithIframeEmbedding:
      description: "Creates a new Trusted Origin for iFrame embedding of an Okta resource\
        \ within that origin. In this example, the type \nof Okta resource is both\
        \ the Okta End-User Dashboard and the Okta sign-in page.\n"
      summary: Trusted origin request body with iFrame embedding (Okta End-User Dashboard
        and Okta sign-in page)
      value:
        name: New Trusted Origin
        origin: http://example.com
        scopes:
        - type: IFRAME_EMBED
          allowedOktaApps:
          - OKTA_ENDUSER
    TrustedOriginBodyWithIframeEmbeddingSignIn:
      description: "Creates a new Trusted Origin for iFrame embedding of an Okta resource\
        \ within that origin. In this example, the Okta \nresource is the Okta sign-in\
        \ page.\n"
      summary: Trusted origin request body with iFrame embedding (Okta sign-in page)
      value:
        name: New Trusted Origin
        origin: http://example.com
        scopes:
        - type: IFRAME_EMBED
          allowedOktaApps: []
    TrustedOriginInactiveResponse:
      summary: Trusted origin response
      value:
        id: tos10hu7rkbtrFt1M0g4
        name: New Trusted Origin
        origin: http://example.com
        status: INACTIVE
        scopes:
        - type: CORS
        - type: REDIRECT
        created: 2018-01-13T01:11:44.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastedUpdated: 2018-01-13T01:11:44.000Z
        lastedUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          activate:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/activate"
            hints:
              allow:
              - POST
          self:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    TrustedOriginPut:
      value:
        id: tosue7JvguwJ7U6kz0g3
        name: Updated Example Trusted Origin
        origin: http://updated.example.com
        scopes:
        - type: CORS
        - type: REDIRECT
        status: ACTIVE
        created: 2017-12-16T05:01:12.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastUpdated: 2017-12-16T05:01:12.000Z
        lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
    TrustedOriginPutBody:
      summary: Trusted origin request body
      value:
        value:
          id: tosue7JvguwJ7U6kz0g3
          name: Updated Example Trusted Origin
          origin: http://updated.example.com
          scopes:
          - type: CORS
          - type: REDIRECT
          status: ACTIVE
          created: 2017-12-16T05:01:12.000Z
          createdBy: 00ut5t92p6IEOi4bu0g3
          lastUpdated: 2017-12-16T05:01:12.000Z
          lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
          _links:
            self:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
              hints:
                allow:
                - GET
                - PUT
                - DELETE
            deactivate:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
              hints:
                allow:
                - POST
    TrustedOriginPutBodyWithIframeEmbedding:
      summary: Trusted origin request body with iFrame embedding
      value:
        value:
          id: tosue7JvguwJ7U6kz0g3
          name: Updated Example Trusted Origin
          origin: http://updated.example.com
          scopes:
          - type: IFRAME_EMBED
            allowedOktaApps:
            - OKTA_ENDUSER
          status: ACTIVE
          created: 2017-12-16T05:01:12.000Z
          createdBy: 00ut5t92p6IEOi4bu0g3
          lastUpdated: 2017-12-16T05:01:12.000Z
          lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
          _links:
            self:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
              hints:
                allow:
                - GET
                - PUT
                - DELETE
            deactivate:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
              hints:
                allow:
                - POST
    TrustedOriginPutResponse:
      summary: Trusted origin response body
      value:
        value:
          id: tosue7JvguwJ7U6kz0g3
          name: Updated Example Trusted Origin
          origin: http://updated.example.com
          scopes:
          - type: CORS
          - type: REDIRECT
          status: ACTIVE
          created: 2017-12-16T05:01:12.000Z
          createdBy: 00ut5t92p6IEOi4bu0g3
          lastUpdated: 2017-12-16T05:01:12.000Z
          lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
          _links:
            self:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
              hints:
                allow:
                - GET
                - PUT
                - DELETE
            deactivate:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
              hints:
                allow:
                - POST
    TrustedOriginPutResponseWithIframeEmbedding:
      summary: Trusted origin response body with iFrame embedding
      value:
        value:
          id: tosue7JvguwJ7U6kz0g3
          name: Updated Example Trusted Origin
          origin: http://updated.example.com
          scopes:
          - type: IFRAME_EMBED
            allowedOktaApps:
            - OKTA_ENDUSER
          status: ACTIVE
          created: 2017-12-16T05:01:12.000Z
          createdBy: 00ut5t92p6IEOi4bu0g3
          lastUpdated: 2017-12-16T05:01:12.000Z
          lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
          _links:
            self:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
              hints:
                allow:
                - GET
                - PUT
                - DELETE
            deactivate:
              href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
              hints:
                allow:
                - POST
    TrustedOriginPutWithIframeEmbedding:
      value:
        id: tosue7JvguwJ7U6kz0g3
        name: Updated Example Trusted Origin
        origin: http://updated.example.com
        scopes:
        - type: IFRAME_EMBED
          allowedOktaApps:
          - OKTA_ENDUSER
        status: ACTIVE
        created: 2017-12-16T05:01:12.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastUpdated: 2017-12-16T05:01:12.000Z
        lastUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://${yourOktaDomain}/api/v1/trustedOrigins/tosue7JvguwJ7U6kz0g3/lifecycle/deactivate"
            hints:
              allow:
              - POST
    TrustedOriginResponse:
      summary: Trusted origin response
      value:
        id: tos10hu7rkbtrFt1M0g4
        name: New Trusted Origin
        origin: http://example.com
        status: ACTIVE
        scopes:
        - type: CORS
        - type: REDIRECT
        created: 2018-01-13T01:11:44.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastedUpdated: 2018-01-13T01:11:44.000Z
        lastedUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    TrustedOriginResponseWithIframeEmbedding:
      summary: Trusted origin response with iFrame embedding (End-User Dashboard and
        Okta sign-in page)
      value:
        id: tos10hu7rkbtrFt1M0g4
        name: New Trusted Origin
        origin: http://example.com
        status: ACTIVE
        scopes:
        - type: IFRAME_EMBED
          allowedOktaApps:
          - OKTA_ENDUSER
        created: 2018-01-13T01:11:44.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastedUpdated: 2018-01-13T01:11:44.000Z
        lastedUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    TrustedOriginResponseWithIframeEmbeddingSignIn:
      summary: Trusted origin response with iFrame embedding (Okta sign-in page)
      value:
        id: tos10hu7rkbtrFt1M0g4
        name: New Trusted Origin
        origin: http://example.com
        status: ACTIVE
        scopes:
        - type: IFRAME_EMBED
          allowedOktaApps: []
        created: 2018-01-13T01:11:44.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastedUpdated: 2018-01-13T01:11:44.000Z
        lastedUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    TrustedOriginsResponse:
      summary: Trusted origins response
      value:
      - id: tos10hu7rkbtrFt1M0g4
        name: New Trusted Origin
        origin: http://example.com
        status: ACTIVE
        scopes:
        - type: CORS
        - type: REDIRECT
        created: 2018-01-13T01:11:44.000Z
        createdBy: 00ut5t92p6IEOi4bu0g3
        lastedUpdated: 2018-01-13T01:11:44.000Z
        lastedUpdatedBy: 00ut5t92p6IEOi4bu0g3
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://{yourOktaDomain}/api/v1/trustedOrigins/tos10hu7rkbtrFt1M0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    UpdateAppFeatureRequestEx:
      summary: Update USER_PROVISIONING request
      value:
        create:
          lifecycleCreate:
            status: ENABLED
        update:
          lifecycleDeactivate:
            status: ENABLED
          profile:
            status: ENABLED
          password:
            status: ENABLED
            seed: RANDOM
            change: CHANGE
    UpdateAppFeatureResponseEx:
      summary: Update USER_PROVISIONING response
      value:
        name: USER_PROVISIONING
        status: ENABLED
        description: User provisioning settings from Okta to a downstream application
        capabilities:
          create:
            lifecycleCreate:
              status: ENABLED
          update:
            lifecycleDeactivate:
              status: ENABLED
            profile:
              status: ENABLED
            password:
              status: ENABLED
              seed: RANDOM
              change: CHANGE
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/features/USER_PROVISIONING"
            hints:
              allow:
              - GET
              - PUT
    UpdateBrandRequest:
      value:
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        agreeToCustomPrivacyPolicy: true
        removePoweredByOkta: true
        name: New Name For Brand
        emailDomainId: OeD114iNkrcN6aR680g4
        locale: en
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
    UpdateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        removePoweredByOkta: true
        agreeToCustomPrivacyPolicy: true
        name: New Name For Brand
        isDefault: true
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        locale: en
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          themes:
            href: "https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes"
            hints:
              allow:
              - GET
          emailDomain:
            href: "https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4"
            hints:
              allow:
              - GET
              - PUT
    UpdateEmailDomainRequest:
      value:
        displayName: IT Admin
        userName: noreply
    UpdateFeatureLifecycleResponse:
      summary: Update the feature lifecycle status
      value:
        description: Example feature description
        id: ftrZooGoT8b41iWRiQs7
        name: Example feature name
        stage:
          state: OPEN
          value: BETA
        status: DISABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
              - POST
            href: "https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7"
          dependents:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents"
          dependencies:
            href: "https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies"
    UpdateInboundProvisioningFeatureRequestEx:
      summary: Update INBOUND_PROVISIONING request
      value:
        capabilities:
          importSettings:
            username:
              userNameFormat: EMAIL
            schedule:
              status: ENABLED
              fullImport:
                expression: 0 0 * * 0
                timezone: America/New_York
              incrementalImport:
                expression: 0 */3 * * *
                timezone: America/New_York
          importRules:
            userCreateAndMatch:
              exactMatchCriteria: EMAIL
              allowPartialMatch: false
              autoConfirmPartialMatch: false
              autoConfirmExactMatch: false
              autoConfirmNewUsers: false
              autoActivateNewUsers: false
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    UpdateInboundProvisioningFeatureResponseEx:
      summary: Update INBOUND_PROVISIONING response
      value:
        name: INBOUND_PROVISIONING
        status: ENABLED
        description: In-bound provisioning settings from an application to Okta
        capabilities:
          importSettings:
            username:
              userNameFormat: EMAIL
            schedule:
              status: ENABLED
              fullImport:
                expression: 0 0 * * 0
                timezone: America/New_York
              incrementalImport:
                expression: 0 */3 * * *
                timezone: America/New_York
          importRules:
            userCreateAndMatch:
              exactMatchCriteria: EMAIL
              allowPartialMatch: false
              autoConfirmPartialMatch: false
              autoConfirmExactMatch: false
              autoConfirmNewUsers: false
              autoActivateNewUsers: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/apps/${appId}/features/INBOUND_PROVISIONING"
            hints:
              allow:
              - GET
              - PUT
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    UpdateMappingBody:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        properties:
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH
    UpdateMappingResponse:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3"
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: "https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4"
            schema:
              href: "https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default"
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4"
    UpdateSMSTemplateRequest:
      value:
        translations:
          de: "${org.name}: ihre bestätigungscode ist ${code}."
    UpdateSMSTemplateResponse:
      value:
        id: 6NQUJ5yR3bpgEiYmq8IC
        name: Custom
        type: SMS_VERIFY_CODE
        template: "${org.name}: your verification code is ${code}"
        translations:
          es: "${org.name}: el código de verificación es ${code}"
          fr: "${org.name}: votre code de vérification est ${code}"
          it: "${org.name}: il codice di verifica è ${code}"
          de: "${org.name}: ihre bestätigungscode ist ${code}."
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
    UpdateThemeRequest:
      value:
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    UpdateThemeResponse:
      value:
        id: thdul904tTZ6kWVhP0g3
        logo: "https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png"
        favicon: "https://{yourOktaDomain}/favicon.ico"
        backgroundImage: null
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    UpdateUserTypePostRequest:
      summary: Update user type request
      value:
        displayName: Updated Display Name
    UpdateUserTypePostResponse:
      summary: Update user type response
      value:
        id: otyfnly5cQjJT9PnR0g4
        displayName: Updated Display Name
        name: newUserType
        description: A new custom user type
        createdBy: sprz9fj1ycBcsgopy1d6
        lastUpdatedBy: sprz9fj1ycBcsgopy1d6
        created: 2021-07-05T20:40:38.000Z
        lastUpdated: 2021-07-05T20:40:38.000Z
        default: false
        _links:
          self:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
          schema:
            href: "https://{yourOktaDomain}/api/v1/meta/schemas/user/oscz9fj2jMiRBC1ZT1d6"
    UpdatedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
        - recordType: TXT
          fqdn: _oktaverification.example.com
          verificationValue: 759080212bda43e3bc825a7d73b4bb64
        - recordType: CNAME
          fqdn: mail.example.com
          verificationValue: u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t02._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t022._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    UserSchemaAddRequest:
      value:
        definitions:
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: Twitter Username
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                - principal: SELF
                  action: READ_WRITE
            required: []
    UserSchemaResponse:
      value:
        id: "https://{yourOktaDomain}/meta/schemas/user/default"
        $schema: http://json-schema.org/draft-04/schema#
        name: user
        title: Default Okta User
        lastUpdated: 2015-09-05T10:40:45.000Z
        created: 2015-02-02T10:27:36.000Z
        definitions:
          base:
            id: '#base'
            type: object
            properties:
              login:
                title: Username
                type: string
                required: true
                minLength: 5
                maxLength: 100
                permissions:
                - principal: SELF
                  action: READ_WRITE
              firstName:
                title: First name
                type: string
                required: true
                minLength: 1
                maxLength: 50
                permissions:
                - principal: SELF
                  action: READ_WRITE
              lastName:
                title: Last name
                type: string
                required: true
                minLength: 1
                maxLength: 50
                permissions:
                - principal: SELF
                  action: READ_WRITE
              email:
                title: Primary email
                type: string
                required: true
                format: email
                permissions:
                - principal: SELF
                  action: READ_WRITE
            required:
            - login
            - firstName
            - lastName
            - email
          custom:
            id: '#custom'
            type: object
            properties:
              twitterUserName:
                title: Twitter username
                description: User's username for twitter.com
                type: string
                required: false
                minLength: 1
                maxLength: 20
                permissions:
                - principal: SELF
                  action: READ_WRITE
            required: []
        type: object
        properties:
          profile:
            allOf:
            - $ref: '#/definitions/base'
            - $ref: '#/definitions/custom'
    VerifiedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: VERIFIED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
        - recordType: TXT
          fqdn: _oktaverification.example.com
          verificationValue: 759080212bda43e3bc825a7d73b4bb64
        - recordType: CNAME
          fqdn: mail.example.com
          verificationValue: u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t02._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
        - recordType: CNAME
          fqdn: t022._domainkey.example.com
          verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    WellKnownAppAuthenticatorConfigurationCustomApp:
      value:
      - authenticatorId: aut22f6xzargnJZYE3l7
        orgId: 00o1vhf34q20MfCFC3l7
        type: app
        key: custom_app
        name: EnergyAus Authenticator
        createdDate: 2022-10-11T08:56:45.000Z
        lastUpdated: 2023-09-07T11:31:35.000Z
        settings:
          userVerification: PREFERRED
        supportedMethods:
        - type: push
          status: ACTIVE
          settings:
            algorithms:
            - RS256
            - ES256
            keyProtection: ANY
        appAuthenticatorEnrollEndpoint: "https://{yourOktaDomain}/idp/myaccount/app-authenticators"
    WellKnownOrgMetadataResponseClassic:
      value:
        id: 00o5rb5mt2H3d1TJd0h7
        _links:
          organization:
            href: "https://{{yourOktaDomain}}"
        pipeline: v1
        settings:
          analyticsCollectionEnabled: false
          bugReportingEnabled: true
          omEnabled: true
    WellKnownOrgMetadataResponseCustomUrlOie:
      value:
        id: 00o47wwoytgsDqEtz0g7
        _links:
          organization:
            href: "https://{{yourSubdomain}}.okta.com"
          alternate:
            href: "https://{{yourCustomDomain}}"
        pipeline: idx
        settings:
          analyticsCollectionEnabled: false
          bugReportingEnabled: true
          omEnabled: false
    activeAPIServiceIntegrationInstanceSecretResponse:
      summary: Activate Secret response example
      value:
        id: ocs2f50kZB0cITmYU0g4
        status: ACTIVE
        client_secret: '***MQGQ'
        secret_hash: 0WOOvBSzV9clc4Nr7Rbaug
        created: 2023-04-06T21:32:33.000Z
        lastUpdated: 2023-04-06T21:32:33.000Z
        _links:
          deactivate:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    create-auth-policy-rule-condition:
      description: Creates an authentication policy rule with a conditions object.
      summary: Authentication policy - Create rule with conditions
      value:
        system: false
        type: ACCESS_POLICY
        name: Rule with conditions
        conditions:
          userType:
            include: []
            exclude:
            - otyezu4m0xN6w5JEa1d7
          network:
            connection: ZONE
            exclude:
            - 00u7yq5goxNFTiMjW1d7
          riskScore:
            level: ANY
          people:
            users:
              exclude:
              - 00u7yq5goxNFTiMjW1d7
              include: []
            groups:
              include:
              - 00g9i12jictsYdZdi1d7
              exclude: []
          platform:
            include:
            - type: MOBILE
              os:
                type: IOS
            - type: MOBILE
              os:
                type: ANDROID
            - type: DESKTOP
              os:
                type: MACOS
          elCondition: null
        actions:
          appSignOn:
            access: ALLOW
            verificationMethod:
              factorMode: 2FA
              reauthenticateIn: PT2H
              constraints:
              - knowledge:
                  reauthenticateIn: PT2H
                  types:
                  - password
              type: ASSURANCE
    create-auth-policy-rule-condition-response:
      description: The response body from the creation of an authentication policy
        rule with conditions.
      summary: Authentication policy - Policy rule with conditions
      value:
        id: rule8jjozjGMGbHyC1d6
        status: ACTIVE
        name: Rule with conditions
        priority: 0
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
        system: false
        conditions:
          people:
            users:
              exclude:
              - 00u7yq5goxNFTiMjW1d7
            groups:
              include:
              - 00g9i12jictsYdZdi1d7
            network:
              connection: ZONE
              exclude:
              - nzo9o4rctwQCJNE6y1d7
            platform:
              platform:
                include:
                - type: MOBILE
                  os:
                    type: IOS
                - type: MOBILE
                  os:
                    type: ANDROID
                - type: DESKTOP
                  os:
                    type: MACOS
                exclude: []
              riskScore:
                level: ANY
              userType:
                include: []
                exclude:
                - otyezu4m0xN6w5JEa1d7
        actions:
          appSignOn:
            access: ALLOW
            verificationMethod:
              factorMode: 2FA
              type: ASSURANCE
              reauthenticateIn: PT2H
              constraints:
                knowledge:
                  required: true
                  types:
                  - password
                  reauthenticateIn: PT2H
        type: ACCESS_POLICY
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/rst7xus97faIAgmti1d7/rules/rul7yut96gmsOzKAA1d6
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: https://sampleorg.okta.com/api/v1/policies/rst7xus97faIAgmti1d7/rules/rul7yut96gmsOzKAA1d6
            hints:
              allow:
              - GET
              - PUT
              - DELETE
    idp-discovery-dynamic-routing-rule:
      description: This routing rule uses a dynamic Identity Provider.
      summary: IdP discovery policy - Dynamic routing rule
      value:
        name: Dynamic routing rule
        priority: 1
        status: ACTIVE
        conditions:
          network:
            connection: ANYWHERE
        actions:
          idp:
            providers: []
            idpSelectionType: DYNAMIC
            matchCriteria:
            - providerExpression: login.identifier.substringAfter('@')
              propertyName: name
        system: false
        type: IDP_DISCOVERY
    idp-discovery-dynamic-routing-rule-response:
      summary: IdP discovery policy - Dynamic routing rule
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: Dynamic routing rule
        priority: 1
        status: ACTIVE
        conditions:
          network:
            connection: ANYWHERE
        actions:
          idp:
            providers: []
            idpSelectionType: DYNAMIC
            matchCriteria:
            - providerExpression: login.identifier.substringAfter('@')
              propertyName: name
        system: false
        type: IDP_DISCOVERY
    idp-discovery-specific-routing-rule:
      description: This routing rule uses a specific Identity Provider.
      summary: IdP discovery policy - Specific routing rule
      value:
        name: Specific routing rule
        priority: 1
        status: ACTIVE
        conditions:
          network:
            connection: ANYWHERE
        actions:
          idp:
            providers:
            - type: GOOGLE
              id: 0oa5ks3WmHLRh8Ivr0g4
            idpSelectionType: SPECIFIC
        system: false
        type: IDP_DISCOVERY
    idp-discovery-specific-routing-rule-response:
      summary: IdP discovery policy - Specific routing rule
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: Specific routing rule
        priority: 1
        status: ACTIVE
        conditions:
          network:
            connection: ANYWHERE
        actions:
          idp:
            providers:
            - type: GOOGLE
              id: 0oa5ks3WmHLRh8Ivr0g4
            idpSelectionType: SPECIFIC
        system: false
        type: IDP_DISCOVERY
    inactiveAPIServiceIntegrationInstanceSecretResponse:
      summary: Deactivate Secret response example
      value:
        id: ocs2f4zrZbs8nUa7p0g4
        status: INACTIVE
        client_secret: '***DhOW'
        secret_hash: yk4SVx4sUWVJVbHt6M-UPA
        created: 2023-02-21T20:08:24.000Z
        lastUpdated: 2023-02-21T20:08:24.000Z
        _links:
          activate:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4/lifecycle/activate"
            hints:
              allow:
              - POST
          delete:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f4zrZbs8nUa7p0g4"
            hints:
              allow:
              - DELETE
    listStreamConfigurationExample:
      summary: List of SSF Stream configurations example
      value:
      - aud: https://example.com
        delivery:
          method: urn:ietf:rfc:8935
          endpoint_url: https://example.com
        events_delivered:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_requested:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_supported:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        format: iss_sub
        iss: "https://{yourOktaDomain}"
        min_verification_interval: 0
        stream_id: esc1k235GIIztAuGK0g5
    newAPIServiceIntegrationInstanceSecretResponse:
      summary: New secret response example
      value:
        id: ocs2f50kZB0cITmYU0g4
        status: ACTIVE
        client_secret: DRUFXGF9XbLnS9k-Sla3x3POBiIxDreBCdZuFs5B
        secret_hash: FpCwXwSjTRQNtEI11I00-g
        created: 2023-04-06T21:32:33.000Z
        lastUpdated: 2023-04-06T21:32:33.000Z
        _links:
          deactivate:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa1nkheCuDn82XVI0g4/credentials/secrets/ocs2f50kZB0cITmYU0g4/lifecycle/deactivate"
            hints:
              allow:
              - POST
    postAPIServiceIntegrationRequest:
      value:
        type: my_app_cie
        grantedScopes:
        - okta.logs.read
        - okta.groups.read
        - okta.users.read
    postAPIServiceIntegrationResponse:
      summary: Post response example
      value:
        id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        name: My App Cloud Identity Engine
        createdAt: 2023-02-21T20:08:24.000Z
        createdBy: 00uu3u0ujW1P6AfZC2d5
        clientSecret: CkF69kXtag0q0P4pXU8OnP5IAzgGlwx6eqGy7Fmg
        configGuideUrl: "https://{docDomain}/my-app-cie/configuration-guide"
        grantedScopes:
        - okta.logs.read
        - okta.groups.read
        - okta.users.read
        _links:
          self:
            href: "https://{yourOktaDomain}/integrations/api/v1/api-services/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
              - DELETE
          client:
            href: "https://{yourOktaDomain}/oauth2/v1/clients/0oa72lrepvp4WqEET1d9"
            hints:
              allow:
              - GET
          logo:
            name: small
            href: "https://{logoDomain}/{logoPath}/my_app_cie_small_logo"
    sspr-enabled-no-step-up:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS or email are initial authenticators with no secondary\
        \ authentication required."
      summary: Password policy - SSPR with no step up
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - sms
                - email
              stepUp:
                required: false
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-no-step-up-response:
      summary: Password policy - SSPR with no step up
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - sms
                - email
              stepUp:
                required: false
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-no-step-up-update:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS or email are initial authenticators with no secondary\
        \ authentication required."
      summary: Password policy - SSPR with no step up
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - sms
                - email
              stepUp:
                required: false
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sq-step-up:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS and Okta Verify push are the initial authenticators,\
        \ and the secondary authentication is a security question."
      summary: Password policy - SSPR with security question as step-up auth
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
                methods:
                - security_question
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sq-step-up-response:
      summary: Password policy - SSPR with security question as step up
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
                methods:
                - security_question
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sq-step-up-update:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS and Okta Verify push are initial authenticators, and\
        \ the secondary authentication is a security question."
      summary: Password policy - SSPR with security question as step up
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
                methods:
                - security_question
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS or email are initial authenticators. The step-up authentication\
        \ required is any active SSO authenticator."
      summary: Password policy - SSPR with any SSO authenticator as step up
      value:
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-response:
      summary: Password policy - SSPR with any SSO authenticator as step up
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-update:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Phone SMS or email are initial authenticators. The step-up authentication\
        \ required is any active SSO authenticator."
      summary: Password policy - SSPR with any SSO authenticator as step up
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-with-constraints:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Okta Verify push, Phone SMS, or Google OTP are initial authenticators.\
        \ The secondary authentication required is any SSO authenticator. The `methodConstraints`\
        \ property limits OTP authenticators to Google."
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator
        constraint
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
                - otp
                methodConstraints:
                - method: otp
                  allowedAuthenticators:
                  - key: google_otp
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-with-constraints-response:
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator
        constraint
      value:
        id: ruleId
        _links:
          self:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          deactivate:
            href: "https://sampleorg.okta.com/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate"
            hints:
              allow:
              - POST
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
                - otp
                methodConstraints:
                - method: otp
                  allowedAuthenticators:
                  - key: google_otp
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    sspr-enabled-sso-step-up-with-constraints-update:
      description: "This password policy permits self-service password change, reset,\
        \ and unlock. Okta Verify push, Phone SMS, or Google OTP are initial authenticators.\
        \ The secondary authentication required is any SSO authenticator. The `methodConstraints`\
        \ property limits OTP authenticators to Google."
      summary: Password policy - Enable SSPR with OTP enabled and Google authenticator
        constraint
      value:
        id: ruleId
        name: SSPR Rule
        priority: 1
        status: ACTIVE
        conditions:
          people:
            users:
              exclude: []
          network:
            connection: ANYWHERE
        actions:
          passwordChange:
            access: ALLOW
          selfServicePasswordReset:
            access: ALLOW
            requirement:
              primary:
                methods:
                - push
                - sms
                - otp
                methodConstraints:
                - method: otp
                  allowedAuthenticators:
                  - key: google_otp
              stepUp:
                required: true
          selfServiceUnlock:
            access: ALLOW
        system: false
        type: PASSWORD
    streamConfigurationExample:
      summary: SSF Stream configuration example
      value:
        aud: https://example.com
        delivery:
          method: urn:ietf:rfc:8935
          endpoint_url: https://example.com
        events_delivered:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_requested:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_supported:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        format: iss_sub
        iss: "https://{yourOktaDomain}"
        min_verification_interval: 0
        stream_id: esc1k235GIIztAuGK0g5
    twofa-enabled-disallow-password-allow-phishing:
      description: This two-factor authentication policy uses a rule to disallow passwords
        and require phishing resistance for possession authenticators for authentication.
      summary: Authentication policy - 2FA with granular authentication
      value:
        name: Passwordless 2FA
        actions:
          appSignOn:
            access: ALLOW
            verificationMethod:
              factorMode: 2FA
              type: ASSURANCE
              reauthenticateIn: PT0S
              constraints:
                knowledge:
                  excludedAuthenticationMethods:
                    key: okta_password
                possession:
                  deviceBound: REQUIRED
                  phishingREsistant: REQUIRED
        type: ACCESS_POLICY
    twofa-enabled-disallow-password-allow-phishing-response:
      description: The rule from a two-factor authentication policy that disallows
        passwords and requires phishing resistance
      summary: Authentication policy - 2FA with granular authentication
      value:
        id: rul7yut96gmsOzKAA1d6
        status: ACTIVE
        name: Passwordless 2FA
        priority: 0
        created: 2023-05-01T21:13:15.000Z
        lastUpdated: 2023-05-01T21:13:15.000Z
        system: false
        conditions: null
        actions:
          appSignOn:
            access: ALLOW
            verificationMethod:
              factorMode: 2FA
              type: ASSURANCE
              reauthenticateIn: PT0S
              constraints:
                knowledge:
                  excludedAuthenticationMethods:
                    key: okta_password
                  required: false
                possession:
                  deviceBound: REQUIRED
                  phishingREsistant: REQUIRED
                  required: true
        type: ACCESS_POLICY
        _links:
          self:
            href: https://sampleorg.okta.com/api/v1/policies/rst7xus97faIAgmti1d7/rules/rul7yut96gmsOzKAA1d6
            hints:
              allow:
              - GET
              - PUT
    update-auth-policy-rule-condition:
      description: Updates the conditions object on the request body of an authentication
        policy rule.
      summary: Authentication policy - Update rule with conditions
      value:
        type: ACCESS_POLICY
        name: Rule with conditions - exclude a group
        description: Updated policy rule
        conditions:
          userType:
            include: []
            exclude:
            - otyezu4m0xN6w5JEa1d7
          network:
            connection: ZONE
            exclude:
            - nzo9o4rctwQCJNE6y1d7
          riskScore:
            level: ANY
          people:
            users:
              exclude:
              - 00u7yq5goxNFTiMjW1d7
              include: []
            groups:
              include: []
              exclude:
              - 00g8vta8qzkxPEfKC1d7
          platform:
            include:
            - type: MOBILE
              os:
                type: IOS
            - type: MOBILE
              os:
                type: ANDROID
            - type: DESKTOP
              os:
                type: MACOS
          elCondition: null
    update-auth-policy-rule-condition-response:
      description: The response body from an updated conditions object of an authentication
        policy rule.
      summary: Authentication policy - Update rule with conditions
      value:
        id: rulezuo73ySrHndLb1d7
        status: ACTIVE
        name: Rule with conditions - exclude a group
        priority: 0
        created: 2024-04-25T17:35:02.000Z
        lastUpdated: 2024-04-25T17:35:02.000Z
        system: false
        conditions:
          people:
            users:
              exclude: []
            groups:
              exclude:
              - 00u7yq5goxNFTiMjW1d7
            network:
              connection: ZONE
              exclude:
              - nzo9o4rctwQCJNE6y1d7
              platform:
                platform:
                  include:
                  - type: MOBILE
                    os:
                      type: IOS
                  - type: MOBILE
                    os:
                      type: ANDROID
                  - type: DESKTOP
                    os:
                      type: MACOS
                  exclude: []
                riskScore:
                  level: ANY
                userType:
                  include: []
                  exclude:
                  - otyezu4m0xN6w5JEa1d7
          actions:
            appSignOn:
              access: ALLOW
              verificationMethod:
                factorMode: 2FA
                type: ASSURANCE
                reauthenticateIn: PT2H
                constraints:
                  knowledge:
                    required: true
                    types:
                    - password
                    reauthenticateIn: PT2H
          type: ACCESS_POLICY
          _links:
            self:
              href: https://sampleorg.okta.com/api/v1/policies/rst7xus97faIAgmti1d7/rules/rul7yut96gmsOzKAA1d6
              hints:
                allow:
                - GET
                - PUT
                - DELETE
            deactivate:
              href: https://sampleorg.okta.com/api/v1/policies/rst7xus97faIAgmti1d7/rules/rul7yut96gmsOzKAA1d6
              hints:
                allow:
                - GET
                - PUT
                - DELETE
    wellKnownSSFMetadataExample:
      summary: Well-Known SSF Metadata example
      value:
        configuration_endpoint: "https://{yourOktaDomain}/api/v1/ssf/stream"
        delivery_methods_supported:
        - https://schemas.openid.net/secevent/risc/delivery-method/push
        - urn:ietf:rfc:8935
        issuer: "https://{yourOktaDomain}"
        jwks_uri: "https://{yourOktaDomain}/oauth2/v1/keys"
  parameters:
    UISchemaId:
      description: The unique ID of the UI Schema
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: uis4a7liocgcRgcxZ0g7
        type: string
      style: simple
    appInstanceId:
      description: ID of the AD AppInstance in Okta
      explode: false
      in: path
      name: appInstanceId
      required: true
      schema:
        type: string
      style: simple
    assignmentId:
      description: '`id` of the Realm Assignment'
      explode: false
      in: path
      name: assignmentId
      required: true
      schema:
        example: rul2jy7jLUlnO3ng00g4
        type: string
      style: simple
    authenticatorEnrollmentId:
      description: ID for a WebAuthn Preregistration Factor in Okta
      explode: false
      in: path
      name: authenticatorEnrollmentId
      required: true
      schema:
        type: string
      style: simple
    pathApiServiceId:
      description: '`id` of the API Service Integration instance'
      example: 000lr2rLjZ6NsGn1P0g3
      explode: false
      in: path
      name: apiServiceId
      required: true
      schema:
        type: string
      style: simple
    pathApiTokenId:
      description: id of the API Token
      explode: false
      in: path
      name: apiTokenId
      required: true
      schema:
        example: 00Tabcdefg1234567890
        type: string
      style: simple
    pathAppId:
      description: Application ID
      explode: false
      in: path
      name: appId
      required: true
      schema:
        example: 0oafxqCAJWWGELFTYASJ
        type: string
      style: simple
    pathAppInstanceId:
      description: '`id` of the application instance'
      explode: false
      in: path
      name: appInstanceId
      required: true
      schema:
        type: string
      style: simple
    pathAppName:
      description: Application name for the app type
      explode: false
      in: path
      name: appName
      required: true
      schema:
        example: oidc_client
        type: string
      style: simple
    pathAppUserId:
      description: ID of an existing Okta user
      explode: false
      in: path
      name: userId
      required: true
      schema:
        example: 00u13okQOVWZJGDOAUVR
        type: string
      style: simple
    pathAssociatedServerId:
      description: '`id` of the associated Authorization Server'
      explode: false
      in: path
      name: associatedServerId
      required: true
      schema:
        example: aus6xt9jKPmCyn6kg0g4
        type: string
      style: simple
    pathAuthServerId:
      description: '`id` of the Authorization Server'
      explode: false
      in: path
      name: authServerId
      required: true
      schema:
        example: GeGRTEr7f3yu2n7grw22
        type: string
      style: simple
    pathAuthenticatorId:
      description: '`id` of the Authenticator'
      explode: false
      in: path
      name: authenticatorId
      required: true
      schema:
        example: aut1nd8PQhGcQtSxB0g4
        type: string
      style: simple
    pathBehaviorId:
      description: id of the Behavior Detection Rule
      explode: false
      in: path
      name: behaviorId
      required: true
      schema:
        example: abcd1234
        type: string
      style: simple
    pathBrandId:
      description: The ID of the brand
      explode: false
      in: path
      name: brandId
      required: true
      schema:
        type: string
      style: simple
    pathBundleId:
      description: The `id` of a bundle
      explode: false
      in: path
      name: bundleId
      required: true
      schema:
        example: 08ab2db568c7c300079fefd0
        type: string
      style: simple
    pathCaptchaId:
      description: The unique key used to identify your CAPTCHA instance
      explode: false
      in: path
      name: captchaId
      required: true
      schema:
        type: string
      style: simple
    pathClaimId:
      description: '`id` of Claim'
      explode: false
      in: path
      name: claimId
      required: true
      schema:
        example: hNJ3Uk76xLagWkGx5W3N
        type: string
      style: simple
    pathClientId:
      description: '`client_id` of the app'
      explode: false
      in: path
      name: clientId
      required: true
      schema:
        example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
        type: string
      style: simple
    pathContactType:
      explode: false
      in: path
      name: contactType
      required: true
      schema:
        type: string
      style: simple
    pathCredentialKeyId:
      description: '`id` of the certificate key'
      explode: false
      in: path
      name: keyId
      required: true
      schema:
        example: P7jXpG-LG2ObNgY9C0Mn2uf4InCQTmRZMDCZoVNxdrk
        type: string
      style: simple
    pathCsrId:
      description: '`id` of the CSR'
      explode: false
      in: path
      name: csrId
      required: true
      schema:
        example: fd7x1h7uTcZFx22rU1f7
        type: string
      style: simple
    pathCustomizationId:
      description: The ID of the email customization
      explode: false
      in: path
      name: customizationId
      required: true
      schema:
        type: string
      style: simple
    pathDeviceAssuranceId:
      description: Id of the Device Assurance Policy
      explode: false
      in: path
      name: deviceAssuranceId
      required: true
      schema:
        type: string
      style: simple
    pathDeviceId:
      description: '`id` of the device'
      explode: false
      in: path
      name: deviceId
      required: true
      schema:
        example: guo4a5u7JHHhjXrMK0g4
        type: string
      style: simple
    pathDomainId:
      description: '`id` of the Domain'
      explode: false
      in: path
      name: domainId
      required: true
      schema:
        example: OmWNeywfTzElSLOBMZsL
        type: string
      style: simple
    pathEmailDomainId:
      explode: false
      in: path
      name: emailDomainId
      required: true
      schema:
        description: The ID of the email domain.
        type: string
      style: simple
    pathEmailServerId:
      explode: false
      in: path
      name: emailServerId
      required: true
      schema:
        description: ID of your SMTP Server configuration
        type: string
      style: simple
    pathEntitlementId:
      description: The `id` of a bundle entitlement
      explode: false
      in: path
      name: entitlementId
      required: true
      schema:
        example: 0obfxqCAJWWGELFTYASJ
        type: string
      style: simple
    pathEventHookId:
      description: '`id` of the Event Hook'
      explode: false
      in: path
      name: eventHookId
      required: true
      schema:
        example: who8vt36qfNpCGz9H1e6
        type: string
      style: simple
    pathFactorId:
      description: ID of an existing user Factor
      explode: false
      in: path
      name: factorId
      required: true
      schema:
        example: zAgrsaBe0wVGRugDYtdv
        type: string
      style: simple
    pathFeatureId:
      description: '`id` of the feature'
      explode: false
      in: path
      name: featureId
      required: true
      schema:
        example: R5HjqNn1pEqWGy48E9jg
        type: string
      style: simple
    pathFeatureName:
      description: Name of the Feature
      explode: false
      in: path
      name: featureName
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationFeatureType'
      style: simple
    pathFirstPartyAppName:
      description: |
        The key name for the Okta app.<br>
        Supported apps:
          * Okta Admin Console (`admin-console`)
      explode: false
      in: path
      name: appName
      required: true
      schema:
        example: admin-console
        type: string
      style: simple
    pathGrantId:
      description: Grant ID
      explode: false
      in: path
      name: grantId
      required: true
      schema:
        example: iJoqkwx50mrgX4T9LcaH
        type: string
      style: simple
    pathGroupId:
      description: The `id` of the group
      explode: false
      in: path
      name: groupId
      required: true
      schema:
        example: 00g1emaKYZTWRYYRRTSK
        type: string
      style: simple
    pathGroupRuleId:
      description: The `id` of the group rule
      explode: false
      in: path
      name: groupRuleId
      required: true
      schema:
        example: 0pr3f7zMZZHPgUoWO0g4
        type: string
      style: simple
    pathHookKeyId:
      description: '`id` of the Hook Key'
      explode: false
      in: path
      name: hookKeyId
      required: true
      schema:
        example: XreKU5laGwBkjOTehusG
        type: string
      style: simple
    pathIdentitySourceId:
      explode: false
      in: path
      name: identitySourceId
      required: true
      schema:
        type: string
      style: simple
    pathIdentitySourceSessionId:
      explode: false
      in: path
      name: sessionId
      required: true
      schema:
        type: string
      style: simple
    pathIdpCsrId:
      description: '`id` of the IdP CSR'
      explode: false
      in: path
      name: idpCsrId
      required: true
      schema:
        example: 1uEhyE65oV3H6KM9gYcN
        type: string
      style: simple
    pathIdpId:
      description: '`id` of IdP'
      explode: false
      in: path
      name: idpId
      required: true
      schema:
        example: SVHoAOh0l8cPQkVX1LRl
        type: string
      style: simple
    pathIdpKeyId:
      description: '`id` of IdP Key'
      explode: false
      in: path
      name: idpKeyId
      required: true
      schema:
        example: KmMo85SSsU7TZzOShcGb
        type: string
      style: simple
    pathInlineHookId:
      description: '`id` of the Inline Hook'
      explode: false
      in: path
      name: inlineHookId
      required: true
      schema:
        example: Y7Rzrd4g4xj6WdKzrBHH
        type: string
      style: simple
    pathKeyId:
      description: ID of the Key Credential for the application
      explode: false
      in: path
      name: keyId
      required: true
      schema:
        example: sjP9eiETijYz110VkhHN
        type: string
      style: simple
    pathLifecycle:
      description: Whether to `ENABLE` or `DISABLE` the feature
      explode: false
      in: path
      name: lifecycle
      required: true
      schema:
        $ref: '#/components/schemas/FeatureLifecycle'
      style: simple
    pathLinkedObjectName:
      description: Primary or Associated name
      explode: false
      in: path
      name: linkedObjectName
      required: true
      schema:
        type: string
      style: simple
    pathLogStreamId:
      description: Unique identifier for the Log Stream
      explode: false
      in: path
      name: logStreamId
      required: true
      schema:
        example: 0oa1orzg0CHSgPcjZ0g4
        type: string
      style: simple
    pathLogStreamType:
      explode: false
      in: path
      name: logStreamType
      required: true
      schema:
        $ref: '#/components/schemas/LogStreamType'
      style: simple
    pathMappingId:
      description: '`id` of the Mapping'
      explode: false
      in: path
      name: mappingId
      required: true
      schema:
        example: cB6u7X8mptebWkffatKA
        type: string
      style: simple
    pathMemberId:
      description: '`id` of a member'
      explode: false
      in: path
      name: memberId
      required: true
      schema:
        example: irb1qe6PGuMc7Oh8N0g4
        type: string
      style: simple
    pathMethodType:
      description: Type of authenticator method
      explode: false
      in: path
      name: methodType
      required: true
      schema:
        $ref: '#/components/schemas/AuthenticatorMethodType'
      style: simple
    pathNotificationType:
      explode: false
      in: path
      name: notificationType
      required: true
      schema:
        $ref: '#/components/schemas/NotificationType'
      style: simple
    pathOAuthProvisioningAppName:
      explode: false
      in: path
      name: appName
      required: true
      schema:
        $ref: '#/components/schemas/OAuthProvisioningEnabledApp'
      style: simple
    pathOperation:
      explode: false
      in: path
      name: operation
      required: true
      schema:
        type: string
      style: simple
    pathOwnerId:
      description: The `id` of the group owner
      explode: false
      in: path
      name: ownerId
      required: true
      schema:
        example: 00u1emaK22TWRYd3TtG
        type: string
      style: simple
    pathPermissionType:
      description: An okta permission type
      explode: false
      in: path
      name: permissionType
      required: true
      schema:
        example: okta.users.manage
        type: string
      style: simple
    pathPolicyId:
      description: '`id` of the Policy'
      explode: false
      in: path
      name: policyId
      required: true
      schema:
        example: 00plrilJ7jZ66Gn0X0g3
        type: string
      style: simple
    pathPolicyMappingId:
      description: '`id` of the policy resource Mapping'
      explode: false
      in: path
      name: mappingId
      required: true
      schema:
        example: maplr2rLjZ6NsGn1P0g3
        type: string
      style: simple
    pathPoolId:
      description: Id of the agent pool for which the settings will apply
      explode: false
      in: path
      name: poolId
      required: true
      schema:
        type: string
      style: simple
    pathPrimaryRelationshipName:
      description: Name of the `primary` relationship being assigned
      explode: false
      in: path
      name: primaryRelationshipName
      required: true
      schema:
        type: string
      style: simple
    pathPrimaryUserId:
      description: User ID to be assigned to the `primary` relationship for the `associated`
        user
      explode: false
      in: path
      name: primaryUserId
      required: true
      schema:
        example: ctxeQ5JnAVdGFBB7Zr7W
        type: string
      style: simple
    pathPrincipalRateLimitId:
      description: id of the Principal Rate Limit
      explode: false
      in: path
      name: principalRateLimitId
      required: true
      schema:
        example: abcd1234
        type: string
      style: simple
    pathPublicKeyId:
      description: '`id` of the Public Key'
      explode: false
      in: path
      name: publicKeyId
      required: true
      schema:
        example: FcH2P9Eg7wr0o8N2FuV0
        type: string
      style: simple
    pathPushProviderId:
      description: Id of the push provider
      explode: false
      in: path
      name: pushProviderId
      required: true
      schema:
        type: string
      style: simple
    pathRealmId:
      description: '`id` of the Realm'
      explode: false
      in: path
      name: realmId
      required: true
      schema:
        example: vvrcFogtKCrK9aYq3fgV
        type: string
      style: simple
    pathRelationshipName:
      description: Name of the `primary` or `associated` relationship being queried
      explode: false
      in: path
      name: relationshipName
      required: true
      schema:
        type: string
      style: simple
    pathResourceId:
      description: '`id` of a resource'
      explode: false
      in: path
      name: resourceId
      required: true
      schema:
        example: ire106sQKoHoXXsAe0g4
        type: string
      style: simple
    pathResourceSelectorId:
      description: '`id` of a Resource Selector'
      explode: false
      in: path
      name: resourceSelectorId
      required: true
      schema:
        example: rsl1hx31gVEa6x10v0g5
        type: string
      style: simple
    pathResourceSetId:
      description: '`id` of a Resource Set'
      explode: false
      in: path
      name: resourceSetId
      required: true
      schema:
        example: iamoJDFKaJxGIr0oamd9g
        type: string
      style: simple
    pathRiskProviderId:
      description: '`id` of the Risk Provider object'
      explode: false
      in: path
      name: riskProviderId
      required: true
      schema:
        example: 00rp12r4skkjkjgsn
        type: string
      style: simple
    pathRoleId:
      description: '`id` of the Role'
      explode: false
      in: path
      name: roleId
      required: true
      schema:
        example: 3Vg1Pjp3qzw4qcCK5EdO
        type: string
      style: simple
    pathRoleIdOrLabel:
      description: '`id` or `label` of the role'
      explode: false
      in: path
      name: roleIdOrLabel
      required: true
      schema:
        example: cr0Yq6IJxGIr0ouum0g3
        type: string
      style: simple
    pathRoleRef:
      description: "A reference to an existing role. Standard roles require a `roleType`,\
        \ while Custom Roles require a `roleId`. See [Standard Roles](/openapi/okta-management/guides/roles/#standard-roles)."
      explode: false
      in: path
      name: roleRef
      required: true
      schema:
        $ref: '#/components/schemas/listSubscriptionsRole_roleRef_parameter'
      style: simple
    pathRuleId:
      description: '`id` of the Policy Rule'
      explode: false
      in: path
      name: ruleId
      required: true
      schema:
        example: ruld3hJ7jZh4fn0st0g3
        type: string
      style: simple
    pathSchemaId:
      explode: false
      in: path
      name: schemaId
      required: true
      schema:
        type: string
      style: simple
    pathScopeId:
      description: '`id` of Scope'
      explode: false
      in: path
      name: scopeId
      required: true
      schema:
        example: 0TMRpCWXRKFjP7HiPFNM
        type: string
      style: simple
    pathSecretId:
      description: '`id` of the API Service Integration instance Secret'
      example: ocs2f4zrZbs8nUa7p0g4
      explode: false
      in: path
      name: secretId
      required: true
      schema:
        type: string
      style: simple
    pathSection:
      explode: false
      in: path
      name: section
      required: true
      schema:
        type: string
      style: simple
    pathSecurityEventProviderId:
      description: '`id` of the Security Events Provider instance'
      explode: false
      in: path
      name: securityEventProviderId
      required: true
      schema:
        example: sse1qg25RpusjUP6m0g5
        type: string
      style: simple
    pathSessionId:
      description: '`id` of the Session'
      explode: false
      in: path
      name: sessionId
      required: true
      schema:
        example: l7FbDVqS8zHSy65uJD85
        type: string
      style: simple
    pathSubmissionId:
      description: OIN Integration ID
      explode: false
      in: path
      name: submissionId
      required: true
      schema:
        example: acme_submissionapp_1
        type: string
      style: simple
    pathTargetGroupId:
      explode: false
      in: path
      name: targetGroupId
      required: true
      schema:
        example: 00g1e9dfjHeLAsdX983d
        type: string
      style: simple
    pathTemplateId:
      description: '`id` of the Template'
      explode: false
      in: path
      name: templateId
      required: true
      schema:
        example: 6NQUJ5yR3bpgEiYmq8IC
        type: string
      style: simple
    pathTemplateName:
      description: The name of the email template
      explode: false
      in: path
      name: templateName
      required: true
      schema:
        type: string
      style: simple
    pathThemeId:
      description: The ID of the theme
      explode: false
      in: path
      name: themeId
      required: true
      schema:
        type: string
      style: simple
    pathTokenId:
      description: '`id` of Token'
      explode: false
      in: path
      name: tokenId
      required: true
      schema:
        example: sHHSth53yJAyNSTQKDJZ
        type: string
      style: simple
    pathTransactionId:
      description: ID of an existing Factor verification transaction
      explode: false
      in: path
      name: transactionId
      required: true
      schema:
        example: gPAQcN3NDjSGOCAeG2Jv
        type: string
      style: simple
    pathTrustedOriginId:
      description: '`id` of the Trusted Origin'
      explode: false
      in: path
      name: trustedOriginId
      required: true
      schema:
        example: 7j2PkU1nyNIDe26ZNufR
        type: string
      style: simple
    pathTypeId:
      explode: false
      in: path
      name: typeId
      required: true
      schema:
        description: The unique key for the User Type
        type: string
      style: simple
    pathUpdateId:
      description: Id of the update
      explode: false
      in: path
      name: updateId
      required: true
      schema:
        type: string
      style: simple
    pathUserId:
      description: ID of an existing Okta user
      explode: false
      in: path
      name: userId
      required: true
      schema:
        type: string
      style: simple
    pathUserIdOrLogin:
      description: User ID or login value of the user assigned the `associated` relationship
      explode: false
      in: path
      name: userIdOrLogin
      required: true
      schema:
        type: string
      style: simple
    pathZoneId:
      description: '`id` of the Network Zone'
      example: nzowc1U5Jh5xuAK0o0g3
      explode: false
      in: path
      name: zoneId
      required: true
      schema:
        type: string
      style: simple
    privilegedResourceId:
      description: ID of an existing privileged resource
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    queryAfter:
      description: "The cursor to use for pagination. It is an opaque string that\
        \ specifies your current location in the list and is obtained from the `Link`\
        \ response header. See [Pagination](/#pagination)."
      explode: true
      in: query
      name: after
      required: false
      schema:
        type: string
      style: form
    queryAppAfter:
      description: "Specifies the pagination cursor for the next page of results.\
        \ Treat this as an opaque value obtained through the next link relationship.\
        \ See [Pagination](/#pagination)."
      explode: true
      in: query
      name: after
      required: false
      schema:
        example: "16275000448691"
        type: string
      style: form
    queryAppGrantsExpand:
      description: "An optional parameter to return scope details in the `_embedded`\
        \ property. Valid value: `scope`"
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: scope
        type: string
      style: form
    queryAppLimit:
      description: |
        Specifies the number of objects to return per page.
        If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).
        See [Pagination](/#pagination).
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 50
        format: int32
        maximum: 500
        minimum: 1
        type: integer
      style: form
    queryAppUserExpand:
      description: |-
        An optional query parameter to return the corresponding [User](/openapi/okta-management/management/tag/User/) object in the `_embedded` property.
        Valid value: `user`
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: user
        type: string
      style: form
    queryAppUserQ:
      description: |
        Specifies a filter for the list of Application Users returned based on their profile attributes.
        The value of `q` is matched against the beginning of the following profile attributes: `userName`, `firstName`, `lastName`, and `email`.
        This filter only supports the `startsWith` operation that matches the `q` string against the beginning of the attribute values.
        > **Note:** For OIDC apps, user profiles don't contain the `firstName` or `lastName` attributes. Therefore, the query only matches against the `userName` or `email` attributes.
      explode: true
      in: query
      name: q
      required: false
      schema:
        example: sam
        type: string
      style: form
    queryAppsExpand:
      description: |-
        An optional parameter used for link expansion to embed more resources in the response.
        Only supports `expand=user/{userId}` and must be used with the `user.id eq "{userId}"` filter query for the same user.
        Returns the assigned [Application User](/openapi/okta-management/management/tag/ApplicationUsers/) in the `_embedded` property.
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: "user/{userId}"
        type: string
      style: form
    queryExpandBrand:
      description: Specifies additional metadata to be included in the response
      explode: false
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - themes
          - domains
          - emailDomain
          type: string
        type: array
      style: form
    queryExpandEmailDomain:
      description: Specifies additional metadata to be included in the response
      explode: false
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - brands
          type: string
        type: array
      style: form
    queryExpandEmailTemplate:
      description: Specifies additional metadata to be included in the response
      explode: false
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - settings
          - customizationCount
          type: string
        type: array
      style: form
    queryExpandPageRoot:
      description: Specifies additional metadata to be included in the response
      explode: false
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - default
          - customized
          - customizedUrl
          - preview
          - previewUrl
          type: string
        type: array
      style: form
    queryFilter:
      description: Searches the records for matching value
      explode: true
      in: query
      name: q
      required: false
      schema:
        type: string
      style: form
    queryGroupAssignmentLimit:
      description: |-
        Specifies the number of objects to return per page.
        If there are multiple pages of results, the Link header contains a `next` link that you need to use as an opaque value (follow it, don't parse it).
        See [Pagination](/#pagination).
      examples:
        min:
          summary: Minimum limit value
          value: 20
        hundred:
          summary: Sample limit value
          value: 100
        max:
          summary: Maximum limit value
          value: 200
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        format: int32
        maximum: 200
        minimum: 20
        type: integer
      style: form
    queryGroupAssignmentWithGroupExpand:
      description: "An optional query parameter to return the corresponding assigned\
        \ [Group](/openapi/okta-management/management/tag/Group/) or \nthe group assignment\
        \ metadata details in the `_embedded` property. "
      examples:
        group:
          summary: Embedded assigned Group
          value: group
        metadata:
          summary: Embedded group assignment metadata
          value: metadata
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: group
        type: string
      style: form
    queryGroupAssignmentWithMetadataExpand:
      description: "An optional query parameter to return the corresponding assigned\
        \ [Group](/openapi/okta-management/management/tag/Group/) or \nthe group assignment\
        \ metadata details in the `_embedded` property. "
      examples:
        group:
          summary: Embedded assigned Group
          value: group
        metadata:
          summary: Embedded group assignment metadata
          value: metadata
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: metadata
        type: string
      style: form
    queryLanguage:
      description: The language to use for the email. Defaults to the current user's
        language if unspecified.
      explode: true
      in: query
      name: language
      required: false
      schema:
        $ref: '#/components/schemas/Language'
      style: form
    queryLimit:
      description: A limit on the number of objects to return
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
      style: form
    queryLimitPerPoolType:
      description: Maximum number of AgentPools being returned
      explode: true
      in: query
      name: limitPerPoolType
      required: false
      schema:
        default: 5
        type: integer
      style: form
    queryPoolType:
      description: Agent type to search for
      explode: true
      in: query
      name: poolType
      required: false
      schema:
        $ref: '#/components/schemas/AgentType'
      style: form
    queryScheduled:
      description: Scope the list only to scheduled or ad-hoc updates. If the parameter
        is not provided we will return the whole list of updates.
      explode: true
      in: query
      name: scheduled
      required: false
      schema:
        type: boolean
      style: form
    queryUserExpand:
      description: "An optional parameter to include metadata in the `_embedded` attribute.\
        \ Valid value: `blocks`"
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: blocks
        type: string
      style: form
    simulateParameter:
      description: Use `expand=EVALUATED` to include a list of evaluated but not matched
        policies and policy rules. Use `expand=RULE` to include details about why
        a rule condition was (not) matched.
      explode: true
      in: query
      name: expand
      required: false
      schema:
        example: expand=EVALUATED&expand=RULE
        type: string
      style: form
  requestBodies:
    AuthenticatorRequestBody:
      content:
        application/json:
          examples:
            Duo:
              $ref: '#/components/examples/AuthenticatorRequestDuo'
          schema:
            $ref: '#/components/schemas/AuthenticatorBase'
      required: true
  responses:
    ErrorAppUserForbidden403:
      content:
        application/json:
          examples:
            AppUserProvEx:
              $ref: '#/components/examples/ErrorAppUserForbiddenAction'
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    ErrorAppUserUpdateBadRequest400:
      content:
        application/json:
          examples:
            AppUserUpdateCredEx:
              $ref: '#/components/examples/ErrorAppUserUpdateBadRequest'
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    AuthenticatorResponse:
      content:
        application/json:
          examples:
            Duo:
              $ref: '#/components/examples/AuthenticatorResponseDuo'
            Email:
              $ref: '#/components/examples/AuthenticatorResponseEmail'
            Password:
              $ref: '#/components/examples/AuthenticatorResponsePassword'
            Phone:
              $ref: '#/components/examples/AuthenticatorResponsePhone'
            WebAuthn:
              $ref: '#/components/examples/AuthenticatorResponseWebAuthn'
            SecurityQuestion:
              $ref: '#/components/examples/AuthenticatorResponseSecurityQuestion'
          schema:
            $ref: '#/components/schemas/AuthenticatorBase'
      description: OK
    AuthenticatorResponseInactiveWebAuthn:
      content:
        application/json:
          examples:
            WebAuthn:
              $ref: '#/components/examples/AuthenticatorResponseInactiveWebAuthn'
          schema:
            $ref: '#/components/schemas/AuthenticatorBase'
      description: OK
    ErrorApiValidationFailed400:
      content:
        application/json:
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    ErrorMissingRequiredParameter400:
      content:
        application/json:
          examples:
            MissingRequiredParameter:
              $ref: '#/components/examples/ErrorMissingRequiredParameter'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    ErrorInvalidToken401:
      content:
        application/json:
          examples:
            InvalidTokenProvided:
              $ref: '#/components/examples/ErrorInvalidTokenProvided'
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    ErrorAccessDenied403:
      content:
        application/json:
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    ErrorResourceNotFound404:
      content:
        application/json:
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    ErrorTooManyRequests429:
      content:
        application/json:
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
          schema:
            $ref: '#/components/schemas/Error'
      description: Too Many Requests
    Error502NoConnectedAgents:
      content:
        application/json:
          examples:
            AgentTimeOut:
              $ref: '#/components/examples/ErrorAgentTimeOut'
          schema:
            $ref: '#/components/schemas/Error'
      description: There are no connected agents.
    Error504AgentTimeOut:
      content:
        application/json:
          examples:
            AgentTimeOut:
              $ref: '#/components/examples/ErrorNoConnectedAgents'
          schema:
            $ref: '#/components/schemas/Error'
      description: Timed out waiting for agent.
    NzErrorApiValidationFailed400:
      content:
        application/json:
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/NzErrorApiValidationFailed'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    NzErrorResourceNotFound404:
      content:
        application/json:
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/NzErrorResourceNotFound'
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
  schemas:
    AAGUIDGroupObject:
      description: |
        <x-lifecycle class="ea"></x-lifecycle>
        The AAGUID Group object supports the Early Access (Self-Service) Allow List for FIDO2 (WebAuthn) Authenticators feature. Enable the feature for your org from the **Settings** > **Features** page in the Admin Console.

        This feature has several limitations when enrolling a security key:
          - Enrollment is currently unsupported on Firefox.
          - Enrollment is currently unsupported on Chrome if User Verification is set to DISCOURAGED and a PIN is set on the security key.
          - If prompted during enrollment, users must allow Okta to see the make and model of the security key.
      properties:
        aaguids:
          description: "A list of YubiKey hardware FIDO2 Authenticator Attestation\
            \ Global Unique Identifiers (AAGUIDs). The available [AAGUIDs](https://support.yubico.com/hc/en-us/articles/360016648959-YubiKey-Hardware-FIDO2-AAGUIDs)\
            \ (opens new window) are provided by the FIDO Alliance Metadata Service."
          items:
            description: AAGUID
            type: string
          type: array
        name:
          description: A name to identify the group of YubiKey hardware FIDO2 AAGUIDs
          type: string
      type: object
    APIServiceIntegrationInstance:
      example:
        createdAt: 2023-02-21T20:08:24.000Z
        grantedScopes:
        - okta.logs.read
        createdBy: 00uu3u0ujW1P6AfZC2d5
        _links:
          client: null
          logo: null
          self: null
        name: My App Cloud Identity Engine
        id: 0oa72lrepvp4WqEET1d9
        type: my_app_cie
        configGuideUrl: "https://{docDomain}/my-app-cie/configuration-guide"
      properties:
        configGuideUrl:
          description: The URL to the API service integration configuration guide
          example: "https://{docDomain}/my-app-cie/configuration-guide"
          readOnly: true
          type: string
        createdAt:
          description: Timestamp when the API Service Integration instance was created
          example: 2023-02-21T20:08:24.000Z
          readOnly: true
          type: string
        createdBy:
          description: The user ID of the API Service Integration instance creator
          example: 00uu3u0ujW1P6AfZC2d5
          readOnly: true
          type: string
        grantedScopes:
          description: "The list of Okta management scopes granted to the API Service\
            \ Integration instance. See [Okta management OAuth 2.0 scopes](/oauth2/#okta-admin-management)."
          example:
          - okta.logs.read
          items:
            type: string
          type: array
        id:
          description: The ID of the API Service Integration instance
          example: 0oa72lrepvp4WqEET1d9
          readOnly: true
          type: string
        name:
          description: The name of the API service integration that corresponds with
            the `type` property. This is the full name of the API service integration
            listed in the Okta Integration Network (OIN) catalog.
          example: My App Cloud Identity Engine
          readOnly: true
          type: string
        type:
          description: "The type of the API service integration. This string is an\
            \ underscore-concatenated, lowercased API service integration name. For\
            \ example, `my_api_log_integration`."
          example: my_app_cie
          type: string
        _links:
          $ref: '#/components/schemas/APIServiceIntegrationLinks'
      type: object
    APIServiceIntegrationInstanceSecret:
      example:
        lastUpdated: 2023-02-21T20:08:24.000Z
        _links:
          activate: null
          delete: null
          deactivate: null
        created: 2023-02-21T20:08:24.000Z
        secret_hash: yk4SVx4sUWVJVbHt6M-UPA
        client_secret: DRUFXGF9XbLnS9k-Sla3x3POBiIxDreBCdZuFs5B
        id: ocs2f4zrZbs8nUa7p0g4
        status: ACTIVE
      properties:
        client_secret:
          description: "The OAuth 2.0 client secret string. The client secret string\
            \ is returned in the response of a Secret creation request. In other responses\
            \ (such as list, activate, or deactivate requests), the client secret\
            \ is returned as an undisclosed hashed value."
          example: DRUFXGF9XbLnS9k-Sla3x3POBiIxDreBCdZuFs5B
          readOnly: true
          type: string
        created:
          description: Timestamp when the API Service Integration instance Secret
            was created
          example: 2023-02-21T20:08:24.000Z
          readOnly: true
          type: string
        id:
          description: The ID of the API Service Integration instance Secret
          example: ocs2f4zrZbs8nUa7p0g4
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the API Service Integration instance Secret
            was updated
          example: 2023-02-21T20:08:24.000Z
          readOnly: true
          type: string
        secret_hash:
          description: OAuth 2.0 client secret string hash
          example: yk4SVx4sUWVJVbHt6M-UPA
          readOnly: true
          type: string
        status:
          description: Status of the API Service Integration instance Secret
          enum:
          - ACTIVE
          - INACTIVE
          example: ACTIVE
          type: string
        _links:
          $ref: '#/components/schemas/APIServiceIntegrationSecretLinks'
      required:
      - _links
      - client_secret
      - created
      - id
      - lastUpdated
      - secret_hash
      - status
      type: object
    APIServiceIntegrationLinks:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      example:
        client: null
        logo: null
        self: null
      properties:
        client:
          $ref: '#/components/schemas/HrefObjectClientLink'
        logo:
          $ref: '#/components/schemas/HrefObjectLogoLink'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    APIServiceIntegrationSecretLinks:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      example:
        activate: null
        delete: null
        deactivate: null
      properties:
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        delete:
          $ref: '#/components/schemas/HrefObjectDeleteLink'
      readOnly: true
    APNSConfiguration:
      properties:
        fileName:
          description: (Optional) File name for Admin Console display
          type: string
        keyId:
          description: 10-character Key ID obtained from the Apple developer account
          type: string
        teamId:
          description: 10-character Team ID used to develop the iOS app
          type: string
        tokenSigningKey:
          description: APNs private authentication token signing key
          type: string
          writeOnly: true
    APNSPushProvider:
      allOf:
      - $ref: '#/components/schemas/PushProvider'
      - properties:
          configuration:
            $ref: '#/components/schemas/APNSConfiguration'
        type: object
    AccessPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
        type: object
    AccessPolicyConstraint:
      properties:
        authenticationMethods:
          description: This property specifies the precise authenticator and method
            for authentication. <x-lifecycle class="oie"></x-lifecycle>
          items:
            $ref: '#/components/schemas/AuthenticationMethodObject'
          type: array
        excludedAuthenticationMethods:
          description: This property specifies the precise authenticator and method
            to exclude from authentication. <x-lifecycle class="oie"></x-lifecycle>
          items:
            $ref: '#/components/schemas/AuthenticationMethodObject'
          type: array
        methods:
          description: The Authenticator methods that are permitted
          items:
            enum:
            - PASSWORD
            - SECURITY_QUESTION
            - SMS
            - VOICE
            - EMAIL
            - PUSH
            - SIGNED_NONCE
            - OTP
            - TOTP
            - WEBAUTHN
            - DUO
            - IDP
            - CERT
            type: string
          type: array
        reauthenticateIn:
          description: "The duration after which the user must re-authenticate regardless\
            \ of user activity. This re-authentication interval overrides the Verification\
            \ Method object's `reauthenticateIn` interval. The supported values use\
            \ ISO 8601 period format for recurring time intervals (for example, `PT1H`)."
          type: string
        required:
          description: "This property indicates whether the knowledge or possession\
            \ factor is required by the assurance. It's optional in the request, but\
            \ is always returned in the response. By default, this field is `true`.\
            \ If the knowledge or possession constraint has values for `excludedAuthenticationMethods`\
            \ the `required` value is false. <x-lifecycle class=\"oie\"></x-lifecycle>"
          type: boolean
        types:
          description: The Authenticator types that are permitted
          items:
            enum:
            - SECURITY_KEY
            - PHONE
            - EMAIL
            - PASSWORD
            - SECURITY_QUESTION
            - APP
            - FEDERATED
            type: string
          type: array
      type: object
    AccessPolicyConstraints:
      properties:
        knowledge:
          $ref: '#/components/schemas/KnowledgeConstraint'
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
      type: object
    AccessPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/AccessPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/AccessPolicyRuleConditions'
        type: object
    AccessPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - properties:
          appSignOn:
            $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
        type: object
    AccessPolicyRuleApplicationSignOn:
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
      type: object
    AccessPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - properties:
          device:
            $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
          elCondition:
            $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
          userType:
            $ref: '#/components/schemas/UserTypeCondition'
        type: object
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
    AcsEndpoint:
      description: An array of ACS endpoints. You can configure a maximum of 100 endpoints.
      properties:
        index:
          description: Index of the URL in the array of ACS endpoints
          example: 0
          type: integer
        url:
          description: URL of the ACS
          example: https://www.example.com/sso/saml
          maxLength: 1024
          type: string
      required:
      - index
      - url
      type: object
    Actions:
      example:
        assignUserToRealm:
          realmId: realmId
      properties:
        assignUserToRealm:
          $ref: '#/components/schemas/AssignUserToRealm'
      type: object
    AdminConsoleSettings:
      description: Settings specific to the Okta Admin Console
      example:
        sessionMaxLifetimeMinutes: 6077
        sessionIdleTimeoutMinutes: 62
      properties:
        sessionIdleTimeoutMinutes:
          default: 15
          description: The maximum idle time before the Okta Admin Console session
            expires. Must be no more than 12 hours.
          maximum: 720
          minimum: 5
          type: integer
        sessionMaxLifetimeMinutes:
          default: 720
          description: The absolute maximum session lifetime of the Okta Admin Console.
            Must be no more than 7 days.
          maximum: 10080
          minimum: 5
          type: integer
      title: Okta Admin Console Settings
      type: object
    Agent:
      description: Agent details
      example:
        operationalStatus: operationalStatus
        isLatestGAedVersion: true
        _links:
          self: null
        updateStatus: updateStatus
        name: name
        poolId: poolId
        id: id
        type: type
        version: version
        updateMessage: updateMessage
        isHidden: true
        lastConnection: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: string
        isHidden:
          type: boolean
        isLatestGAedVersion:
          type: boolean
        lastConnection:
          format: date-time
          type: string
        name:
          type: string
        operationalStatus:
          description: Operational status of a given agent
          type: string
          x-okta-known-values:
          - DEGRADED
          - DISRUPTED
          - INACTIVE
          - OPERATIONAL
        poolId:
          type: string
        type:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        updateMessage:
          type: string
        updateStatus:
          description: Status for one agent regarding the status to auto-update that
            agent
          type: string
          x-okta-known-values:
          - Cancelled
          - Failed
          - InProgress
          - PendingCompletion
          - Scheduled
          - Success
        version:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    AgentAction:
      description: Details about the AD Group membership update
      example:
        id: id
        parameters:
          values:
          - values
          - values
          action: ADD
          attribute: attribute
      properties:
        id:
          description: ID of the AD group to update
          type: string
        parameters:
          $ref: '#/components/schemas/Parameters'
      type: object
    AgentPool:
      description: "An AgentPool is a collection of agents that serve a common purpose.\
        \ An AgentPool has a unique ID within an org, and contains a collection of\
        \ agents disjoint to every other AgentPool (i.e. no two AgentPools share an\
        \ Agent)."
      example:
        operationalStatus: operationalStatus
        name: name
        id: id
        type: type
        agents:
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            self: null
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            self: null
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
      properties:
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        id:
          readOnly: true
          type: string
        name:
          type: string
        operationalStatus:
          description: Operational status of a given agent
          type: string
          x-okta-known-values:
          - DEGRADED
          - DISRUPTED
          - INACTIVE
          - OPERATIONAL
        type:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
      type: object
    AgentPoolUpdate:
      description: Various information about agent auto update configuration
      example:
        reason: reason
        schedule:
          cron: cron
          duration: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          delay: 0
          timezone: timezone
        agentType: agentType
        notifyAdmin: true
        _links:
          self: null
        sortOrder: 1
        name: name
        id: id
        enabled: true
        agents:
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            self: null
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            self: null
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        status: status
        targetVersion: targetVersion
      properties:
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        agentType:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        enabled:
          type: boolean
        id:
          readOnly: true
          type: string
        name:
          type: string
        notifyAdmin:
          type: boolean
        reason:
          type: string
        schedule:
          $ref: '#/components/schemas/AutoUpdateSchedule'
        sortOrder:
          type: integer
        status:
          description: Overall state for the auto-update job from admin perspective
          type: string
          x-okta-known-values:
          - Cancelled
          - Failed
          - InProgress
          - Paused
          - Scheduled
          - Success
        targetVersion:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    AgentPoolUpdateSetting:
      description: Setting for auto-update
      example:
        releaseChannel: releaseChannel
        agentType: agentType
        latestVersion: latestVersion
        poolId: poolId
        continueOnError: true
        minimalSupportedVersion: minimalSupportedVersion
        poolName: poolName
      properties:
        agentType:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        continueOnError:
          type: boolean
        latestVersion:
          type: string
        minimalSupportedVersion:
          type: string
        poolId:
          readOnly: true
          type: string
        poolName:
          type: string
        releaseChannel:
          description: Release channel for auto-update
          type: string
          x-okta-known-values:
          - BETA
          - EA
          - GA
          - TEST
      type: object
    AgentType:
      description: Agent types that are being monitored
      type: string
      x-okta-known-values:
      - AD
      - IWA
      - LDAP
      - MFA
      - OPP
      - RUM
      - Radius
    AgentUpdateInstanceStatus:
      description: Status for one agent regarding the status to auto-update that agent
      type: string
      x-okta-known-values:
      - Cancelled
      - Failed
      - InProgress
      - PendingCompletion
      - Scheduled
      - Success
    AgentUpdateJobStatus:
      description: Overall state for the auto-update job from admin perspective
      type: string
      x-okta-known-values:
      - Cancelled
      - Failed
      - InProgress
      - Paused
      - Scheduled
      - Success
    AllowedForEnum:
      description: The allowed types of uses for the Authenticator
      type: string
      x-okta-known-values:
      - any
      - none
      - recovery
      - sso
    ApiToken:
      description: An API token for an Okta User. This token is NOT scoped any further
        and can be used for any API the user has permissions to call.
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        tokenWindow: tokenWindow
        _link:
          self: null
        clientName: clientName
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        network:
          include:
          - include
          - include
          connection: connection
          exclude:
          - exclude
          - exclude
      properties:
        clientName:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        network:
          $ref: '#/components/schemas/ApiToken_network'
        tokenWindow:
          description: "A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)."
          pattern: ^P(?:$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?:\d)(\d+H)?(\d+M)?(\d+S)?)?$
          type: string
        userId:
          type: string
        _link:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - name
      title: API Token
      type: object
    ApiTokenUpdate:
      description: An API Token Update Object for an Okta user. This token is NOT
        scoped any further and can be used for any API that the user has permissions
        to call.
      example:
        clientName: clientName
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        userId: userId
        network:
          include:
          - include
          - include
          connection: connection
          exclude:
          - exclude
          - exclude
      properties:
        clientName:
          description: The client name associated with the API Token
          readOnly: true
          type: string
        created:
          description: The creation date of the API Token
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name associated with the API Token
          type: string
        network:
          $ref: '#/components/schemas/ApiToken_network'
        userId:
          description: The userId of the user who created the API Token
          type: string
      title: API Token Update
      type: object
    AppAccountContainerDetails:
      description: Container details for resource type APP_ACCOUNT
      properties:
        appName:
          description: The application name
          readOnly: true
          type: string
        containerId:
          description: The application ID associated with the privileged account
          type: string
        displayName:
          description: Human-readable name of the container that owns the privileged
            resource
          readOnly: true
          type: string
        globalAppId:
          description: The application global ID
          readOnly: true
          type: string
        passwordPushSupported:
          description: Indicates if the application supports password push
          readOnly: true
          type: boolean
        provisioningEnabled:
          description: Indicates if provisioning is enabled for this application
          readOnly: true
          type: boolean
        _links:
          $ref: '#/components/schemas/appLink'
      required:
      - containerId
      type: object
    AppAndInstanceConditionEvaluatorAppOrInstance:
      properties:
        id:
          description: ID of the app
          readOnly: false
          type: string
        name:
          description: Name of the app type
          type: string
        type:
          description: Type of app
          type: string
          x-okta-known-values:
          - APP
          - APP_TYPE
      type: object
    AppAndInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
        include:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
      type: object
    AppAndInstanceType:
      description: Type of app
      type: string
      x-okta-known-values:
      - APP
      - APP_TYPE
    AppCustomHrefObject:
      properties:
        hints:
          $ref: '#/components/schemas/AppCustomHrefObject_hints'
        href:
          description: Link URI
          type: string
        title:
          description: Link name
          type: string
        type:
          description: "The media type of the link. If omitted, it is implicitly `application/json`."
          type: string
      readOnly: true
      required:
      - href
      type: object
    AppInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    AppLink:
      example:
        appInstanceId: appInstanceId
        credentialsSetup: true
        hidden: true
        appName: appName
        appAssignmentId: appAssignmentId
        sortOrder: 0
        linkUrl: linkUrl
        id: id
        label: label
        logoUrl: logoUrl
      properties:
        appAssignmentId:
          readOnly: true
          type: string
        appInstanceId:
          readOnly: true
          type: string
        appName:
          readOnly: true
          type: string
        credentialsSetup:
          readOnly: true
          type: boolean
        hidden:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        linkUrl:
          readOnly: true
          type: string
        logoUrl:
          readOnly: true
          type: string
        sortOrder:
          readOnly: true
          type: integer
      type: object
    AppUser:
      description: The Application User object defines a user's app-specific profile
        and credentials for an app
      example:
        credentials:
          password:
            value: value
          userName: testuser@example.com
        _links:
          app: null
          user: null
          group: null
        created: ""
        profile:
          key: ""
        syncState: SYNCHRONIZED
        externalId: 70c14cc17d3745e8a9f98d599a68329c
        lastUpdated: ""
        passwordChanged: 2014-06-24T15:27:59Z
        lastSync: 2014-06-24T15:27:59Z
        _embedded:
          key: "{}"
        scope: USER
        statusChanged: 2014-06-24T15:28:14Z
        id: 00u11z6WHMYCGPCHCRFK
        status: ACTIVE
      properties:
        created:
          allOf:
          - $ref: '#/components/schemas/createdProperty'
          - example: 2014-06-24T15:27:59.000Z
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          description: |-
            The ID of the user in the target app that's linked to the Okta Application User object.
            This value is the native app-specific identifier or primary key for the user in the target app.

            The `externalId` is set during import when the user is confirmed (reconciled) or during provisioning when the user is created in the target app.
            This value isn't populated for SSO app assignments (for example, SAML or SWA) because it isn't synchronized with a target app.
          example: 70c14cc17d3745e8a9f98d599a68329c
          readOnly: true
          type: string
        id:
          description: Unique identifier for the Okta User
          example: 00u11z6WHMYCGPCHCRFK
          type: string
        lastSync:
          description: Timestamp of the last synchronization operation. This value
            is only updated for apps with the `IMPORT_PROFILE_UPDATES` or `PUSH PROFILE_UPDATES`
            feature.
          example: 2014-06-24T15:27:59Z
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/lastUpdatedProperty'
          - example: 2014-06-24T15:28:14.000Z
        passwordChanged:
          description: Timestamp when the Application User password was last changed
          example: 2014-06-24T15:27:59Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        profile:
          additionalProperties: true
          description: |
            Specifies the default and custom profile properties for a user.
            Properties that are visible in the Admin Console for an app assignment can also be assigned through the API.
            Some properties are reference properties that are imported from the target app and can't be configured.
            See [profile](/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response).
          type: object
        scope:
          description: Indicates if the assignment is direct (`USER`) or by group
            membership (`GROUP`).
          enum:
          - USER
          - GROUP
          example: USER
          type: string
        status:
          description: Status of an Application User
          example: ACTIVE
          readOnly: true
          type: string
          x-enumDescriptions:
            ACTIVE: "The Application User is provisioned and is enabled to use the\
              \ app. This status also occurs if the app has the `IMPORT_PROFILE_UPDATES`\
              \ feature enabled and user import is confirmed, or if the app doesn't\
              \ have provisioning enabled."
            INACTIVE: "The Application User is provisioned, but isn't enabled to use\
              \ the app. Application Users in this status can be reactivated with\
              \ a password reset or permanently deleted."
            IMPORTED: The Application User is created based on imported data.
            MATCHED: The imported user is matched with an existing Application User.
            UNASSIGNED: "The Application User was imported, but the user-matching\
              \ operation was skipped."
            SUSPENDED: "The Application User is provisioned, but isn't enabled to\
              \ use the app. Application Users in this status can be reactivated without\
              \ a password reset."
            PENDING: "The Application User is provisioned, but in a pending state\
              \ and can't use the app. The status moves to `ACTIVE` when the Application\
              \ User is activated."
            APPROVED: The Application User was created but not provisioned. This status
              can occur when manual provisioning acknowledgment is required.
            REVOKED: The Application User is disabled and waiting for deprovisioning
              acknowledgment. The Application User can be deleted after deprovisioning
              acknowledgment.
            IMPLICIT: The Application User is now migrated to use implicit app assignment.
            STAGED: The Application User doesn't have `externalId` set and the background
              provisioning operation is queued. This applies to apps with the `PUSH_NEW_USERS`
              feature enabled.
            PROVISIONED: The background provisioning operation completed and the Application
              User was assigned an `externalId` successfully.
            DEPROVISIONED: The user was removed by the provisioning operation and
              the `externalId` property is unassigned.
          x-okta-known-values:
          - ACTIVE
          - APPROVED
          - DEPROVISIONED
          - IMPLICIT
          - IMPORTED
          - INACTIVE
          - MATCHED
          - PENDING
          - PROVISIONED
          - REVOKED
          - STAGED
          - SUSPENDED
          - UNASSIGNED
        statusChanged:
          description: Timestamp when the Application User status was last changed
          example: 2014-06-24T15:28:14Z
          format: date-time
          readOnly: true
          type: string
        syncState:
          description: |-
            The synchronization state for the Application User.
            The Application User's `syncState` depends on whether the `PROFILE_MASTERING` feature is enabled for the app.

            > **Note:** User provisioning currently must be configured through the Admin Console.
          example: SYNCHRONIZED
          readOnly: true
          type: string
          x-enumDescriptions:
            DISABLED: The provisioning feature is disabled for the app (`PROFILE_MASTERING`
              feature is disabled).
            OUT_OF_SYNC: The Application User has changes that haven't been pushed
              to the target app.
            SYNCING: A background provisioning operation is running to update the
              user's profile in the target app.
            SYNCHRONIZED: All changes to the Application User profile have successfully
              been synchronized with the target app.
            ERROR: A background provisioning operation failed to update the user's
              profile in the target app. You must resolve the provisioning task in
              the Admin Console before you retry the operation.
          x-okta-known-values:
          - DISABLED
          - ERROR
          - OUT_OF_SYNC
          - SYNCHRONIZED
          - SYNCING
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          description: "Embedded resources related to the Application User using the\
            \ [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
            \ specification"
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/LinksAppAndUser'
      title: Application User
      type: object
    AppUserAssignRequest:
      allOf:
      - $ref: '#/components/schemas/AppUser'
      - required:
        - id
    AppUserCredentials:
      description: |
        Specifies a user's credentials for the app.
        This parameter can be omitted for apps with [sign-on mode](/openapi/okta-management/management/tag/Application/#tag/Application/operation/getApplication!c=200&path=0/signOnMode&t=response) (`signOnMode`) or [authentication schemes](/openapi/okta-management/management/tag/Application/#tag/Application/operation/getApplication!c=200&path=0/credentials/scheme&t=response) (`credentials.scheme`) that don't require credentials.
      example:
        password:
          value: value
        userName: testuser@example.com
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          description: The user's username in the app
          example: testuser@example.com
          maxLength: 100
          minLength: 1
          type: string
      type: object
    AppUserCredentialsRequestPayload:
      description: Updates the assigned user credentials
      properties:
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
      title: Credentials
      type: object
    AppUserPasswordCredential:
      description: The user's password. This is a write-only property. An empty `password`
        object is returned to indicate that a password value exists.
      example:
        value: value
      properties:
        value:
          description: Password value
          format: password
          type: string
          writeOnly: true
      type: object
    AppUserProfile:
      additionalProperties: true
      description: |
        Specifies the default and custom profile properties for a user.
        Properties that are visible in the Admin Console for an app assignment can also be assigned through the API.
        Some properties are reference properties that are imported from the target app and can't be configured.
        See [profile](/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response).
      type: object
    AppUserProfileRequestPayload:
      description: |-
        Updates the assigned user profile
        > **Note:** The Okta API currently doesn't support entity tags for conditional updates. As long as you're the only user updating the the user profile, Okta recommends you fetch the most recent profile with [Retrieve an Application User](/openapi/okta-management/management/tag/ApplicationUsers/#tag/ApplicationUsers/operation/getApplicationUser), apply your profile update, and then `POST` back the updated profile.
      properties:
        profile:
          additionalProperties: true
          description: |
            Specifies the default and custom profile properties for a user.
            Properties that are visible in the Admin Console for an app assignment can also be assigned through the API.
            Some properties are reference properties that are imported from the target app and can't be configured.
            See [profile](/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response).
          type: object
      title: Profile
      type: object
    AppUserStatus:
      description: Status of an Application User
      example: ACTIVE
      readOnly: true
      type: string
      x-enumDescriptions:
        ACTIVE: "The Application User is provisioned and is enabled to use the app.\
          \ This status also occurs if the app has the `IMPORT_PROFILE_UPDATES` feature\
          \ enabled and user import is confirmed, or if the app doesn't have provisioning\
          \ enabled."
        INACTIVE: "The Application User is provisioned, but isn't enabled to use the\
          \ app. Application Users in this status can be reactivated with a password\
          \ reset or permanently deleted."
        IMPORTED: The Application User is created based on imported data.
        MATCHED: The imported user is matched with an existing Application User.
        UNASSIGNED: "The Application User was imported, but the user-matching operation\
          \ was skipped."
        SUSPENDED: "The Application User is provisioned, but isn't enabled to use\
          \ the app. Application Users in this status can be reactivated without a\
          \ password reset."
        PENDING: "The Application User is provisioned, but in a pending state and\
          \ can't use the app. The status moves to `ACTIVE` when the Application User\
          \ is activated."
        APPROVED: The Application User was created but not provisioned. This status
          can occur when manual provisioning acknowledgment is required.
        REVOKED: The Application User is disabled and waiting for deprovisioning acknowledgment.
          The Application User can be deleted after deprovisioning acknowledgment.
        IMPLICIT: The Application User is now migrated to use implicit app assignment.
        STAGED: The Application User doesn't have `externalId` set and the background
          provisioning operation is queued. This applies to apps with the `PUSH_NEW_USERS`
          feature enabled.
        PROVISIONED: The background provisioning operation completed and the Application
          User was assigned an `externalId` successfully.
        DEPROVISIONED: The user was removed by the provisioning operation and the
          `externalId` property is unassigned.
      x-okta-known-values:
      - ACTIVE
      - APPROVED
      - DEPROVISIONED
      - IMPLICIT
      - IMPORTED
      - INACTIVE
      - MATCHED
      - PENDING
      - PROVISIONED
      - REVOKED
      - STAGED
      - SUSPENDED
      - UNASSIGNED
    AppUserSyncState:
      description: |-
        The synchronization state for the Application User.
        The Application User's `syncState` depends on whether the `PROFILE_MASTERING` feature is enabled for the app.

        > **Note:** User provisioning currently must be configured through the Admin Console.
      example: SYNCHRONIZED
      readOnly: true
      type: string
      x-enumDescriptions:
        DISABLED: The provisioning feature is disabled for the app (`PROFILE_MASTERING`
          feature is disabled).
        OUT_OF_SYNC: The Application User has changes that haven't been pushed to
          the target app.
        SYNCING: A background provisioning operation is running to update the user's
          profile in the target app.
        SYNCHRONIZED: All changes to the Application User profile have successfully
          been synchronized with the target app.
        ERROR: A background provisioning operation failed to update the user's profile
          in the target app. You must resolve the provisioning task in the Admin Console
          before you retry the operation.
      x-okta-known-values:
      - DISABLED
      - ERROR
      - OUT_OF_SYNC
      - SYNCHRONIZED
      - SYNCING
    AppUserUpdateRequest:
      oneOf:
      - $ref: '#/components/schemas/AppUserCredentialsRequestPayload'
      - $ref: '#/components/schemas/AppUserProfileRequestPayload'
    Application:
      discriminator:
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/Saml11Application'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
        propertyName: signOnMode
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          description: Timestamp when the Application object was created
          format: date-time
          readOnly: true
          type: string
        features:
          description: Enabled app features
          items:
            type: string
          type: array
        id:
          description: Unique ID for the app instance
          readOnly: true
          type: string
        label:
          description: User-defined display name for app
          type: string
        lastUpdated:
          description: Timestamp when the Application object was last updated
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        profile:
          additionalProperties: true
          description: Contains any valid JSON schema for specifying properties that
            can be referenced from a request (only available to OAuth 2.0 client apps)
          type: object
        signOnMode:
          description: Authentication mode for the app
          type: string
          x-okta-known-values:
          - AUTO_LOGIN
          - BASIC_AUTH
          - BOOKMARK
          - BROWSER_PLUGIN
          - OPENID_CONNECT
          - SAML_1_1
          - SAML_2_0
          - SECURE_PASSWORD_STORE
          - WS_FEDERATION
        status:
          description: App instance status
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DELETED
          - INACTIVE
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/ApplicationLinks'
      required:
      - label
      - signOnMode
      type: object
    ApplicationAccessibility:
      description: Specifies access settings for the app
      properties:
        errorRedirectUrl:
          description: Custom error page URL for the app
          type: string
        loginRedirectUrl:
          description: Custom login page URL for the app
          type: string
        selfService:
          description: Represents whether the app can be self-assignable by users
          type: boolean
      type: object
    ApplicationCredentials:
      description: Credentials for the specified `signOnMode`
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      type: object
    ApplicationCredentialsOAuthClient:
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        pkce_required:
          description: Require Proof Key for Code Exchange (PKCE) for additional verification
          type: boolean
        token_endpoint_auth_method:
          type: string
          x-okta-known-values:
          - client_secret_basic
          - client_secret_jwt
          - client_secret_post
          - none
          - private_key_jwt
      type: object
    ApplicationCredentialsScheme:
      type: string
      x-okta-known-values:
      - ADMIN_SETS_CREDENTIALS
      - EDIT_PASSWORD_ONLY
      - EDIT_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - SHARED_USERNAME_AND_PASSWORD
    ApplicationCredentialsSigning:
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
        use:
          type: string
          x-okta-known-values:
          - sig
      type: object
    ApplicationCredentialsSigningUse:
      type: string
      x-okta-known-values:
      - sig
    ApplicationCredentialsUsernameTemplate:
      properties:
        pushStatus:
          type: string
        template:
          type: string
        type:
          type: string
        userSuffix:
          type: string
      type: object
    ApplicationFeature:
      description: |
        The Feature object is used to configure application feature settings.
      discriminator:
        mapping:
          USER_PROVISIONING: '#/components/schemas/UserProvisioningApplicationFeature'
          INBOUND_PROVISIONING: '#/components/schemas/InboundProvisioningApplicationFeature'
        propertyName: name
      properties:
        description:
          description: Description of the feature
          example: Settings for provisioning users from Okta to a downstream application
          readOnly: true
          type: string
        name:
          description: |
            Identifying name of the feature

            | Value | Description   |
            | --------- | ------------- |
            | USER_PROVISIONING  | Represents the **To App** provisioning feature setting in the Admin Console |
            | INBOUND_PROVISIONING | Represents the **To Okta** provisioning feature setting in the Admin Console |
          example: USER_PROVISIONING
          type: string
          x-enumDescriptions:
            USER_PROVISIONING: Represents the **To App** provisioning feature setting
              in the Admin Console
            INBOUND_PROVISIONING: Represents the **To Okta** provisioning feature
              setting in the Admin Console
          x-okta-known-values:
          - USER_PROVISIONING
          - USER_PROVISIONING
          - INBOUND_PROVISIONING
        status:
          allOf:
          - $ref: '#/components/schemas/EnabledStatus'
          - default: DISABLED
          - example: ENABLED
          - readOnly: true
        _links:
          $ref: '#/components/schemas/ApplicationFeature__links'
      type: object
    ApplicationFeatureType:
      description: |
        Identifying name of the feature

        | Value | Description   |
        | --------- | ------------- |
        | USER_PROVISIONING  | Represents the **To App** provisioning feature setting in the Admin Console |
        | INBOUND_PROVISIONING | Represents the **To Okta** provisioning feature setting in the Admin Console |
      example: USER_PROVISIONING
      type: string
      x-enumDescriptions:
        USER_PROVISIONING: Represents the **To App** provisioning feature setting
          in the Admin Console
        INBOUND_PROVISIONING: Represents the **To Okta** provisioning feature setting
          in the Admin Console
      x-okta-known-values:
      - USER_PROVISIONING
      - USER_PROVISIONING
      - INBOUND_PROVISIONING
    ApplicationGroupAssignment:
      description: The Application Group object that defines a group of users' app-specific
        profile and credentials for an app
      example:
        lastUpdated: ""
        _embedded:
          key: "{}"
        _links: null
        profile:
          key: ""
        id: 00g4hb1HChfUriNgW0g4
        priority: 99
      properties:
        id:
          description: "ID of the [Group](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/)"
          example: 00g4hb1HChfUriNgW0g4
          readOnly: true
          type: string
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/lastUpdatedProperty'
          - example: 2014-06-24T15:28:14.000Z
        priority:
          description: |-
            Priority assigned to the group. If an app has more than one group assigned to the same user, then the group with the higher priority has its profile applied to the [Application User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/).
            If a priority value isn't specified, then the next highest priority is assigned by default.
            See [Assign attribute group priority](https://help.okta.com/okta_help.htm?type=oie&id=ext-usgp-app-group-priority) and the [sample priority use case](https://help.okta.com/okta_help.htm?type=oie&id=ext-usgp-combine-values-use).
          example: 99
          type: integer
        profile:
          additionalProperties: true
          description: "Specifies the profile properties applied to [Application Users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/)\
            \ that are assigned to the app through group membership. \nSome reference\
            \ properties are imported from the target app and can't be configured.\
            \ See [profile](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response)."
          type: object
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          description: "Embedded resource related to the Application Group using the\
            \ [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
            \ specification.\nIf the `expand=group` query parameter is specified,\
            \ then the [Group](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/)\
            \ object is embedded. \nIf the `expand=metadata` query parameter is specified,\
            \ then the group assignment metadata is embedded."
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/ApplicationGroupAssignment__links'
      title: Application Group Assignment
      type: object
    ApplicationLabel:
      description: User-defined display name for app
      type: string
    ApplicationLayout:
      properties:
        elements:
          items:
            additionalProperties: {}
            type: object
          type: array
        label:
          type: string
        options:
          additionalProperties: {}
          type: object
        rule:
          $ref: '#/components/schemas/ApplicationLayout_rule'
        scope:
          type: string
        type:
          type: string
      type: object
    ApplicationLayoutRuleCondition:
      properties:
        schema:
          additionalProperties: {}
          type: object
        scope:
          type: string
      type: object
    ApplicationLayouts:
      properties:
        _links:
          $ref: '#/components/schemas/ApplicationLayouts__links'
      type: object
    ApplicationLayoutsLinksItem:
      items:
        $ref: '#/components/schemas/HrefObject'
      type: array
    ApplicationLicensing:
      properties:
        seatCount:
          description: Number of licenses purchased for the app
          type: integer
      type: object
    ApplicationLifecycleStatus:
      description: App instance status
      readOnly: true
      type: string
      x-okta-known-values:
      - ACTIVE
      - DELETED
      - INACTIVE
    ApplicationLinks:
      description: Discoverable resources related to the app
      properties:
        accessPolicy:
          $ref: '#/components/schemas/HrefObject'
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        groups:
          $ref: '#/components/schemas/HrefObject'
        logo:
          items:
            $ref: '#/components/schemas/HrefObject'
          type: array
        metadata:
          $ref: '#/components/schemas/HrefObject'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
        users:
          $ref: '#/components/schemas/HrefObject'
    ApplicationSettings:
      description: App settings
      properties:
        identityStoreId:
          type: string
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
      type: object
    ApplicationSettingsNotes:
      properties:
        admin:
          type: string
        enduser:
          type: string
      type: object
    ApplicationSettingsNotifications:
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      type: object
    ApplicationSettingsNotificationsVpn:
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      type: object
    ApplicationSettingsNotificationsVpnNetwork:
      properties:
        connection:
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    ApplicationSignOnMode:
      description: Authentication mode for the app
      type: string
      x-okta-known-values:
      - AUTO_LOGIN
      - BASIC_AUTH
      - BOOKMARK
      - BROWSER_PLUGIN
      - OPENID_CONNECT
      - SAML_1_1
      - SAML_2_0
      - SECURE_PASSWORD_STORE
      - WS_FEDERATION
    ApplicationType:
      description: "The type of client application. Default value: `web`."
      type: string
      x-okta-known-values:
      - browser
      - native
      - service
      - web
    ApplicationVisibility:
      properties:
        appLinks:
          additionalProperties:
            type: boolean
          description: Links or icons that appear on the End-User Dashboard when they're
            assigned to the app
          type: object
        autoLaunch:
          description: Automatically signs in to the app when user signs into Okta
          type: boolean
        autoSubmitToolbar:
          description: Automatically sign in when user lands on the sign-in page
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      type: object
    ApplicationVisibilityHide:
      description: Hides the app for specific end-user apps
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      type: object
    AssignGroupOwnerRequestBody:
      example:
        id: id
        type: type
      properties:
        id:
          description: The `id` of the group owner
          type: string
        type:
          description: The entity type of the owner
          type: string
          x-okta-known-values:
          - GROUP
          - USER
      type: object
    AssignRoleRequest:
      example:
        type: type
      properties:
        type:
          description: Standard role type
          type: string
          x-enumDescriptions:
            API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
            API_ADMIN: Access Management Administrator
            APP_ADMIN: Application Administrator
            CUSTOM: Custom label specified by the client
            GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
            HELP_DESK_ADMIN: Help Desk Administrator
            MOBILE_ADMIN: Mobile Administrator
            ORG_ADMIN: Organizational Administrator
            READ_ONLY_ADMIN: Read-Only Administrator
            REPORT_ADMIN: Report Administrator
            SUPER_ADMIN: Super Administrator
            USER_ADMIN: Group Administrator
          x-okta-known-values:
          - API_ACCESS_MANAGEMENT_ADMIN
          - API_ADMIN
          - APP_ADMIN
          - CUSTOM
          - GROUP_MEMBERSHIP_ADMIN
          - HELP_DESK_ADMIN
          - MOBILE_ADMIN
          - ORG_ADMIN
          - READ_ONLY_ADMIN
          - REPORT_ADMIN
          - SUPER_ADMIN
          - USER_ADMIN
      type: object
    AssignUserToRealm:
      example:
        realmId: realmId
      properties:
        realmId:
          type: string
      type: object
    AssociatedServerMediated:
      example:
        trusted:
        - trusted
        - trusted
      properties:
        trusted:
          description: A list of the authorization server IDs
          items:
            type: string
          type: array
      type: object
    AttackProtectionAuthenticatorSettings:
      example:
        verifyKnowledgeSecondWhen2faRequired: false
      properties:
        verifyKnowledgeSecondWhen2faRequired:
          default: false
          description: "If true, requires users to verify a possession factor before\
            \ verifying a knowledge factor when the assurance requires two-factor\
            \ authentication (2FA)."
          type: boolean
      type: object
    AuthServerLinks:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          claims:
            $ref: '#/components/schemas/AuthServerLinks_allOf_claims'
          deactivate:
            allOf:
            - $ref: '#/components/schemas/HrefObjectDeactivateLink'
          metadata:
            description: Link to the authorization server metadata
            items:
              $ref: '#/components/schemas/HrefObject'
            type: array
          policies:
            $ref: '#/components/schemas/AuthServerLinks_allOf_policies'
          rotateKey:
            $ref: '#/components/schemas/AuthServerLinks_allOf_rotateKey'
          scopes:
            $ref: '#/components/schemas/AuthServerLinks_allOf_scopes'
        type: object
    AuthenticationMethodObject:
      properties:
        key:
          description: A label that identifies the authenticator
          type: string
        method:
          description: Specifies the method used for the authenticator
          type: string
      type: object
    AuthenticationProvider:
      description: |-
        Specifies the authentication provider that validates the user's password credential. The user's current provider
         is managed by the Delegated Authentication settings for your organization. The provider object is read-only.
      example:
        name: name
        type: type
      properties:
        name:
          description: The name of the authentication provider
          readOnly: true
          type: string
        type:
          description: The type of authentication provider
          readOnly: true
          type: string
          x-enumDescriptions:
            ACTIVE_DIRECTORY: Specifies the directory instance name as the `name`
              property
            FEDERATION: Doesn't support a `password` or `recovery question` credential
              and must authenticate through a trusted Identity Provider
            IMPORT: Specifies a hashed password that was imported from an external
              source
            LDAP: Specifies the directory instance name as the `name` property
            OKTA: Specifies the Okta Identity Provider
            SOCIAL: Doesn't support a `password` or `recovery question` credential
              and must authenticate through a trusted Identity Provider
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FEDERATION
          - IMPORT
          - LDAP
          - OKTA
          - SOCIAL
      type: object
    AuthenticationProviderType:
      description: The type of authentication provider
      readOnly: true
      type: string
      x-enumDescriptions:
        ACTIVE_DIRECTORY: Specifies the directory instance name as the `name` property
        FEDERATION: Doesn't support a `password` or `recovery question` credential
          and must authenticate through a trusted Identity Provider
        IMPORT: Specifies a hashed password that was imported from an external source
        LDAP: Specifies the directory instance name as the `name` property
        OKTA: Specifies the Okta Identity Provider
        SOCIAL: Doesn't support a `password` or `recovery question` credential and
          must authenticate through a trusted Identity Provider
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - IMPORT
      - LDAP
      - OKTA
      - SOCIAL
    AuthenticatorBase:
      discriminator:
        mapping:
          custom_app: '#/components/schemas/AuthenticatorKeyCustomApp'
          duo: '#/components/schemas/AuthenticatorKeyDuo'
          okta_email: '#/components/schemas/AuthenticatorKeyEmail'
          google_otp: '#/components/schemas/AuthenticatorKeyGoogleOtp'
          external_idp: '#/components/schemas/AuthenticatorKeyExternalIdp'
          okta_password: '#/components/schemas/AuthenticatorKeyPassword'
          okta_verify: '#/components/schemas/AuthenticatorKeyOktaVerify'
          onprem_mfa: '#/components/schemas/AuthenticatorKeyOnprem'
          phone_number: '#/components/schemas/AuthenticatorKeyPhone'
          security_key: '#/components/schemas/AuthenticatorKeySecurityKey'
          security_question: '#/components/schemas/AuthenticatorKeySecurityQuestion'
          symantec_vip: '#/components/schemas/AuthenticatorKeySymantecVip'
          smart_card_idp: '#/components/schemas/AuthenticatorKeySmartCard'
          webauthn: '#/components/schemas/AuthenticatorKeyWebauthn'
          yubikey_token: '#/components/schemas/AuthenticatorKeyYubikey'
        propertyName: key
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        key: key
        status: status
      properties:
        created:
          description: Timestamp when the Authenticator was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: A unique identifier for the Authenticator
          readOnly: true
          type: string
        key:
          description: A human-readable string that identifies the Authenticator
          type: string
          x-okta-known-values:
          - custom_app
          - duo
          - external_idp
          - google_otp
          - okta_email
          - okta_password
          - okta_verify
          - onprem_mfa
          - phone_number
          - security_key
          - security_question
          - smart_card_idp
          - symantec_vip
          - webauthn
          - yubikey_token
        lastUpdated:
          description: Timestamp when the Authenticator was last modified
          format: date-time
          readOnly: true
          type: string
        name:
          description: Display name of the Authenticator
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          description: The type of Authenticator
          type: string
          x-okta-known-values:
          - app
          - email
          - federated
          - password
          - phone
          - security_key
          - security_question
        _links:
          $ref: '#/components/schemas/AuthenticatorLinks'
      type: object
    AuthenticatorIdentity:
      description: Represents a particular authenticator serving as a constraint on
        a method
      properties:
        key:
          type: string
      type: object
    AuthenticatorKeyCustomApp:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          agreeToTerms:
            description: "A value of `true` indicates that the administrator accepts\
              \ the [terms](https://www.okta.com/privacy-policy/)for creating a new\
              \ authenticator. Okta requires that you accept the terms when creating\
              \ a new `custom_app` authenticator. Other authenticators don't require\
              \ this field."
            type: boolean
          provider:
            $ref: '#/components/schemas/AuthenticatorKeyCustomApp_allOf_provider'
          settings:
            $ref: '#/components/schemas/AuthenticatorKeyCustomApp_allOf_settings'
        type: object
    AuthenticatorKeyDuo:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          provider:
            $ref: '#/components/schemas/AuthenticatorKeyDuo_allOf_provider'
        type: object
    AuthenticatorKeyEmail:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorKeyEmail_allOf_settings'
        type: object
    AuthenticatorKeyEnum:
      description: A human-readable string that identifies the Authenticator
      type: string
      x-okta-known-values:
      - custom_app
      - duo
      - external_idp
      - google_otp
      - okta_email
      - okta_password
      - okta_verify
      - onprem_mfa
      - phone_number
      - security_key
      - security_question
      - smart_card_idp
      - symantec_vip
      - webauthn
      - yubikey_token
    AuthenticatorKeyExternalIdp:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyGoogleOtp:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyOktaVerify:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorKeyOktaVerify_allOf_settings'
        type: object
    AuthenticatorKeyOnprem:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyPassword:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyPhone:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorKeyPhone_allOf_settings'
        type: object
    AuthenticatorKeySecurityKey:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeySecurityQuestion:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorKeyPhone_allOf_settings'
        type: object
    AuthenticatorKeySmartCard:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeySymantecVip:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyWebauthn:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorKeyYubikey:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorSimple'
    AuthenticatorLinks:
      allOf:
      - $ref: '#/components/schemas/LinksSelfAndLifecycle'
      - properties:
          methods:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: Link to Authenticator methods
        type: object
    AuthenticatorMethodAlgorithm:
      type: string
      x-okta-known-values:
      - ES256
      - RS256
    AuthenticatorMethodBase:
      discriminator:
        mapping:
          sms: '#/components/schemas/AuthenticatorMethodSimple'
          voice: '#/components/schemas/AuthenticatorMethodSimple'
          email: '#/components/schemas/AuthenticatorMethodSimple'
          push: '#/components/schemas/AuthenticatorMethodPush'
          signed_nonce: '#/components/schemas/AuthenticatorMethodSignedNonce'
          totp: '#/components/schemas/AuthenticatorMethodTotp'
          otp: '#/components/schemas/AuthenticatorMethodOtp'
          password: '#/components/schemas/AuthenticatorMethodSimple'
          webauthn: '#/components/schemas/AuthenticatorMethodWebAuthn'
          security_question: '#/components/schemas/AuthenticatorMethodSimple'
          idp: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          duo: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          cert: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
        propertyName: type
      properties:
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          description: The type of authenticator method
          type: string
          x-okta-known-values:
          - cert
          - duo
          - email
          - idp
          - otp
          - password
          - push
          - security_question
          - signed_nonce
          - sms
          - totp
          - voice
          - webauthn
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      type: object
    AuthenticatorMethodConstraint:
      description: "Limits the authenticators that can be used for a given method.\
        \ Currently, only the `otp` method supports constraints, and Google authenticator\
        \ (key : 'google_otp') is the only allowed authenticator."
      properties:
        allowedAuthenticators:
          items:
            $ref: '#/components/schemas/AuthenticatorIdentity'
          type: array
        method:
          enum:
          - otp
          type: string
      type: object
    AuthenticatorMethodOtp:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
      - properties:
          acceptableAdjacentIntervals:
            description: "The number of acceptable adjacent intervals, also known\
              \ as the clock drift interval. This setting allows you to build in tolerance\
              \ for any time difference between the token and the server. For example,\
              \ with a `timeIntervalInSeconds` of 60 seconds and an `acceptableAdjacentIntervals`\
              \ value of 5, Okta accepts passcodes within 300 seconds (60 * 5) before\
              \ or after the end user enters their code."
            maximum: 10
            minimum: 0
            type: integer
          algorithm:
            $ref: '#/components/schemas/OtpTotpAlgorithm'
          encoding:
            $ref: '#/components/schemas/OtpTotpEncoding'
          factorProfileId:
            description: The `id` value of the factor profile
            example: aut1nd8PQhGcQtSxB0g4
            type: string
          passCodeLength:
            $ref: '#/components/schemas/OtpTotpPassCodeLength'
          protocol:
            $ref: '#/components/schemas/OtpProtocol'
          timeIntervalInSeconds:
            $ref: '#/components/schemas/OtpTotpTimeIntervalInSeconds'
        type: object
    AuthenticatorMethodProperty:
      type: string
      x-okta-known-values:
      - DEVICE_BOUND
      - HARDWARE_PROTECTED
      - PHISHING_RESISTANT
      - USER_PRESENCE
      - USER_VERIFYING
    AuthenticatorMethodPush:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorMethodPush_allOf_settings'
        type: object
    AuthenticatorMethodSignedNonce:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorMethodSignedNonce_allOf_settings'
        type: object
    AuthenticatorMethodSimple:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
    AuthenticatorMethodTotp:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorMethodTotp_allOf_settings'
        type: object
    AuthenticatorMethodTransactionType:
      type: string
      x-okta-known-values:
      - CIBA
      - LOGIN
    AuthenticatorMethodType:
      description: The type of authenticator method
      type: string
      x-okta-known-values:
      - cert
      - duo
      - email
      - idp
      - otp
      - password
      - push
      - security_question
      - signed_nonce
      - sms
      - totp
      - voice
      - webauthn
    AuthenticatorMethodWebAuthn:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
      - properties:
          settings:
            $ref: '#/components/schemas/AuthenticatorMethodWebAuthn_allOf_settings'
        type: object
    AuthenticatorMethodWithVerifiableProperties:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorMethodBase'
      - properties:
          verifiableProperties:
            items:
              $ref: '#/components/schemas/AuthenticatorMethodProperty'
            type: array
        type: object
    AuthenticatorSimple:
      allOf:
      - $ref: '#/components/schemas/AuthenticatorBase'
    AuthenticatorType:
      description: The type of Authenticator
      type: string
      x-okta-known-values:
      - app
      - email
      - federated
      - password
      - phone
      - security_key
      - security_question
    AuthorizationServer:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        credentials:
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: use
            kid: kid
            rotationMode: rotationMode
            lastRotated: 2000-01-23T04:56:07.000+00:00
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        audiences:
        - audiences
        - audiences
        description: description
        id: id
        issuer: issuer
        issuerMode: issuerMode
        status: status
      properties:
        audiences:
          description: The recipients that the tokens are intended for. This becomes
            the `aud` claim in an access token. Okta currently supports only one audience.
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        description:
          description: The description of the custom authorization server
          type: string
        id:
          description: The ID of the custom authorization server
          readOnly: true
          type: string
        issuer:
          description: The complete URL for the custom authorization server. This
            becomes the `iss` claim in an access token.
          type: string
        issuerMode:
          description: |-
            Indicates which value is specified in the issuer of the tokens that a custom authorization server returns: the Okta org domain URL or a custom domain URL.

            `issuerMode` is visible if you have a custom URL domain configured or the Dynamic Issuer Mode feature enabled. If you have a custom URL domain configured, you can set a custom domain URL in a custom authorization server, and this property is returned in the appropriate responses.

            When set to `ORG_URL`, then in responses, `issuer` is the Okta org domain URL: `https://${yourOktaDomain}`.

            When set to `CUSTOM_URL`, then in responses, `issuer` is the custom domain URL configured in the administration user interface.

            When set to `DYNAMIC`, then in responses, `issuer` is the custom domain URL if the OAuth 2.0 request was sent to the custom domain, or is the Okta org's domain URL if the OAuth 2.0 request was sent to the original Okta org domain.

            After you configure a custom URL domain, all new custom authorization servers use `CUSTOM_URL` by default. If the Dynamic Issuer Mode feature is enabled, then all new custom authorization servers use `DYNAMIC` by default. All existing custom authorization servers continue to use the original value until they're changed using the Admin Console or the API. This way, existing integrations with the client and resource server continue to work after the feature is enabled.
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the custom authorization server
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        _links:
          $ref: '#/components/schemas/AuthServerLinks'
      type: object
    AuthorizationServerCredentials:
      example:
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: use
          kid: kid
          rotationMode: rotationMode
          lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
      type: object
    AuthorizationServerCredentialsRotationMode:
      description: The Key rotation mode for the authorization server
      type: string
      x-okta-known-values:
      - AUTO
      - MANUAL
    AuthorizationServerCredentialsSigningConfig:
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        rotationMode: rotationMode
        lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        kid:
          description: The ID of the JSON Web Key used for signing tokens issued by
            the authorization server
          readOnly: true
          type: string
        lastRotated:
          description: The timestamp when the authorization server started using the
            `kid` for signing tokens
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          description: The timestamp when the authorization server changes the Key
            for signing tokens. This is only returned when `rotationMode` is set to
            `AUTO`.
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          description: The Key rotation mode for the authorization server
          type: string
          x-okta-known-values:
          - AUTO
          - MANUAL
        use:
          description: How the key is used
          type: string
          x-okta-known-values:
          - sig
      type: object
    AuthorizationServerCredentialsUse:
      description: How the key is used
      type: string
      x-okta-known-values:
      - sig
    AuthorizationServerJsonWebKey:
      example:
        kty: kty
        e: e
        _links:
          self: null
        use: use
        kid: kid
        alg: alg
        "n": "n"
        status: status
      properties:
        alg:
          description: "The algorithm used with the Key. Valid value: `RS256`"
          type: string
        e:
          description: RSA key value (public exponent) for Key binding
          readOnly: true
          type: string
        kid:
          description: Unique identifier for the key
          readOnly: true
          type: string
        kty:
          description: "Cryptographic algorithm family for the certificate's keypair.\
            \ Valid value: `RSA`"
          readOnly: true
          type: string
        "n":
          description: RSA modulus value that is used by both the public and private
            keys and provides a link between them
          type: string
        status:
          description: |-
            An `ACTIVE` Key is used to sign tokens issued by the authorization server. Supported values: `ACTIVE`, `NEXT`, or `EXPIRED`<br>
            A `NEXT` Key is the next Key that the authorization server uses to sign tokens when Keys are rotated. The `NEXT` Key might not be listed if it hasn't been generated.
            An `EXPIRED` Key is the previous Key that the authorization server used to sign tokens. The `EXPIRED` Key might not be listed if no Key has expired or the expired Key was deleted.
          type: string
        use:
          description: "Acceptable use of the key. Valid value: `sig`"
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    AuthorizationServerPolicy:
      allOf:
      - properties:
          conditions:
            $ref: '#/components/schemas/AuthorizationServerPolicyConditions'
        type: object
    AuthorizationServerPolicyConditions:
      properties:
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
      type: object
    AuthorizationServerPolicyPeopleCondition:
      description: Identifies Users and Groups that are used together
      properties:
        groups:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleGroupCondition'
        users:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleUserCondition'
      type: object
    AuthorizationServerPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
        type: object
    AuthorizationServerPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - properties:
          token:
            $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
        type: object
    AuthorizationServerPolicyRuleConditions:
      properties:
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        people:
          $ref: '#/components/schemas/AuthorizationServerPolicyPeopleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
      type: object
    AuthorizationServerPolicyRuleGroupCondition:
      description: Specifies a set of Groups whose Users are to be included
      properties:
        include:
          description: Groups to be included
          items:
            type: string
          type: array
      type: object
    AuthorizationServerPolicyRuleUserCondition:
      description: Specifies a set of Users to be included
      properties:
        include:
          description: Users to be included
          items:
            type: string
          type: array
      type: object
    AutoAssignAdminAppSetting:
      description: The org setting that automatically assigns the Okta Admin Console
        when an admin role is assigned
      properties:
        autoAssignAdminAppSetting:
          type: boolean
      type: object
    AutoLoginApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            description: A unique key is generated for the custom SWA app instance
              when you use AUTO_LOGIN `signOnMode`.
            readOnly: true
            type: string
          settings:
            $ref: '#/components/schemas/AutoLoginApplicationSettings'
        type: object
    AutoLoginApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          signOn:
            $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
        type: object
    AutoLoginApplicationSettingsSignOn:
      properties:
        loginUrl:
          description: Primary URL of the sign-in page for this app
          type: string
        redirectUrl:
          description: Secondary URL of the sign-in page for this app
          type: string
      type: object
    AutoUpdateSchedule:
      description: The schedule of auto-update configured by admin.
      example:
        cron: cron
        duration: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        delay: 0
        timezone: timezone
      properties:
        cron:
          type: string
        delay:
          description: delay in days
          type: integer
        duration:
          description: duration in minutes
          type: integer
        lastUpdated:
          description: "last time when the updated finished (success or failed, exclude\
            \ cancelled), null if job haven't finished once yet."
          format: date-time
          type: string
        timezone:
          type: string
      type: object
    AwsAccountId:
      description: Your AWS account ID
      example: "123456789012"
      maxLength: 12
      minLength: 12
      type: string
    AwsEventSourceName:
      description: An alphanumeric name (no spaces) to identify this event source
        in AWS EventBridge
      example: your-event-source-name
      maxLength: 75
      minLength: 1
      pattern: "^[a-zA-Z0-9.\\-_]$"
      type: string
    AwsRegion:
      description: The destination AWS region where your event source is located
      type: string
      x-okta-known-values:
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ca-central-1
      - eu-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - sa-east-1
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
    BaseEmailDomain:
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
      - displayName
      - userName
      type: object
    BaseEmailServer:
      properties:
        alias:
          description: Human-readable name for your SMTP server
          example: CustomServer1
          type: string
        enabled:
          description: "If `true`, routes all email traffic through your SMTP server"
          type: boolean
        host:
          description: Hostname or IP address of your SMTP server
          example: 192.168.160.1
          type: string
        port:
          description: Port number of your SMTP server
          example: 587
          type: integer
        username:
          description: Username used to access your SMTP server
          example: aUser
          type: string
      type: object
    BasicApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/BasicApplicationSettingsApplication'
        type: object
    BasicApplicationSettingsApplication:
      properties:
        authURL:
          type: string
        url:
          type: string
      type: object
    BasicAuthApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            description: '`template_basic_auth` is the key name for a basic authentication
              scheme app instance'
            enum:
            - template_basic_auth
            type: string
          settings:
            $ref: '#/components/schemas/BasicApplicationSettings'
        required:
        - name
        - settings
        type: object
      x-okta-defined-as:
        name: template_basic_auth
    BeforeScheduledActionPolicyRuleCondition:
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
      type: object
    BehaviorRule:
      discriminator:
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
        propertyName: type
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _link:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 128
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - ANOMALOUS_DEVICE
          - ANOMALOUS_IP
          - ANOMALOUS_LOCATION
          - VELOCITY
        _link:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - name
      - type
      title: Behavior Detection Rule
      type: object
    BehaviorRuleAnomalousDevice:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - properties:
          settings:
            $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousDevice'
        type: object
    BehaviorRuleAnomalousIP:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - properties:
          settings:
            $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP'
        type: object
    BehaviorRuleAnomalousLocation:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - properties:
          settings:
            $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation'
        type: object
    BehaviorRuleSettings:
      title: Behavior Detection Rule Settings
      type: object
    BehaviorRuleSettingsAnomalousDevice:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
    BehaviorRuleSettingsAnomalousIP:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
      - properties:
          maxEventsUsedForEvaluation:
            default: 50
            maximum: 100
            minimum: 0
            type: integer
        type: object
    BehaviorRuleSettingsAnomalousLocation:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
      - properties:
          granularity:
            $ref: '#/components/schemas/LocationGranularity'
          radiusKilometers:
            description: Required when `granularity` is `LAT_LONG`. Radius from the
              provided coordinates in kilometers.
            type: integer
        required:
        - granularity
        type: object
    BehaviorRuleSettingsHistoryBased:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettings'
      - properties:
          maxEventsUsedForEvaluation:
            default: 20
            maximum: 100
            minimum: 1
            type: integer
          minEventsNeededForEvaluation:
            default: 0
            maximum: 10
            minimum: 0
            type: integer
        title: Behavior Detection Rule Settings based on Event History
        type: object
    BehaviorRuleSettingsVelocity:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettings'
      - properties:
          velocityKph:
            default: 805
            minimum: 1
            type: integer
        required:
        - velocityKph
        title: Behavior Detection Rule Settings based on device velocity in kilometers
          per hour.
        type: object
    BehaviorRuleType:
      type: string
      x-okta-known-values:
      - ANOMALOUS_DEVICE
      - ANOMALOUS_IP
      - ANOMALOUS_LOCATION
      - VELOCITY
    BehaviorRuleVelocity:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - properties:
          settings:
            $ref: '#/components/schemas/BehaviorRuleSettingsVelocity'
        type: object
    BindingMethod:
      description: The method used to bind the out-of-band channel with the primary
        channel.
      type: string
      x-okta-known-values:
      - none
      - prompt
      - transfer
    BookmarkApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/ApplicationCredentials'
          name:
            description: '`bookmark` is the key name for a Bookmark app'
            enum:
            - bookmark
            type: string
          settings:
            $ref: '#/components/schemas/BookmarkApplicationSettings'
        required:
        - name
        - settings
        type: object
      x-okta-defined-as:
        name: bookmark
    BookmarkApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
        type: object
    BookmarkApplicationSettingsApplication:
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
      type: object
    BouncesRemoveListError:
      example:
        reason: reason
        emailAddress: emailAddress
      properties:
        emailAddress:
          type: string
        reason:
          type: string
      type: object
    BouncesRemoveListObj:
      example:
        emailAddresses:
        - emailAddresses
        - emailAddresses
      properties:
        emailAddresses:
          items:
            type: string
          type: array
      type: object
    BouncesRemoveListResult:
      example:
        errors:
        - reason: reason
          emailAddress: emailAddress
        - reason: reason
          emailAddress: emailAddress
      properties:
        errors:
          items:
            $ref: '#/components/schemas/BouncesRemoveListError'
          type: array
      type: object
    Brand:
      example:
        agreeToCustomPrivacyPolicy: true
        defaultApp:
          appInstanceId: appInstanceId
          appLinkName: appLinkName
          classicApplicationUri: classicApplicationUri
        isDefault: true
        removePoweredByOkta: false
        name: name
        id: id
        emailDomainId: emailDomainId
        locale: locale
        customPrivacyPolicyUrl: customPrivacyPolicyUrl
      properties:
        agreeToCustomPrivacyPolicy:
          description: Consent for updating the custom privacy URL. Not required when
            resetting the URL.
          type: boolean
        customPrivacyPolicyUrl:
          description: Custom privacy policy URL
          type: string
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          description: The ID of the email domain
          type: string
        id:
          description: The Brand ID
          readOnly: true
          type: string
        isDefault:
          description: "If `true`, the Brand is used for the Okta subdomain"
          readOnly: true
          type: boolean
        locale:
          description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)"
          type: string
        name:
          description: The name of the Brand
          type: string
        removePoweredByOkta:
          default: false
          description: "Removes \"Powered by Okta\" from the sign-in page in redirect\
            \ authentication deployments, and \"© [current year] Okta, Inc.\" from\
            \ the Okta End-User Dashboard"
          type: boolean
      type: object
    BrandDomains:
      items:
        $ref: '#/components/schemas/DomainResponse'
      title: BrandDomains
      type: array
    BrandRequest:
      example:
        agreeToCustomPrivacyPolicy: true
        defaultApp:
          appInstanceId: appInstanceId
          appLinkName: appLinkName
          classicApplicationUri: classicApplicationUri
        removePoweredByOkta: false
        name: name
        emailDomainId: emailDomainId
        locale: locale
        customPrivacyPolicyUrl: customPrivacyPolicyUrl
      properties:
        agreeToCustomPrivacyPolicy:
          description: Consent for updating the custom privacy URL. Not required when
            resetting the URL.
          type: boolean
        customPrivacyPolicyUrl:
          description: Custom privacy policy URL
          type: string
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          description: The ID of the email domain
          type: string
        locale:
          description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)"
          type: string
        name:
          description: The name of the Brand
          type: string
        removePoweredByOkta:
          default: false
          description: "Removes \"Powered by Okta\" from the sign-in page in redirect\
            \ authentication deployments, and \"© [current year] Okta, Inc.\" from\
            \ the Okta End-User Dashboard"
          type: boolean
      required:
      - name
      type: object
    BrandWithEmbedded:
      allOf:
      - $ref: '#/components/schemas/Brand'
      example:
        _embedded: "{}"
        _links: ""
      properties:
        _embedded:
          properties:
            themes:
              items:
                $ref: '#/components/schemas/ThemeResponse'
              type: array
            domains:
              items:
                $ref: '#/components/schemas/DomainResponse'
              type: array
            emailDomain:
              $ref: '#/components/schemas/EmailDomainResponse'
          readOnly: true
          type: object
        _links:
          allOf:
          - $ref: '#/components/schemas/LinksSelf'
          - properties:
              themes:
                $ref: '#/components/schemas/HrefObject'
      type: object
    BrowserPluginApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            description: The key name for the app definition
            enum:
            - template_swa
            - template_swa3field
            type: string
            x-enumDescriptions:
              template_swa: The key name for a SWA app instance that requires a browser
                plugin
              template_swa3field: The key name for a SWA app instance that requires
                a browser plugin and supports three CSS selectors
          settings:
            $ref: '#/components/schemas/SwaApplicationSettings'
        required:
        - name
        - settings
        type: object
    BulkDeleteRequestBody:
      example:
        entityType: USERS
        profiles:
        - externalId: externalId
        - externalId: externalId
      properties:
        entityType:
          enum:
          - USERS
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/IdentitySourceUserProfileForDelete'
          type: array
      type: object
    BulkUpsertRequestBody:
      example:
        entityType: USERS
        profiles:
        - firstName: firstName
          lastName: lastName
          mobilePhone: mobilePhone
          secondEmail: secondEmail
          userName: userName
          email: email
          homeAddress: homeAddress
        - firstName: firstName
          lastName: lastName
          mobilePhone: mobilePhone
          secondEmail: secondEmail
          userName: userName
          email: email
          homeAddress: homeAddress
      properties:
        entityType:
          enum:
          - USERS
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/IdentitySourceUserProfileForUpsert'
          type: array
      type: object
    BundleEntitlement:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        role:
          type: string
        _links:
          $ref: '#/components/schemas/BundleEntitlement__links'
      type: object
    BundleEntitlementsResponse:
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/BundleEntitlement'
          type: array
        _links:
          $ref: '#/components/schemas/BundleEntitlementsResponse__links'
      type: object
    CAPTCHAInstance:
      description: ""
      example:
        siteKey: siteKey
        secretKey: secretKey
        _links:
          self: null
        name: name
        id: id
        type: type
      properties:
        id:
          description: The unique key for the CAPTCHA instance
          readOnly: true
          type: string
        name:
          description: The name of the CAPTCHA instance
          type: string
        secretKey:
          description: The secret key issued from the CAPTCHA provider to perform
            server-side validation for a CAPTCHA token
          type: string
          writeOnly: true
        siteKey:
          description: The site key issued from the CAPTCHA provider to render a CAPTCHA
            on a page
          type: string
        type:
          description: The type of CAPTCHA provider
          type: string
          x-okta-known-values:
          - HCAPTCHA
          - RECAPTCHA_V2
        _links:
          $ref: '#/components/schemas/LinksSelf'
      title: CAPTCHAInstance
      type: object
    CAPTCHAType:
      description: The type of CAPTCHA provider
      type: string
      x-okta-known-values:
      - HCAPTCHA
      - RECAPTCHA_V2
    CaepDeviceComplianceChangeEvent:
      description: The subject's device compliance was revoked
      properties:
        current_status:
          description: Current device compliance status
          enum:
          - compliant
          - not-compliant
          example: non-compliant
          type: string
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        previous_status:
          description: Previous device compliance status
          enum:
          - compliant
          - not-compliant
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - current_status
      - event_timestamp
      - previous_status
      - subjects
      type: object
    CaepSecurityEvent:
      properties:
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - event_timestamp
      - subjects
      type: object
    CaepSessionRevokedEvent:
      description: The session of the subject was revoked
      properties:
        current_ip:
          description: Current IP of the session
          example: 123.4.5.6
          type: string
        current_user_agent:
          description: Current User Agent of the session
          example: CurrentUserAgent
          type: string
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        last_known_ip:
          description: Last known IP of the session
          example: 123.4.5.6
          type: string
        last_known_user_agent:
          description: Last known User Agent of the session
          example: LastUserAgent
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - event_timestamp
      - subjects
      type: object
    CapabilitiesCreateObject:
      description: |
        Determines whether Okta assigns a new application account to each user managed by Okta.

        Okta doesn't create a new account if it detects that the username specified in Okta already exists in the application.
        The user's Okta username is assigned by default.
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
      type: object
    CapabilitiesImportRulesObject:
      description: Defines user import rules
      properties:
        userCreateAndMatch:
          $ref: '#/components/schemas/CapabilitiesImportRulesUserCreateAndMatchObject'
      type: object
    CapabilitiesImportRulesUserCreateAndMatchObject:
      description: Rules for matching and creating users
      properties:
        allowPartialMatch:
          description: "Allows user import upon partial matching. Partial matching\
            \ occurs when the first and last names of an imported user match those\
            \ of an existing Okta user, even if the username or email attributes don't\
            \ match."
          type: boolean
        autoActivateNewUsers:
          description: "If set to `true`, imported new users are automatically activated."
          type: boolean
        autoConfirmExactMatch:
          description: "If set to `true`, exact-matched users are automatically confirmed\
            \ on activation. If set to `false`, exact-matched users need to be confirmed\
            \ manually."
          type: boolean
        autoConfirmNewUsers:
          description: "If set to `true`, imported new users are automatically confirmed\
            \ on activation. This doesn't apply to imported users that already exist\
            \ in Okta."
          type: boolean
        autoConfirmPartialMatch:
          description: "If set to `true`, partially matched users are automatically\
            \ confirmed on activation. If set to `false`, partially matched users\
            \ need to be confirmed manually."
          type: boolean
        exactMatchCriteria:
          description: Determines the attribute to match users
          enum:
          - EMAIL
          - USERNAME
          type: string
      type: object
    CapabilitiesImportSettingsObject:
      description: Defines import settings
      properties:
        schedule:
          $ref: '#/components/schemas/ImportScheduleObject'
        username:
          $ref: '#/components/schemas/ImportUsernameObject'
      type: object
    CapabilitiesInboundProvisioningObject:
      description: Defines the configuration for the INBOUND_PROVISIONING feature
      properties:
        importRules:
          $ref: '#/components/schemas/CapabilitiesImportRulesObject'
        importSettings:
          $ref: '#/components/schemas/CapabilitiesImportSettingsObject'
      required:
      - importRules
      - importSettings
      title: INBOUND_PROVISIONING
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    CapabilitiesObject:
      description: Defines the configurations for the USER_PROVISIONING feature
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
      title: USER_PROVISIONING
      type: object
    CapabilitiesUpdateObject:
      description: Determines whether updates to a user's profile are pushed to the
        application
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
      type: object
    CatalogApplication:
      example:
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        website: website
        verificationStatus: verificationStatus
        _links:
          self: null
        displayName: displayName
        name: name
        description: description
        id: id
        category: category
        signOnModes:
        - signOnModes
        - signOnModes
        status: status
      properties:
        category:
          type: string
        description:
          type: string
        displayName:
          type: string
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        signOnModes:
          items:
            type: string
          type: array
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        verificationStatus:
          type: string
        website:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    CatalogApplicationStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    ChallengeType:
      type: string
      x-okta-known-values:
      - http://auth0.com/oauth/grant-type/mfa-oob
      - http://auth0.com/oauth/grant-type/mfa-otp
    ChangeEnum:
      default: KEEP_EXISTING
      description: Determines whether a change in a user's password also updates the
        user's password in the application
      example: CHANGE
      type: string
      x-okta-known-values:
      - CHANGE
      - KEEP_EXISTING
    ChangePasswordRequest:
      example:
        oldPassword:
          hook:
            type: type
          value: value
          hash:
            iterationCount: 0
            salt: salt
            keySize: 6
            saltOrder: saltOrder
            workFactor: 3
            digestAlgorithm: digestAlgorithm
            value: value
            algorithm: algorithm
        newPassword:
          hook:
            type: type
          value: value
          hash:
            iterationCount: 0
            salt: salt
            keySize: 6
            saltOrder: saltOrder
            workFactor: 3
            digestAlgorithm: digestAlgorithm
            value: value
            algorithm: algorithm
        revokeSessions: true
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
        revokeSessions:
          type: boolean
      type: object
    Channel:
      description: The out-of-band channel for use with authentication. Required for
        all `/oob-authenticate` requests and any `/challenge` request with an out-of-band
        authenticator.
      type: string
      x-okta-known-values:
      - push
      - sms
      - voice
    ChannelBinding:
      properties:
        required:
          type: string
          x-okta-known-values:
          - ALWAYS
          - HIGH_RISK_ONLY
          - NEVER
        style:
          enum:
          - NUMBER_CHALLENGE
          type: string
      type: object
    ChromeBrowserVersion:
      description: Current version of the Chrome Browser
      properties:
        minimum:
          type: string
      type: object
    Claim:
      type: string
    Client:
      example:
        post_logout_redirect_uris:
        - post_logout_redirect_uris
        - post_logout_redirect_uris
        grant_types:
        - null
        - null
        application_type: application_type
        initiate_login_uri: initiate_login_uri
        logo_uri: logo_uri
        redirect_uris:
        - redirect_uris
        - redirect_uris
        client_id: client_id
        token_endpoint_auth_method: token_endpoint_auth_method
        frontchannel_logout_session_required: true
        frontchannel_logout_uri: frontchannel_logout_uri
        client_secret_expires_at: 0
        jwks_uri: jwks_uri
        client_id_issued_at: 0
        client_secret: client_secret
        request_object_signing_alg:
        - null
        - null
        tos_uri: tos_uri
        client_name: client_name
        policy_uri: policy_uri
        response_types:
        - null
        - null
      properties:
        application_type:
          description: "The type of client application. Default value: `web`."
          type: string
          x-okta-known-values:
          - browser
          - native
          - service
          - web
        client_id:
          description: "Unique key for the client application. The `client_id` is\
            \ immutable. When you create a client Application, you can't specify the\
            \ `client_id` because Okta uses the application ID for the `client_id`."
          readOnly: true
          type: string
        client_id_issued_at:
          description: Time at which the `client_id` was issued (measured in unix
            seconds)
          readOnly: true
          type: integer
        client_name:
          description: Human-readable string name of the client application
          type: string
        client_secret:
          description: "OAuth 2.0 client secret string (used for confidential clients).\
            \ The `client_secret` is shown only on the response of the creation or\
            \ update of a client Application (and only if the `token_endpoint_auth_method`\
            \ is one that requires a client secret). You can't specify the `client_secret`.\
            \ If the `token_endpoint_auth_method` requires one, Okta generates a random\
            \ `client_secret` for the client Application."
          nullable: true
          readOnly: true
          type: string
        client_secret_expires_at:
          description: Time at which the `client_secret` expires or 0 if it doesn't
            expire (measured in unix seconds)
          minimum: 0
          nullable: true
          readOnly: true
          type: integer
        frontchannel_logout_session_required:
          description: Include user session details
          type: boolean
        frontchannel_logout_uri:
          description: URL where Okta sends the logout request
          nullable: true
          type: string
        grant_types:
          description: "Array of OAuth 2.0 grant type strings. Default value: `[authorization_code]`"
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        initiate_login_uri:
          description: URL that a third party can use to initiate a login by the client
          type: string
        jwks_uri:
          description: "URL string that references a [JSON Web Key Set](https://tools.ietf.org/html/rfc7517#section-5)\
            \ for validating JWTs presented to Okta"
          type: string
        logo_uri:
          description: URL string that references a logo for the client consent dialog
            (not the sign-in dialog)
          nullable: true
          type: string
        policy_uri:
          description: URL string of a web page providing the client's policy document
          nullable: true
          type: string
        post_logout_redirect_uris:
          description: Array of redirection URI strings for use for relying party
            initiated logouts
          items:
            type: string
          type: array
        redirect_uris:
          description: "Array of redirection URI strings for use in redirect-based\
            \ flows. All redirect URIs must be absolute URIs and must not include\
            \ a fragment component. At least one redirect URI and response type is\
            \ required for all client types, with the following exceptions: If the\
            \ client uses the Resource Owner Password flow (if `grant_type` contains\
            \ the value password) or the Client Credentials flow (if `grant_type`\
            \ contains the value `client_credentials`), then no redirect URI or response\
            \ type is necessary. In these cases, you can pass either null or an empty\
            \ array for these attributes."
          items:
            type: string
          type: array
        request_object_signing_alg:
          description: "The type of [JSON Web Key Set](https://tools.ietf.org/html/rfc7517#section-5)\
            \ algorithm that must be used for signing request objects"
          items:
            $ref: '#/components/schemas/SigningAlgorithm'
          type: array
        response_types:
          description: "Array of OAuth 2.0 response type strings. Default value: `[code]`"
          items:
            $ref: '#/components/schemas/ResponseType'
          type: array
        token_endpoint_auth_method:
          description: Requested authentication method for OAuth 2.0 endpoints.
          type: string
          x-okta-known-values:
          - client_secret_basic
          - client_secret_jwt
          - client_secret_post
          - none
          - private_key_jwt
        tos_uri:
          description: URL string of a web page providing the client's terms of service
            document
          nullable: true
          type: string
      type: object
    ClientPolicyCondition:
      description: Specifies which clients are included in the Policy
      properties:
        include:
          description: Which clients are included in the Policy
          items:
            type: string
          type: array
      type: object
    ClientPrivilegesSetting:
      description: The org setting that assigns the super admin role by default to
        a public client app
      example:
        clientPrivilegesSetting: true
      properties:
        clientPrivilegesSetting:
          type: boolean
      type: object
    CodeChallengeMethod:
      type: string
      x-okta-known-values:
      - S256
    Compliance:
      properties:
        fips:
          type: string
          x-okta-known-values:
          - OPTIONAL
          - REQUIRED
      type: object
    Conditions:
      example:
        expression:
          value: value
        profileSourceId: profileSourceId
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
        profileSourceId:
          type: string
      type: object
    ContentSecurityPolicySetting:
      properties:
        mode:
          enum:
          - enforced
          - report_only
          type: string
        reportUri:
          type: string
        srcList:
          items:
            type: string
          type: array
      type: object
    ContextPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - properties:
          expression:
            type: string
        type: object
    ContinuousAccessFailureActionsObject:
      discriminator:
        mapping:
          RUN_WORKFLOW: '#/components/schemas/ContinuousAccessPolicyRuleRunWorkflow'
          TERMINATE_SESSION: '#/components/schemas/ContinuousAccessPolicyRuleTerminateSession'
        propertyName: action
      properties:
        action:
          enum:
          - RUN_WORKFLOW
          - TERMINATE_SESSION
          type: string
      type: object
    ContinuousAccessPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            description: Policy conditions aren't supported for this policy type.
            nullable: true
            type: string
        type: object
    ContinuousAccessPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/ContinuousAccessPolicyRule_allOf_actions'
          conditions:
            $ref: '#/components/schemas/ContinuousAccessPolicyRule_allOf_conditions'
        type: object
    ContinuousAccessPolicyRuleRunWorkflow:
      properties:
        action:
          enum:
          - RUN_WORKFLOW
          type: string
        workflow:
          $ref: '#/components/schemas/ContinuousAccessPolicyRuleRunWorkflow_workflow'
      type: object
    ContinuousAccessPolicyRuleTerminateSession:
      properties:
        action:
          description: The action to take when Continuous Access evaluation detects
            a failure.
          enum:
          - TERMINATE_SESSION
          type: string
        slo:
          $ref: '#/components/schemas/ContinuousAccessPolicyRuleTerminateSession_slo'
      type: object
    CreateBrandRequest:
      example:
        name: name
      properties:
        name:
          description: The name of the Brand
          type: string
      required:
      - name
      title: CreateBrandRequest
      type: object
    CreateIamRoleRequest:
      example:
        permissions:
        - null
        - null
        description: description
        label: label
      properties:
        description:
          description: Description of the role
          type: string
        label:
          description: Unique label for the role
          type: string
        permissions:
          description: "Array of permissions that the role will grant. See [Permissions](/openapi/okta-management/guides/roles/#permission)."
          items:
            $ref: '#/components/schemas/RolePermissionType'
          type: array
      required:
      - description
      - label
      - permissions
      type: object
    CreateRealmAssignmentRequest:
      example:
        name: name
        conditions:
          expression:
            value: value
          profileSourceId: profileSourceId
        priority: 0
        actions:
          assignUserToRealm:
            realmId: realmId
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        name:
          type: string
        priority:
          type: integer
      type: object
    CreateRealmRequest:
      example:
        profile:
          realmType: PARTNER
          name: name
      properties:
        profile:
          $ref: '#/components/schemas/RealmProfile'
      type: object
    CreateResourceSetRequest:
      example:
        description: description
        resources:
        - resources
        - resources
        label: label
      properties:
        description:
          description: Description of the Resource Set
          type: string
        label:
          description: Unique name for the Resource Set
          type: string
        resources:
          description: "The endpoint (URL) that references all resource objects included\
            \ in the Resource Set. Resources are identified by either an Okta Resource\
            \ Name (ORN) or by a REST URL format. See [Okta Resource Name](/openapi/okta-management/guides/roles/#okta-resource-name-orn)."
          items:
            type: string
          maximum: 1000
          type: array
      type: object
    CreateSessionRequest:
      example:
        sessionToken: sessionToken
      properties:
        sessionToken:
          description: The session token obtained during authentication
          type: string
      type: object
    CreateUISchema:
      description: The request body properties for the new UI Schema
      example:
        uiSchema:
          elements:
            scope: scope
            options:
              format: text
            label: label
            type: type
          label: Sign in
          type: type
          buttonLabel: Submit
      properties:
        uiSchema:
          $ref: '#/components/schemas/UISchemaObject'
      type: object
    CreateUpdateIamRolePermissionRequest:
      example:
        conditions: "{}"
      properties:
        conditions:
          description: Conditions for further restricting a permission
          nullable: true
          type: object
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
      type: object
    CreateUserRequest:
      example:
        realmId: guo1bfiNtSnZYILxO0g4
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              iterationCount: 0
              salt: salt
              keySize: 6
              saltOrder: saltOrder
              workFactor: 3
              digestAlgorithm: digestAlgorithm
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        groupIds:
        - groupIds
        - groupIds
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          id: id
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          items:
            type: string
          type: array
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>The
            ID of the Realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          type: string
          x-okta-lifecycle:
            lifecycle: EA
            isGenerallyAvailable: false
            SKUs: []
        type:
          $ref: '#/components/schemas/CreateUserRequest_type'
      required:
      - profile
      type: object
    CredentialSyncState:
      description: Current credential sync status of the privileged resource
      readOnly: true
      type: string
      x-enumDescriptions:
        NOT_SYNCED: Credentials are not yet synced
        SYNCING: Credentials are currently being synced
        SYNCED: Credentials are successfully synced
        SYNC_FAILED: Credential sync failed
      x-okta-known-values:
      - NOT_SYNCED
      - SYNCED
      - SYNCING
      - SYNC_FAILED
    Csr:
      example:
        kty: kty
        csr: csr
        created: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        csr:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        kty:
          readOnly: true
          type: string
      type: object
    CsrMetadata:
      example:
        subject:
          commonName: commonName
          localityName: localityName
          organizationName: organizationName
          organizationalUnitName: organizationalUnitName
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        subjectAltNames:
          dnsNames:
          - dnsNames
          - dnsNames
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      type: object
    CsrMetadataSubject:
      example:
        commonName: commonName
        localityName: localityName
        organizationName: organizationName
        organizationalUnitName: organizationalUnitName
        countryName: countryName
        stateOrProvinceName: stateOrProvinceName
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationalUnitName:
          type: string
        organizationName:
          type: string
        stateOrProvinceName:
          type: string
      type: object
    CsrMetadataSubjectAltNames:
      example:
        dnsNames:
        - dnsNames
        - dnsNames
      properties:
        dnsNames:
          items:
            type: string
          type: array
      type: object
    CustomAppUserVerificationEnum:
      description: User verification setting
      type: string
      x-okta-known-values:
      - PREFERRED
      - REQUIRED
    CustomRoleAssignmentSchema:
      properties:
        resource-set:
          description: Resource Set ID
          type: string
        role:
          description: Custom Role ID
          type: string
        type:
          description: Standard role type
          enum:
          - CUSTOM
          type: string
      type: object
    CustomizablePage:
      example:
        pageContent: pageContent
      properties:
        pageContent:
          description: The HTML for the page
          type: string
      type: object
    DNSRecord:
      description: DNS TXT and CNAME records to be registered for the Domain
      example:
        fqdn: _oktaverification.login.example.com
        recordType: TXT
        values:
        - 79496f234c814638b1cc44f51a782781
        expiration: expiration
      properties:
        expiration:
          description: DNS TXT record expiration
          type: string
        fqdn:
          description: DNS record name
          example: _oktaverification.login.example.com
          type: string
        recordType:
          example: TXT
          type: string
          x-okta-known-values:
          - CNAME
          - TXT
        values:
          description: DNS record value
          example:
          - 79496f234c814638b1cc44f51a782781
          items:
            type: string
          type: array
      type: object
    DNSRecordType:
      example: TXT
      type: string
      x-okta-known-values:
      - CNAME
      - TXT
    DTCChromeOS:
      description: Google Chrome Device Trust Connector provider
      properties:
        allowScreenLock:
          description: Indicates whether the AllowScreenLock enterprise policy is
            enabled
          type: boolean
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the
            DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application
            is blocked through a policy
          type: boolean
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing
            the device
          type: string
        diskEncrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          description: Represents the attestation strength used by the Chrome Verified
            Access API
          example: CHROME_OS_VERIFIED_MODE
          type: string
          x-enumDescriptions:
            CHROME_OS_VERIFIED_MODE: "Identity of the device was attested using an\
              \ enterprise-emitted certificate, and the device is in Verified mode"
            CHROME_OS_DEVELOPER_MODE: "Identity of the device was attested using an\
              \ enterprise-emitted certificate, and the device is in Developer mode"
          x-okta-known-values:
          - CHROME_OS_DEVELOPER_MODE
          - CHROME_OS_VERIFIED_MODE
        managedDevice:
          description: Indicates whether the device is enrolled in ChromeOS device
            management
          type: boolean
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on
            the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersionFourComponents'
        passwordProtectionWarningTrigger:
          description: Indicates whether the Password Protection Warning feature is
            enabled
          example: PHISHING_REUSE
          type: string
          x-enumDescriptions:
            PASSWORD_PROTECTION_OFF: Password protection warning is off
            PASSWORD_REUSE: Password protection warning is triggered by password reuse
            PHISHING_REUSE: Password protection warning is triggered by password reuse
              on a phishing page
          x-okta-known-values:
          - PASSWORD_PROTECTION_OFF
          - PASSWORD_REUSE
          - PHISHING_REUSE
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning
            is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          description: Represents the current value of the Safe Browsing protection
            level
          example: ENHANCED_PROTECTION
          type: string
          x-enumDescriptions:
            NO_SAFE_BROWSING: Safe Browsing is never active
            STANDARD_PROTECTION: Safe Browsing is active in the standard mode
            ENHANCED_PROTECTION: Safe Browsing is active in the enhanced mode
          x-okta-known-values:
          - ENHANCED_PROTECTION
          - NO_SAFE_BROWSING
          - STANDARD_PROTECTION
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site
            Per Process**) setting is enabled
          type: boolean
      type: object
    DTCMacOS:
      description: Google Chrome Device Trust Connector provider
      properties:
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the
            DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application
            is blocked through a policy
          type: boolean
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing
            the device
          type: string
        diskEncrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          description: Represents the attestation strength used by the Chrome Verified
            Access API
          example: CHROME_BROWSER_HW_KEY
          type: string
          x-enumDescriptions:
            CHROME_BROWSER_HW_KEY: Identity of the device was attested using a key
              pair that is OS encapsulated by a hardware layer
            CHROME_BROWSER_OS_KEY: Identity of the device was attested using a key
              pair that is simply stored on the device but not in any specific hardware
              layer
          x-okta-known-values:
          - CHROME_BROWSER_HW_KEY
          - CHROME_BROWSER_OS_KEY
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on
            the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersionThreeComponents'
        passwordProtectionWarningTrigger:
          description: Indicates whether the Password Protection Warning feature is
            enabled
          example: PHISHING_REUSE
          type: string
          x-enumDescriptions:
            PASSWORD_PROTECTION_OFF: Password protection warning is off
            PASSWORD_REUSE: Password protection warning is triggered by password reuse
            PHISHING_REUSE: Password protection warning is triggered by password reuse
              on a phishing page
          x-okta-known-values:
          - PASSWORD_PROTECTION_OFF
          - PASSWORD_REUSE
          - PHISHING_REUSE
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning
            is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          description: Represents the current value of the Safe Browsing protection
            level
          example: ENHANCED_PROTECTION
          type: string
          x-enumDescriptions:
            NO_SAFE_BROWSING: Safe Browsing is never active
            STANDARD_PROTECTION: Safe Browsing is active in the standard mode
            ENHANCED_PROTECTION: Safe Browsing is active in the enhanced mode
          x-okta-known-values:
          - ENHANCED_PROTECTION
          - NO_SAFE_BROWSING
          - STANDARD_PROTECTION
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site
            Per Process**) setting is enabled
          type: boolean
      type: object
    DTCWindows:
      description: Google Chrome Device Trust Connector provider
      properties:
        browserVersion:
          $ref: '#/components/schemas/ChromeBrowserVersion'
        builtInDnsClientEnabled:
          description: Indicates if a software stack is used to communicate with the
            DNS server
          type: boolean
        chromeRemoteDesktopAppBlocked:
          description: Indicates whether access to the Chrome Remote Desktop application
            is blocked through a policy
          type: boolean
        crowdStrikeAgentId:
          description: Agent ID of an installed CrowdStrike agent
          type: string
        crowdStrikeCustomerId:
          description: Customer ID of an installed CrowdStrike agent
          type: string
        deviceEnrollmentDomain:
          description: Enrollment domain of the customer that is currently managing
            the device
          type: string
        diskEncrypted:
          description: Indicates whether the main disk is encrypted
          type: boolean
        keyTrustLevel:
          description: Represents the attestation strength used by the Chrome Verified
            Access API
          example: CHROME_BROWSER_HW_KEY
          type: string
          x-enumDescriptions:
            CHROME_BROWSER_HW_KEY: Identity of the device was attested using a key
              pair that is OS encapsulated by a hardware layer
            CHROME_BROWSER_OS_KEY: Identity of the device was attested using a key
              pair that is simply stored on the device but not in any specific hardware
              layer
          x-okta-known-values:
          - CHROME_BROWSER_HW_KEY
          - CHROME_BROWSER_OS_KEY
        osFirewall:
          description: Indicates whether a firewall is enabled at the OS-level on
            the device
          type: boolean
        osVersion:
          $ref: '#/components/schemas/OSVersionFourComponents'
        passwordProtectionWarningTrigger:
          description: Indicates whether the Password Protection Warning feature is
            enabled
          example: PHISHING_REUSE
          type: string
          x-enumDescriptions:
            PASSWORD_PROTECTION_OFF: Password protection warning is off
            PASSWORD_REUSE: Password protection warning is triggered by password reuse
            PHISHING_REUSE: Password protection warning is triggered by password reuse
              on a phishing page
          x-okta-known-values:
          - PASSWORD_PROTECTION_OFF
          - PASSWORD_REUSE
          - PHISHING_REUSE
        realtimeUrlCheckMode:
          description: Indicates whether enterprise-grade (custom) unsafe URL scanning
            is enabled
          type: boolean
        safeBrowsingProtectionLevel:
          description: Represents the current value of the Safe Browsing protection
            level
          example: ENHANCED_PROTECTION
          type: string
          x-enumDescriptions:
            NO_SAFE_BROWSING: Safe Browsing is never active
            STANDARD_PROTECTION: Safe Browsing is active in the standard mode
            ENHANCED_PROTECTION: Safe Browsing is active in the enhanced mode
          x-okta-known-values:
          - ENHANCED_PROTECTION
          - NO_SAFE_BROWSING
          - STANDARD_PROTECTION
        screenLockSecured:
          description: Indicates whether the device is password-protected
          type: boolean
        secureBootEnabled:
          description: Indicates whether the device's startup software has its Secure
            Boot feature enabled
          type: boolean
        siteIsolationEnabled:
          description: Indicates whether the Site Isolation (also known as **Site
            Per Process**) setting is enabled
          type: boolean
        thirdPartyBlockingEnabled:
          description: Indicates whether Chrome is blocking third-party software injection
          type: boolean
        windowsMachineDomain:
          description: Windows domain that the current machine has joined
          type: string
        windowsUserDomain:
          description: Windows domain for the current OS user
          type: string
      type: object
    DefaultApp:
      example:
        appInstanceId: appInstanceId
        appLinkName: appLinkName
        classicApplicationUri: classicApplicationUri
      properties:
        appInstanceId:
          description: ID for the App instance
          type: string
        appLinkName:
          description: Name for the app instance
          type: string
        classicApplicationUri:
          description: Application URI for classic Orgs
          type: string
      type: object
    DetectedRiskEvents:
      type: string
      x-okta-known-values:
      - ADMIN_REPORTED_USER_RISK
      - BRUTE_FORCE_ATTACK
      - ENTITY_CRITICAL_ACTION_FROM_HIGH_THREAT_IP
      - OKTA_THREAT_INTELLIGENCE
      - SECURITY_EVENTS_PROVIDER_REPORTED_RISK
      - SESSION_INFLUENCED_USER_RISK
      - SUSPICIOUS_APP_ACCESS
      - USER_REPORTED_SUSPICIOUS_ACTIVITY
    Device:
      example:
        resourceAlternateId: resourceAlternateId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        resourceDisplayName:
          sensitive: true
          value: value
        resourceId: resourceId
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          meid: meid
          serialNumber: serialNumber
          displayName: displayName
          registered: true
          integrityJailbreak: true
          platform: platform
          manufacturer: manufacturer
          sid: sid
          osVersion: osVersion
          imei: imei
          diskEncryptionType: diskEncryptionType
          model: model
          udid: udid
          secureHardwarePresent: true
          tpmPublicKeyHash: tpmPublicKeyHash
        id: id
        resourceType: UDDevice
        status: status
      properties:
        created:
          description: Timestamp when the device was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique key for the device
          readOnly: true
          type: string
        lastUpdated:
          description: "Timestamp when the device record was last updated. Updates\
            \ occur when Okta collects and saves device signals during authentication,\
            \ and when the lifecycle state of the device changes."
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/DeviceProfile'
        resourceAlternateId:
          readOnly: true
          type: string
        resourceDisplayName:
          $ref: '#/components/schemas/DeviceDisplayName'
        resourceId:
          description: Alternate key for the `id`
          readOnly: true
          type: string
        resourceType:
          default: UDDevice
          readOnly: true
          type: string
        status:
          description: The state object of the device
          type: string
          x-enumDescriptions:
            ACTIVE: Use activated devices to create and delete Device user links
            DEACTIVATED: Deactivation causes a Device to lose all device user links.
              Set the Device status to DEACTIVATED before deleting it.
            SUSPENDED: Use suspended devices to create and delete device user links.
              You can only unsuspend or deactivate suspended devices.
            UNSUSPENDED: Returns a suspended Device to ACTIVE.
          x-okta-known-values:
          - ACTIVE
          - DEACTIVATED
          - SUSPENDED
          - UNSUSPENDED
        _links:
          $ref: '#/components/schemas/LinksSelfAndFullUsersLifecycle'
      type: object
    DeviceAccessPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - properties:
          assurance:
            $ref: '#/components/schemas/DevicePolicyRuleConditionAssurance'
          managed:
            type: boolean
          registered:
            type: boolean
        type: object
    DeviceAssurance:
      discriminator:
        mapping:
          WINDOWS: '#/components/schemas/DeviceAssuranceWindowsPlatform'
          MACOS: '#/components/schemas/DeviceAssuranceMacOSPlatform'
          CHROMEOS: '#/components/schemas/DeviceAssuranceChromeOSPlatform'
          IOS: '#/components/schemas/DeviceAssuranceIOSPlatform'
          ANDROID: '#/components/schemas/DeviceAssuranceAndroidPlatform'
        propertyName: platform
      properties:
        createdBy:
          readOnly: true
          type: string
        createdDate:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdate:
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          description: Display name of the Device Assurance Policy
          type: string
        platform:
          type: string
          x-okta-known-values:
          - ANDROID
          - CHROMEOS
          - IOS
          - MACOS
          - WINDOWS
        _links:
          $ref: '#/components/schemas/LinksSelf'
      title: DeviceAssurance
      type: object
    DeviceAssuranceAndroidPlatform:
      allOf:
      - $ref: '#/components/schemas/DeviceAssurance'
      - properties:
          diskEncryptionType:
            $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform_allOf_diskEncryptionType'
          jailbreak:
            type: boolean
          osVersion:
            $ref: '#/components/schemas/OSVersion'
          screenLockType:
            $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform_allOf_screenLockType'
          secureHardwarePresent:
            type: boolean
        type: object
    DeviceAssuranceChromeOSPlatform:
      allOf:
      - $ref: '#/components/schemas/DeviceAssurance'
      - properties:
          thirdPartySignalProviders:
            $ref: '#/components/schemas/DeviceAssuranceChromeOSPlatform_allOf_thirdPartySignalProviders'
        type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    DeviceAssuranceIOSPlatform:
      allOf:
      - $ref: '#/components/schemas/DeviceAssurance'
      - properties:
          jailbreak:
            type: boolean
          osVersion:
            $ref: '#/components/schemas/OSVersion'
          screenLockType:
            $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform_allOf_screenLockType'
        type: object
    DeviceAssuranceMacOSPlatform:
      allOf:
      - $ref: '#/components/schemas/DeviceAssurance'
      - properties:
          diskEncryptionType:
            $ref: '#/components/schemas/DeviceAssuranceMacOSPlatform_allOf_diskEncryptionType'
          osVersion:
            $ref: '#/components/schemas/OSVersion'
          screenLockType:
            $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform_allOf_screenLockType'
          secureHardwarePresent:
            type: boolean
          thirdPartySignalProviders:
            $ref: '#/components/schemas/DeviceAssuranceMacOSPlatform_allOf_thirdPartySignalProviders'
        type: object
    DeviceAssuranceWindowsPlatform:
      allOf:
      - $ref: '#/components/schemas/DeviceAssurance'
      - properties:
          diskEncryptionType:
            $ref: '#/components/schemas/DeviceAssuranceMacOSPlatform_allOf_diskEncryptionType'
          osVersion:
            $ref: '#/components/schemas/OSVersionFourComponents'
          osVersionConstraints:
            description: |
              <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>Specifies the Windows version requirements for the assurance policy. Each requirement must correspond to a different major version (Windows 11 or Windows 10). If a requirement isn't specified for a major version, then devices on that major version satisfy the condition.

              There are two types of OS requirements:
              * **Static**: A specific Windows version requirement that doesn't change until you update the policy. A static OS Windows requirement is specified with `majorVersionConstraint` and `minimum`.
              * **Dynamic**: A Windows version requirement that is relative to the latest major release and security patch. A dynamic OS Windows requirement is specified with `majorVersionConstraint` and `dynamicVersionRequirement`.

              > **Note:** Dynamic OS requirements are available only if the **Dynamic OS version compliance** [self-service EA](/openapi/okta-management/guides/release-lifecycle/#early-access-ea) feature is enabled. The `osVersionConstraints` property is only supported for the Windows platform. You can't specify both `osVersion.minimum` and `osVersionConstraints` properties at the same time.
            items:
              $ref: '#/components/schemas/OSVersionConstraint'
            maxItems: 2
            minItems: 1
            type: array
            x-okta-lifecycle:
              lifecycle: EA
              isGenerallyAvailable: false
              SKUs: []
          screenLockType:
            $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform_allOf_screenLockType'
          secureHardwarePresent:
            type: boolean
          thirdPartySignalProviders:
            $ref: '#/components/schemas/DeviceAssuranceWindowsPlatform_allOf_thirdPartySignalProviders'
        type: object
    DeviceDisplayName:
      description: Display name of the device
      example:
        sensitive: true
        value: value
      properties:
        sensitive:
          type: boolean
        value:
          type: string
      type: object
    DeviceList:
      allOf:
      - $ref: '#/components/schemas/Device'
      - properties:
          _embedded:
            $ref: '#/components/schemas/DeviceList_allOf__embedded'
    DevicePlatform:
      description: OS platform of the device
      type: string
      x-okta-known-values:
      - ANDROID
      - IOS
      - MACOS
      - WINDOWS
    DevicePolicyMDMFramework:
      type: string
      x-okta-known-values:
      - AFW
      - NATIVE
      - SAFE
    DevicePolicyPlatformType:
      type: string
      x-okta-known-values:
      - ANDROID
      - IOS
      - OSX
      - WINDOWS
    DevicePolicyRuleCondition:
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          type: string
          x-okta-known-values:
          - ANY
          - TRUSTED
      type: object
    DevicePolicyRuleConditionAssurance:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    DevicePolicyRuleConditionPlatform:
      properties:
        supportedMDMFrameworks:
          items:
            $ref: '#/components/schemas/DevicePolicyMDMFramework'
          type: array
        types:
          items:
            $ref: '#/components/schemas/DevicePolicyPlatformType'
          type: array
      type: object
    DevicePolicyTrustLevel:
      type: string
      x-okta-known-values:
      - ANY
      - TRUSTED
    DeviceProfile:
      example:
        meid: meid
        serialNumber: serialNumber
        displayName: displayName
        registered: true
        integrityJailbreak: true
        platform: platform
        manufacturer: manufacturer
        sid: sid
        osVersion: osVersion
        imei: imei
        diskEncryptionType: diskEncryptionType
        model: model
        udid: udid
        secureHardwarePresent: true
        tpmPublicKeyHash: tpmPublicKeyHash
      properties:
        diskEncryptionType:
          description: |-
            Type of encryption used on the device
            > **Note:** The following values map to Disk Encryption ON: `FULL`, `USER`, `ALL_INTERNAL_VOLUMES`. All other values map to Disk Encryption OFF.
          type: string
          x-enumDescriptions:
            NONE: No encryption has been set.
            FULL: Disk is fully encrypted. Only applicable to `IOS` and `ANDROID`
              platforms.
            USER: Encryption key is tied to the user or profile. Only applicable to
              `ANDROID` platform.
            ALL_INTERNAL_VOLUMES: All internal disks are encrypted. Only applicable
              to `WINDOWS` and `MACOS` platforms.
            SYSTEM_VOLUME: Only the system volume is encrypted. Only applicable to
              `WINDOWS` and `MACOS` platforms.
          x-okta-known-values:
          - ALL_INTERNAL_VOLUMES
          - FULL
          - NONE
          - SYSTEM_VOLUME
          - USER
        displayName:
          description: Display name of the device
          maxLength: 255
          minLength: 1
          type: string
        imei:
          description: International Mobile Equipment Identity (IMEI) of the device
          maxLength: 17
          minLength: 14
          type: string
        integrityJailbreak:
          description: Indicates if the device is jailbroken or rooted. Only applicable
            to `IOS` and `ANDROID` platforms
          type: boolean
        manufacturer:
          description: Name of the manufacturer of the device
          maxLength: 127
          type: string
        meid:
          description: Mobile equipment identifier of the device
          maxLength: 14
          type: string
        model:
          description: Model of the device
          maxLength: 127
          type: string
        osVersion:
          description: Version of the device OS
          maxLength: 127
          type: string
        platform:
          description: OS platform of the device
          type: string
          x-okta-known-values:
          - ANDROID
          - IOS
          - MACOS
          - WINDOWS
        registered:
          description: Indicates if the device is registered at Okta
          type: boolean
        secureHardwarePresent:
          description: Indicates if the device contains a secure hardware functionality
          type: boolean
        serialNumber:
          description: Serial number of the device
          maxLength: 127
          type: string
        sid:
          description: Windows Security identifier of the device
          maxLength: 256
          type: string
        tpmPublicKeyHash:
          description: Windows Trusted Platform Module hash value
          type: string
        udid:
          description: macOS Unique Device identifier of the device
          maxLength: 47
          type: string
      required:
      - displayName
      - platform
      - registered
      type: object
    DeviceStatus:
      description: The state object of the device
      type: string
      x-enumDescriptions:
        ACTIVE: Use activated devices to create and delete Device user links
        DEACTIVATED: Deactivation causes a Device to lose all device user links. Set
          the Device status to DEACTIVATED before deleting it.
        SUSPENDED: Use suspended devices to create and delete device user links. You
          can only unsuspend or deactivate suspended devices.
        UNSUSPENDED: Returns a suspended Device to ACTIVE.
      x-okta-known-values:
      - ACTIVE
      - DEACTIVATED
      - SUSPENDED
      - UNSUSPENDED
    DeviceUser:
      example:
        managementStatus: MANAGED
        created: created
        screenLockType: NONE
        user:
          lastLogin: 2000-01-23T04:56:07.000+00:00
          transitioningToStatus: ACTIVE
          realmId: guo1bfiNtSnZYILxO0g4
          credentials:
            password:
              hook:
                type: type
              value: value
              hash:
                iterationCount: 0
                salt: salt
                keySize: 6
                saltOrder: saltOrder
                workFactor: 3
                digestAlgorithm: digestAlgorithm
                value: value
                algorithm: algorithm
            provider:
              name: name
              type: type
            recovery_question:
              answer: answer
              question: question
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          profile:
            profileUrl: profileUrl
            lastName: lastName
            zipCode: zipCode
            preferredLanguage: preferredLanguage
            city: city
            displayName: displayName
            timezone: timezone
            locale: locale
            login: login
            title: title
            employeeNumber: employeeNumber
            division: division
            honorificSuffix: honorificSuffix
            countryCode: countryCode
            state: state
            department: department
            email: email
            manager: manager
            costCenter: costCenter
            nickName: nickName
            secondEmail: secondEmail
            honorificPrefix: honorificPrefix
            managerId: managerId
            firstName: firstName
            primaryPhone: primaryPhone
            postalAddress: postalAddress
            mobilePhone: mobilePhone
            streetAddress: streetAddress
            organization: organization
            middleName: middleName
            userType: userType
          type:
            id: id
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          passwordChanged: 2000-01-23T04:56:07.000+00:00
          _embedded:
            key: "{}"
          statusChanged: 2000-01-23T04:56:07.000+00:00
          id: id
          activated: 2000-01-23T04:56:07.000+00:00
          status: status
      properties:
        created:
          description: Timestamp when device was created
          type: string
        managementStatus:
          description: The management status of the device
          enum:
          - MANAGED
          - NOT_MANAGED
          type: string
          x-enumDescriptions:
            MANAGED: The device has management software installed
            NOT_MANAGED: The device doesn't have management software installed
        screenLockType:
          description: Screen lock type of the device
          enum:
          - NONE
          - PASSCODE
          - BIOMETRIC
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    DigestAlgorithm:
      description: Algorithm used to generate the key. Only required for the PBKDF2
        algorithm.
      type: string
      x-okta-known-values:
      - SHA256_HMAC
      - SHA512_HMAC
    DiskEncryptionTypeAndroid:
      type: string
      x-okta-known-values:
      - FULL
      - USER
    DiskEncryptionTypeDef:
      description: |-
        Type of encryption used on the device
        > **Note:** The following values map to Disk Encryption ON: `FULL`, `USER`, `ALL_INTERNAL_VOLUMES`. All other values map to Disk Encryption OFF.
      type: string
      x-enumDescriptions:
        NONE: No encryption has been set.
        FULL: Disk is fully encrypted. Only applicable to `IOS` and `ANDROID` platforms.
        USER: Encryption key is tied to the user or profile. Only applicable to `ANDROID`
          platform.
        ALL_INTERNAL_VOLUMES: All internal disks are encrypted. Only applicable to
          `WINDOWS` and `MACOS` platforms.
        SYSTEM_VOLUME: Only the system volume is encrypted. Only applicable to `WINDOWS`
          and `MACOS` platforms.
      x-okta-known-values:
      - ALL_INTERNAL_VOLUMES
      - FULL
      - NONE
      - SYSTEM_VOLUME
      - USER
    DiskEncryptionTypeDesktop:
      type: string
      x-okta-known-values:
      - ALL_INTERNAL_VOLUMES
    DomainCertificate:
      description: Defines the properties of the certificate
      example:
        privateKey: '"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0AAQEFAASCBKgwghSkAgEAAoIBAQC5cyk6y63iBJSW\nstgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvcqFWxdiW3sh2cItzYtoN1Zfgj5lWG\nOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQmpqi9zaP/aKJklk6LdPFbVLGhuZfm\n34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCla2ifFzjz2FCkMMEc/Y0zUyP+en/m\nbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWgCZQq/AZYj9RxR23IIuRcUJ8TQ2py\noc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKrIBIo+qyHweifpPYW28ipdSbPjiyp\nAMdpbGLDAgMBAAECggEAUXVfT91z6IqghhKwO8QtC5T/+fN06B8rCYSKj/FFoZL0\n0oTiLFuYwImoCadoUDQUE/Efj0rKE2LSgFHg/44IItQXE01m+5WmHmL1ADxsyoLH\nz9yDosKj7jNM7RyV8F8Bg0pL1hU+rU4rhhL/MaS0mx4eFYjC4UmcWBmXTdelSVJa\nkvXvQLT5y86bqh7tqMjM/kALTWRz5CgNJFk/ONA1yo5RTX9S7SIXimBgAvuGqP8i\nMPEhJou7U3DfzXVfvP8byqNdsZs6ZNhG3wXspl61mRyrY+51SOaNLA7Bkji7x4bH\nNw6mJI0IJTAP9oc1Z8fYeMuxT1bfuD7VOupSP0mAMQKBgQDk+KuyQkmPymeP/Wwu\nII4DUpleVzxTK9obMQQoCEEElbQ6+jTb+8ixP0bWLvBXg/rX734j7OWfn/bljWLH\nXLrSoqQZF1+XMVeY4g4wx9UuTK/D2n791zdOgQivxbIPdWL3a4ap86ar8uyMgJu8\nBLXfFBAOc+9myqUkbeO7wt0e6QKBgQDPV04jPtIJoMrggpQDNreGrANKOmsXWxj4\nOHW13QNdJ2KGQpoTdoqQ8ZmlxuA8Bf2RjHsnB2kgGVTVQR74zRib4MByhvsdhvVm\nF2LNsJoIDfqtv3c+oj13VonRUGuzUeJpwT/snyaL+jQ/ZZcYz0jDgDhIODTcFYj8\nDMSD5SHgywKBgHH6MwWuJ44TNBAiF2qyu959jGjAxf+k0ZI9iRMgYLUWjDvbdtqW\ncCWDGRDfFraJtSEuTz003GzkJPPJuIUC7OCTI1p2HxhU8ITi6itwHfdJJyk4J4TW\nT+qdIqTUpTk6tsPw23zYE3x+lS+viVZDhgEArKl1HpOthh0nMnixnH6ZAoGBAKGn\nV+xy1h9bldFk/TFkP8Jn6ki9MzGKfPVKT7vzDORcCJzU4Hu8OFy5gSmW3Mzvfrsz\n4/CR/oxgM5vwoc0pWr5thJ3GT5K93iYypX3o6q7M91zvonDa3UFl3x2qrc2pUfVS\nDhzWGJ+Z+5JSCnP1aK3EEh18dPoCcELTUYPj6X3xAoGBALAllTb3RCIaqIqk+s3Y\n6KDzikgwGM6j9lmOI2MH4XmCVym4Z40YGK5nxulDh2Ihn/n9zm13Z7ul2DJwgQSO\n0zBc7/CMOsMEBaNXuKL8Qj4enJXMtub4waQ/ywqHIdc50YaPI5Ax8dD/10h9M6Qc\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END
          PRIVATE KEY-----"'
        certificateChain: '"-----BEGIN CERTIFICATE-----\nMIIFPjCCBCbjAwIBAgISA7RikMltj36DkLk1DUzjwfYBMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTEwMTExOTQ3MjRaFw0yMjAxMDkxOTQ3MjNaMCgxJjAkBgNVBAMT\nHWFuaXRhdGVzdHJhaW4uc2lnbWFuZXRjb3JwLnVzMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA40EsG7YrFlsH3XdZKirdKKOC7/cca5g9L4rwyA/PlfeU\nB7mJhbQI/a3yZbtY+GjHmedBx15aPtyq+NFZLOkiRCXx0k2zNIJB4yC6Jr/Yp8C2\nrXO6mrCcuqpX7SuDPBtrfdYcIg8G6m0wjj1V1p2/XR8G//CBe8I2XTaTpHsx/VC8\nMNOAA27aSbeX4Nz6TQ69rFuxRG+neUbcz2hQKwroCsCHi6iBmqRkg19Uh8315Cx2\nBUqY0JecpP42KMiktzIoSlqS9yZSuNQh1kP1tPwkEzbs/t3FrfCnnRx5RDr2pJpV\nnonL3sB3TVotS3nFgPNHCfp65O0Bg/3ZpU9IvUpcdQIDAQABo4ICVjCCAlIwDgYD\nVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNV\nHRMBAf8EAjAAMB0GA1UdDgQWBBSzWt3Dvp71cKA2Z54ESjjyM4dp+jAfBgNVHSME\nGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBVBggrBgEFBQcBAQRJMEcwIQYIKwYB\nBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9yZzAiBggrBgEFBQcwAoYWaHR0cDov\nL3IzLmkubGVuY3Iub3JnLzAoBgNVHREEITAfgh1hbml0YXRlc3RyYWluLnNpZ21h\nbmV0Y29ycC51czBMBgNVHSAERTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAo\nMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQIGCisG\nAQQB1nkCBAIEgfMEgfAA7gB1AG9Tdqwx8DEZ2JkApFEV/3cVHBHZAsEAKQaNsgia\nN9kTAAABfHEcLqAAAAQDAEYwRAIgMlyQ61FjuIKDfATjz0wfkskChD0csVe0TStq\nmC7NbLACICp3CYMvvDiWt1pr5pzCwTQO8F6v0/qNjmH4mjCutAgyAHUARqVV63X6\nkSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAF8cRwvRAAABAMARjBEAiAZd6Vn\n7MLXT7JeIxZrfbNARrf5oCM4UAVjjJeaUhB1MwIgSLW5cVAZvkiwbQW+vIutFjBz\na8cNb/i+nM7RxFW+JPgwDQYJKoZIhvcNAQELBQADggEBAIlHZiHIuOvYFteqpwvR\n0ElqinIpkYsfI+0O5FwHBXz7vMCPGtfdlcX5M10eW3aEBo9lR59mjDMsMufbTb60\nJuSnguelkUoq4WzqjZI+2uy/FTztI5GPpXmXW3IyzbqmCWQt7u8N607g1TYLBaLL\nrbFIhl+LbTJAa//mxI6bb4l/86j/kSjht6U0OIde7ylscb+3MHobbpIWJYp8Jr1D\nubm/0glL46ExnuLbIKojLhDBnG/wHVunB0rJxGh1vPvwD75O1nSIdxuNlVcGwws+\n7wsOyPA1s0VWzrMN1olLMyIPFCwPvfCm1E8Dje1AXMpmyDlqjEoQsoMUH//GKF0S\nTgM=\n-----END
          CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw\nWhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP\nR5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx\nsxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm\nNHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg\nZ3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG\n/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB\nAf8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA\nFHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw\nAoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw\nOi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB\ngt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W\nPTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl\nikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz\nCkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm\nlJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4\navAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2\nyJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O\nyK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids\nhCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+\nHlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv\nMldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX\nnLRbwHOoq7hHwg==\n-----END
          CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC\nov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL\nwYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D\nLtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK\n4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5\nbHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y\nsR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ\nXmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4\nFQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc\nSLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql\nPRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND\nTwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw\nSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1\nc3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx\n+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB\nATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu\nb3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E\nU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu\nMA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC\n5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW\n9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG\nWCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O\nhe8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END
          CERTIFICATE-----"'
        certificate: "\"-----BEGIN CERTIFICATE-----\\nMIIFNzCCBB+gAwIBAgHTAAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\\\
          nMDIzCzAJCgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\\nEwJSMzAeFw0yMTAyMTAwNTEzMDVaFw0yMTA1MTEwNTEzMDVaMCQxIjAgBgNVBAMT\\\
          nGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAudXMwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\nDwAwggEKAoIBAQC5cyk6x63iBJSWvtgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvc\\\
          nqFWxdiW3sh2cItzYtoN1Zfgj5lWGOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQm\\npqi9zaP/aKJklk6LdPFbVLGhuZfm34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCl\\\
          na2ifFzjz2FCkMMEc/Y0zUyP+en/mbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWg\\nCZQq/AZYj9RxR23IIuRcUJ8TQ2pyoc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKr\\\
          nIBIo+qyHweifpPYW28ipdSbPjiypAMdpbGLDAgMBAAGjggJTMIICTzAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB\\\
          n/wQCMAAwHQYDVR0OBBYEFPVZKiovtIK4Av/IBUQeLUs29pT6MB8GA1UdIwQYMBaA\\nFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcw\\\
          nAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMu\\naS5sZW5jci5vcmcvMCQGA1UdEQQdMBuCGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAu\\\
          ndXMwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEF\\nBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEDBgorBgEEAdZ5AgQC\\\
          nBIH0BIHxAO8AdgBc3EOS/uarRUSxXprUVuYQN/vV+kfcoXOUsl7m9scOygAAAXeK\\nkmOsAAAEAwBHMEUCIQDSudPEWXk969BT8yz3ag6BJWCMRU5tefEw9nXEQMsh5gIg\\\
          nUmfGIuUlcNNI5PydVIHj+zns+SR8P7zfd3FIxW4gK0QAdQD2XJQv0XcwIhRUGAgw\\nlFaO400TGTO/3wwvIAvMTvFk4wAAAXeKkmOlAAAEAwBGMEQCIHQkr2qOGuInvonv\\\
          nW4vvdI61nraax5V6SC3E0D2JSO91AiBVhpX4BBafRAh36r7l8LrxAfxBM3CjBmAC\\nq8fUrWfIWDANBgkqhkiG9w0BAQsFAAOCAQEAgGDMKXofKpDdv5kkID3s5GrKdzaj\\\
          njFmb/6kyqd1E6eGXZAewCP1EF5BVvR6lBP2aRXiZ6sJVZktoIfztZnbxBGgbPHfv\\nR3iXIG6fxkklzR9Y8puPMBFadANE/QV78tIRAlyaqeSNsoxHi7ssQjHTP111B2lf\\\
          n3KmuTpsruut1UesEJcPReLk/1xTkRx262wAncach5Wp+6GWWduTZYJbsNFyrK1RP\\nYQ0qYpP9wt2qR+DGaRUBG8i1XLnZS8pkyxtKhVw/a5Fowt+NqCpEBjjJiWJRSGnG\\\
          nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\\n-----END\
          \ CERTIFICATE-----\","
        type: type
      properties:
        certificate:
          description: Certificate content
          example: "\"-----BEGIN CERTIFICATE-----\\nMIIFNzCCBB+gAwIBAgHTAAXomJWRama3ypu8TIxdA9wzMA0GCSqGSIb3DQEBCwUA\\\
            nMDIzCzAJCgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\\nEwJSMzAeFw0yMTAyMTAwNTEzMDVaFw0yMTA1MTEwNTEzMDVaMCQxIjAgBgNVBAMT\\\
            nGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAudXMwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\nDwAwggEKAoIBAQC5cyk6x63iBJSWvtgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvc\\\
            nqFWxdiW3sh2cItzYtoN1Zfgj5lWGOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQm\\npqi9zaP/aKJklk6LdPFbVLGhuZfm34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCl\\\
            na2ifFzjz2FCkMMEc/Y0zUyP+en/mbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWg\\nCZQq/AZYj9RxR23IIuRcUJ8TQ2pyoc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKr\\\
            nIBIo+qyHweifpPYW28ipdSbPjiypAMdpbGLDAgMBAAGjggJTMIICTzAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB\\\
            n/wQCMAAwHQYDVR0OBBYEFPVZKiovtIK4Av/IBUQeLUs29pT6MB8GA1UdIwQYMBaA\\nFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcw\\\
            nAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMu\\naS5sZW5jci5vcmcvMCQGA1UdEQQdMBuCGWFuaXRhdGVzdC5zaWdtYW5ldGNvcnAu\\\
            ndXMwTAYDVR0gBEUwQzAIBgZngQwBAgEwNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEF\\nBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5jcnlwdC5vcmcwggEDBgorBgEEAdZ5AgQC\\\
            nBIH0BIHxAO8AdgBc3EOS/uarRUSxXprUVuYQN/vV+kfcoXOUsl7m9scOygAAAXeK\\nkmOsAAAEAwBHMEUCIQDSudPEWXk969BT8yz3ag6BJWCMRU5tefEw9nXEQMsh5gIg\\\
            nUmfGIuUlcNNI5PydVIHj+zns+SR8P7zfd3FIxW4gK0QAdQD2XJQv0XcwIhRUGAgw\\nlFaO400TGTO/3wwvIAvMTvFk4wAAAXeKkmOlAAAEAwBGMEQCIHQkr2qOGuInvonv\\\
            nW4vvdI61nraax5V6SC3E0D2JSO91AiBVhpX4BBafRAh36r7l8LrxAfxBM3CjBmAC\\nq8fUrWfIWDANBgkqhkiG9w0BAQsFAAOCAQEAgGDMKXofKpDdv5kkID3s5GrKdzaj\\\
            njFmb/6kyqd1E6eGXZAewCP1EF5BVvR6lBP2aRXiZ6sJVZktoIfztZnbxBGgbPHfv\\nR3iXIG6fxkklzR9Y8puPMBFadANE/QV78tIRAlyaqeSNsoxHi7ssQjHTP111B2lf\\\
            n3KmuTpsruut1UesEJcPReLk/1xTkRx262wAncach5Wp+6GWWduTZYJbsNFyrK1RP\\nYQ0qYpP9wt2qR+DGaRUBG8i1XLnZS8pkyxtKhVw/a5Fowt+NqCpEBjjJiWJRSGnG\\\
            nNSgRtSXq11j8O4JONi8EXe7cEtvzUiLR5PL3itsK2svtrZ9jIwQ95wOPaA==\\n-----END\
            \ CERTIFICATE-----\","
          type: string
        certificateChain:
          description: Certificate chain
          example: '"-----BEGIN CERTIFICATE-----\nMIIFPjCCBCbjAwIBAgISA7RikMltj36DkLk1DUzjwfYBMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMTEwMTExOTQ3MjRaFw0yMjAxMDkxOTQ3MjNaMCgxJjAkBgNVBAMT\nHWFuaXRhdGVzdHJhaW4uc2lnbWFuZXRjb3JwLnVzMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA40EsG7YrFlsH3XdZKirdKKOC7/cca5g9L4rwyA/PlfeU\nB7mJhbQI/a3yZbtY+GjHmedBx15aPtyq+NFZLOkiRCXx0k2zNIJB4yC6Jr/Yp8C2\nrXO6mrCcuqpX7SuDPBtrfdYcIg8G6m0wjj1V1p2/XR8G//CBe8I2XTaTpHsx/VC8\nMNOAA27aSbeX4Nz6TQ69rFuxRG+neUbcz2hQKwroCsCHi6iBmqRkg19Uh8315Cx2\nBUqY0JecpP42KMiktzIoSlqS9yZSuNQh1kP1tPwkEzbs/t3FrfCnnRx5RDr2pJpV\nnonL3sB3TVotS3nFgPNHCfp65O0Bg/3ZpU9IvUpcdQIDAQABo4ICVjCCAlIwDgYD\nVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNV\nHRMBAf8EAjAAMB0GA1UdDgQWBBSzWt3Dvp71cKA2Z54ESjjyM4dp+jAfBgNVHSME\nGDAWgBQULrMXt1hWy65QCUDmH6+dixTCxjBVBggrBgEFBQcBAQRJMEcwIQYIKwYB\nBQUHMAGGFWh0dHA6Ly9yMy5vLmxlbmNyLm9yZzAiBggrBgEFBQcwAoYWaHR0cDov\nL3IzLmkubGVuY3Iub3JnLzAoBgNVHREEITAfgh1hbml0YXRlc3RyYWluLnNpZ21h\nbmV0Y29ycC51czBMBgNVHSAERTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAo\nMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQIGCisG\nAQQB1nkCBAIEgfMEgfAA7gB1AG9Tdqwx8DEZ2JkApFEV/3cVHBHZAsEAKQaNsgia\nN9kTAAABfHEcLqAAAAQDAEYwRAIgMlyQ61FjuIKDfATjz0wfkskChD0csVe0TStq\nmC7NbLACICp3CYMvvDiWt1pr5pzCwTQO8F6v0/qNjmH4mjCutAgyAHUARqVV63X6\nkSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAF8cRwvRAAABAMARjBEAiAZd6Vn\n7MLXT7JeIxZrfbNARrf5oCM4UAVjjJeaUhB1MwIgSLW5cVAZvkiwbQW+vIutFjBz\na8cNb/i+nM7RxFW+JPgwDQYJKoZIhvcNAQELBQADggEBAIlHZiHIuOvYFteqpwvR\n0ElqinIpkYsfI+0O5FwHBXz7vMCPGtfdlcX5M10eW3aEBo9lR59mjDMsMufbTb60\nJuSnguelkUoq4WzqjZI+2uy/FTztI5GPpXmXW3IyzbqmCWQt7u8N607g1TYLBaLL\nrbFIhl+LbTJAa//mxI6bb4l/86j/kSjht6U0OIde7ylscb+3MHobbpIWJYp8Jr1D\nubm/0glL46ExnuLbIKojLhDBnG/wHVunB0rJxGh1vPvwD75O1nSIdxuNlVcGwws+\n7wsOyPA1s0VWzrMN1olLMyIPFCwPvfCm1E8Dje1AXMpmyDlqjEoQsoMUH//GKF0S\nTgM=\n-----END
            CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw\nWhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP\nR5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx\nsxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm\nNHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg\nZ3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG\n/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB\nAf8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA\nFHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw\nAoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw\nOi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB\ngt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W\nPTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl\nikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz\nCkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm\nlJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4\navAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2\nyJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O\nyK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids\nhCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+\nHlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv\nMldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX\nnLRbwHOoq7hHwg==\n-----END
            CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC\nov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL\nwYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D\nLtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK\n4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5\nbHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y\nsR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ\nXmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4\nFQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc\nSLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql\nPRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND\nTwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw\nSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1\nc3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx\n+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB\nATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu\nb3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E\nU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu\nMA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC\n5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW\n9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG\nWCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O\nhe8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END
            CERTIFICATE-----"'
          type: string
        privateKey:
          description: Certificate private key
          example: '"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0AAQEFAASCBKgwghSkAgEAAoIBAQC5cyk6y63iBJSW\nstgsOBqIxfO8euPHcRnyWsL9dsvnbNyOnyvcqFWxdiW3sh2cItzYtoN1Zfgj5lWG\nOVXbHxP0VaNG9fHVX3+NHP6LFHQz92BzAYQmpqi9zaP/aKJklk6LdPFbVLGhuZfm\n34+ijW9YsgLTKR2WTaZJK5QtamVVmP+VsSCla2ifFzjz2FCkMMEc/Y0zUyP+en/m\nbL71K+VnpZdlEC1s38EvjRTFKFZTKVw5wpWgCZQq/AZYj9RxR23IIuRcUJ8TQ2py\noc3kIXPWjiIarSgBlA8G9kCsxgzXP2RyLwKrIBIo+qyHweifpPYW28ipdSbPjiyp\nAMdpbGLDAgMBAAECggEAUXVfT91z6IqghhKwO8QtC5T/+fN06B8rCYSKj/FFoZL0\n0oTiLFuYwImoCadoUDQUE/Efj0rKE2LSgFHg/44IItQXE01m+5WmHmL1ADxsyoLH\nz9yDosKj7jNM7RyV8F8Bg0pL1hU+rU4rhhL/MaS0mx4eFYjC4UmcWBmXTdelSVJa\nkvXvQLT5y86bqh7tqMjM/kALTWRz5CgNJFk/ONA1yo5RTX9S7SIXimBgAvuGqP8i\nMPEhJou7U3DfzXVfvP8byqNdsZs6ZNhG3wXspl61mRyrY+51SOaNLA7Bkji7x4bH\nNw6mJI0IJTAP9oc1Z8fYeMuxT1bfuD7VOupSP0mAMQKBgQDk+KuyQkmPymeP/Wwu\nII4DUpleVzxTK9obMQQoCEEElbQ6+jTb+8ixP0bWLvBXg/rX734j7OWfn/bljWLH\nXLrSoqQZF1+XMVeY4g4wx9UuTK/D2n791zdOgQivxbIPdWL3a4ap86ar8uyMgJu8\nBLXfFBAOc+9myqUkbeO7wt0e6QKBgQDPV04jPtIJoMrggpQDNreGrANKOmsXWxj4\nOHW13QNdJ2KGQpoTdoqQ8ZmlxuA8Bf2RjHsnB2kgGVTVQR74zRib4MByhvsdhvVm\nF2LNsJoIDfqtv3c+oj13VonRUGuzUeJpwT/snyaL+jQ/ZZcYz0jDgDhIODTcFYj8\nDMSD5SHgywKBgHH6MwWuJ44TNBAiF2qyu959jGjAxf+k0ZI9iRMgYLUWjDvbdtqW\ncCWDGRDfFraJtSEuTz003GzkJPPJuIUC7OCTI1p2HxhU8ITi6itwHfdJJyk4J4TW\nT+qdIqTUpTk6tsPw23zYE3x+lS+viVZDhgEArKl1HpOthh0nMnixnH6ZAoGBAKGn\nV+xy1h9bldFk/TFkP8Jn6ki9MzGKfPVKT7vzDORcCJzU4Hu8OFy5gSmW3Mzvfrsz\n4/CR/oxgM5vwoc0pWr5thJ3GT5K93iYypX3o6q7M91zvonDa3UFl3x2qrc2pUfVS\nDhzWGJ+Z+5JSCnP1aK3EEh18dPoCcELTUYPj6X3xAoGBALAllTb3RCIaqIqk+s3Y\n6KDzikgwGM6j9lmOI2MH4XmCVym4Z40YGK5nxulDh2Ihn/n9zm13Z7ul2DJwgQSO\n0zBc7/CMOsMEBaNXuKL8Qj4enJXMtub4waQ/ywqHIdc50YaPI5Ax8dD/10h9M6Qc\nnUFLNE8pXSnsqb0eOL74f3uQ\n-----END
            PRIVATE KEY-----"'
          type: string
        type:
          description: Certificate type
          type: string
          x-okta-known-values:
          - PEM
      required:
      - certificate
      - certificateChain
      - privateKey
      - type
      type: object
    DomainCertificateMetadata:
      description: Certificate metadata for the domain
      example:
        subject: CN=login.example.com
        fingerprint: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
        expiration: 2021-05-11T05:13:05.000Z
      properties:
        expiration:
          description: Certificate expiration
          example: 2021-05-11T05:13:05.000Z
          type: string
        fingerprint:
          description: Certificate fingerprint
          example: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
          type: string
        subject:
          description: Certificate subject
          example: CN=login.example.com
          type: string
      type: object
    DomainCertificateSourceType:
      description: Certificate source type that indicates whether the certificate
        is provided by the user or Okta.
      type: string
      x-okta-known-values:
      - MANUAL
      - OKTA_MANAGED
    DomainCertificateType:
      description: Certificate type
      type: string
      x-okta-known-values:
      - PEM
    DomainLinks:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          brand:
            $ref: '#/components/schemas/DomainLinks_allOf_brand'
          certificate:
            $ref: '#/components/schemas/DomainLinks_allOf_certificate'
          verify:
            $ref: '#/components/schemas/DomainLinks_allOf_verify'
        type: object
    DomainListResponse:
      description: Defines a list of domains with a subset of the properties for each
        domain.
      example:
        domains:
        - _links: null
          certificateSourceType: certificateSourceType
          brandId: bndul904tTZ6kWVhP0g3
          dnsRecords:
          - fqdn: _oktaverification.login.example.com
            recordType: TXT
            values:
            - 79496f234c814638b1cc44f51a782781
            expiration: expiration
          - fqdn: _oktaverification.login.example.com
            recordType: TXT
            values:
            - 79496f234c814638b1cc44f51a782781
            expiration: expiration
          domain: login.example.com
          publicCertificate:
            subject: CN=login.example.com
            fingerprint: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
            expiration: 2021-05-11T05:13:05.000Z
          id: OcDz6iRyjkaCTXkdo0g3
          validationStatus: VERIFIED
        - _links: null
          certificateSourceType: certificateSourceType
          brandId: bndul904tTZ6kWVhP0g3
          dnsRecords:
          - fqdn: _oktaverification.login.example.com
            recordType: TXT
            values:
            - 79496f234c814638b1cc44f51a782781
            expiration: expiration
          - fqdn: _oktaverification.login.example.com
            recordType: TXT
            values:
            - 79496f234c814638b1cc44f51a782781
            expiration: expiration
          domain: login.example.com
          publicCertificate:
            subject: CN=login.example.com
            fingerprint: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
            expiration: 2021-05-11T05:13:05.000Z
          id: OcDz6iRyjkaCTXkdo0g3
          validationStatus: VERIFIED
      properties:
        domains:
          description: Each element of the array defines an individual domain.
          items:
            $ref: '#/components/schemas/DomainResponse'
          type: array
      type: object
    DomainRequest:
      example:
        certificateSourceType: certificateSourceType
        domain: login.example.com
      properties:
        certificateSourceType:
          description: Certificate source type that indicates whether the certificate
            is provided by the user or Okta.
          type: string
          x-okta-known-values:
          - MANUAL
          - OKTA_MANAGED
        domain:
          description: Custom domain name
          example: login.example.com
          type: string
      required:
      - certificateSourceType
      - domain
      type: object
    DomainResponse:
      description: The properties that define an individual domain.
      example:
        _links: null
        certificateSourceType: certificateSourceType
        brandId: bndul904tTZ6kWVhP0g3
        dnsRecords:
        - fqdn: _oktaverification.login.example.com
          recordType: TXT
          values:
          - 79496f234c814638b1cc44f51a782781
          expiration: expiration
        - fqdn: _oktaverification.login.example.com
          recordType: TXT
          values:
          - 79496f234c814638b1cc44f51a782781
          expiration: expiration
        domain: login.example.com
        publicCertificate:
          subject: CN=login.example.com
          fingerprint: 73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
          expiration: 2021-05-11T05:13:05.000Z
        id: OcDz6iRyjkaCTXkdo0g3
        validationStatus: VERIFIED
      properties:
        brandId:
          description: The ID number of the brand
          example: bndul904tTZ6kWVhP0g3
          type: string
        certificateSourceType:
          description: Certificate source type that indicates whether the certificate
            is provided by the user or Okta.
          type: string
          x-okta-known-values:
          - MANUAL
          - OKTA_MANAGED
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          description: Custom domain name
          example: login.example.com
          type: string
        id:
          description: Unique ID of the domain
          example: OcDz6iRyjkaCTXkdo0g3
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          description: Status of the domain
          example: VERIFIED
          type: string
          x-okta-known-values:
          - COMPLETED
          - IN_PROGRESS
          - NOT_STARTED
          - VERIFIED
        _links:
          $ref: '#/components/schemas/DomainLinks'
      type: object
    DomainValidationStatus:
      description: Status of the domain
      example: VERIFIED
      type: string
      x-okta-known-values:
      - COMPLETED
      - IN_PROGRESS
      - NOT_STARTED
      - VERIFIED
    Duration:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    DynamicNetworkZone:
      allOf:
      - $ref: '#/components/schemas/NetworkZone'
      - title: Dynamic Network Zone
      - properties:
          asns:
            description: An array of ASNs for a Network Zone
            items:
              type: string
            type: array
          proxyType:
            description: The proxy type used for a Dynamic Network Zone
            enum:
            - "null"
            - Any
            - Tor
            - NotTorAnonymizer
            type: string
            x-enumDescriptions:
              "null": (Or `""`) No proxy used
              Any: Use any proxy type for the Dynamic Zone.
              Tor: Use Tor Anonymizer proxy for the Dynamic Zone.
              NotTorAnonymizer: Use a non Tor Anonymizer proxy for the Dynamic Zone.
          locations:
            description: An array of geolocations for a Dynamic Network Zone
            items:
              $ref: '#/components/schemas/NetworkZoneLocation'
            maximum: 75
            nullable: true
            type: array
        type: object
    ECKeyJWK:
      description: "Elliptic Curve Key in JWK format, currently used during enrollment\
        \ to encrypt fulfillment requests to Yubico, or during activation to verify\
        \ Yubico's JWS objects in fulfillment responses. The currently agreed protocol\
        \ uses P-384."
      properties:
        crv:
          enum:
          - P-384
          type: string
        kid:
          description: The unique identifier of the key
          type: string
        kty:
          description: The type of public key
          enum:
          - EC
          type: string
        use:
          description: The intended use for the key. The ECKeyJWK is always `enc`
            because Okta uses it to encrypt requests to Yubico.
          enum:
          - enc
          type: string
        x:
          description: The public x coordinate for the elliptic curve point
          type: string
        "y":
          description: The public y coordinate for the elliptic curve point
          type: string
      required:
      - crv
      - kid
      - kty
      - use
      - x
      - "y"
      type: object
    EmailContent:
      properties:
        body:
          description: "The HTML body of the email. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).\
            \ \n\n<x-lifecycle class=\"ea\"></x-lifecycle> Not required if Custom\
            \ languages for Okta Email Templates is enabled. A `null` body is replaced\
            \ with a default value from one of the following in priority order:\n\n\
            1. An existing default email customization, if one exists\n2. Okta-provided\
            \ translated content for the specified language, if one exists\n3. Okta-provided\
            \ translated content for the brand locale, if it's set \n4. Okta-provided\
            \ content in English\n"
          type: string
        subject:
          description: |
            The email subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).

            <x-lifecycle class="ea"></x-lifecycle> Not required if Custom languages for Okta Email Templates is enabled. A `null` subject is replaced with a default value from one of the following in priority order:

            1. An existing default email customization, if one exists
            2. Okta-provided translated content for the specified language, if one exists
            3. Okta-provided translated content for the brand locale, if it's set
            4. Okta-provided content in English
          type: string
      required:
      - body
      - subject
      type: object
    EmailCustomization:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - properties:
          created:
            description: The UTC time at which this email customization was created.
            format: date-time
            readOnly: true
            type: string
          id:
            description: A unique identifier for this email customization
            readOnly: true
            type: string
          isDefault:
            description: Whether this is the default customization for the email template.
              Each customized email template must have exactly one default customization.
              Defaults to `true` for the first customization and `false` thereafter.
            type: boolean
          language:
            $ref: '#/components/schemas/Language'
          lastUpdated:
            description: The UTC time at which this email customization was last updated.
            format: date-time
            readOnly: true
            type: string
          _links:
            $ref: '#/components/schemas/EmailCustomization_allOf__links'
        required:
        - language
        type: object
    EmailDefaultContent:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - properties:
          _links:
            $ref: '#/components/schemas/EmailDefaultContent_allOf__links'
        type: object
    EmailDomain:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
      example:
        brandId: brandId
        domain: domain
        validationSubdomain: mail
      properties:
        brandId:
          type: string
        domain:
          type: string
        validationSubdomain:
          default: mail
          description: Subdomain for the email sender's custom mail domain. Specify
            your subdomain when you configure a custom mail domain.
          type: string
      required:
      - brandId
      - domain
      type: object
    EmailDomainDNSRecord:
      example:
        fqdn: fqdn
        recordType: recordType
        verificationValue: verificationValue
      properties:
        fqdn:
          type: string
        recordType:
          type: string
          x-okta-known-values:
          - CNAME
          - TXT
        verificationValue:
          type: string
      type: object
    EmailDomainDNSRecordType:
      type: string
      x-okta-known-values:
      - CNAME
      - TXT
    EmailDomainResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
      example:
        dnsValidationRecords:
        - fqdn: fqdn
          recordType: recordType
          verificationValue: verificationValue
        - fqdn: fqdn
          recordType: recordType
          verificationValue: verificationValue
        domain: domain
        id: id
        validationSubdomain: mail
        validationStatus: validationStatus
      properties:
        dnsValidationRecords:
          items:
            $ref: '#/components/schemas/EmailDomainDNSRecord'
          type: array
        domain:
          type: string
        id:
          type: string
        validationStatus:
          type: string
          x-okta-known-values:
          - DELETED
          - ERROR
          - NOT_STARTED
          - POLLING
          - VERIFIED
        validationSubdomain:
          default: mail
          description: The subdomain for the email sender's custom mail domain
          type: string
      type: object
    EmailDomainResponseWithEmbedded:
      example:
        dnsValidationRecords:
        - fqdn: fqdn
          recordType: recordType
          verificationValue: verificationValue
        - fqdn: fqdn
          recordType: recordType
          verificationValue: verificationValue
        _embedded:
          brands:
          - agreeToCustomPrivacyPolicy: true
            defaultApp:
              appInstanceId: appInstanceId
              appLinkName: appLinkName
              classicApplicationUri: classicApplicationUri
            isDefault: true
            removePoweredByOkta: false
            name: name
            id: id
            emailDomainId: emailDomainId
            locale: locale
            customPrivacyPolicyUrl: customPrivacyPolicyUrl
          - agreeToCustomPrivacyPolicy: true
            defaultApp:
              appInstanceId: appInstanceId
              appLinkName: appLinkName
              classicApplicationUri: classicApplicationUri
            isDefault: true
            removePoweredByOkta: false
            name: name
            id: id
            emailDomainId: emailDomainId
            locale: locale
            customPrivacyPolicyUrl: customPrivacyPolicyUrl
        displayName: displayName
        domain: domain
        id: id
        validationSubdomain: mail
        userName: userName
        validationStatus: validationStatus
      properties:
        displayName:
          type: string
        userName:
          type: string
        dnsValidationRecords:
          items:
            $ref: '#/components/schemas/EmailDomainDNSRecord'
          type: array
        domain:
          type: string
        id:
          type: string
        validationStatus:
          type: string
          x-okta-known-values:
          - DELETED
          - ERROR
          - NOT_STARTED
          - POLLING
          - VERIFIED
        validationSubdomain:
          default: mail
          description: The subdomain for the email sender's custom mail domain
          type: string
        _embedded:
          $ref: '#/components/schemas/EmailDomainResponseWithEmbedded__embedded'
      type: object
    EmailDomainStatus:
      type: string
      x-okta-known-values:
      - DELETED
      - ERROR
      - NOT_STARTED
      - POLLING
      - VERIFIED
    EmailPreview:
      example:
        _links: null
        subject: subject
        body: body
      properties:
        body:
          description: The email's HTML body
          readOnly: true
          type: string
        subject:
          description: The email's subject
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/EmailPreview__links'
      type: object
    EmailServerListResponse:
      example:
        email-servers:
        - null
        - null
      properties:
        email-servers:
          items:
            $ref: '#/components/schemas/EmailServerResponse'
          type: array
      type: object
    EmailServerPost:
      allOf:
      - $ref: '#/components/schemas/EmailServerRequest'
      - required:
        - alias
        - host
        - password
        - port
        - username
    EmailServerRequest:
      allOf:
      - $ref: '#/components/schemas/BaseEmailServer'
      - properties:
          password:
            description: Password used to access your SMTP server
            type: string
    EmailServerResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEmailServer'
      - properties:
          id:
            description: ID of your SMTP server
            type: string
    EmailSettings:
      example:
        recipients: ALL_USERS
      properties:
        recipients:
          enum:
          - ALL_USERS
          - ADMINS_ONLY
          - NO_USERS
          type: string
      required:
      - recipients
      type: object
    EmailSettingsResponse:
      example:
        _links: null
        recipients: ALL_USERS
      properties:
        recipients:
          enum:
          - ALL_USERS
          - ADMINS_ONLY
          - NO_USERS
          type: string
        _links:
          $ref: '#/components/schemas/EmailSettingsResponse__links'
      type: object
    EmailTemplateResponse:
      example:
        _embedded:
          customizationCount: 0
          settings:
            _links: null
            recipients: ALL_USERS
        _links: null
        name: name
      properties:
        name:
          description: The name of this email template
          readOnly: true
          type: string
        _embedded:
          $ref: '#/components/schemas/EmailTemplateResponse__embedded'
        _links:
          $ref: '#/components/schemas/EmailTemplateResponse__links'
      type: object
    EmailTemplateTouchPointVariant:
      default: OKTA_DEFAULT
      description: |
        Variant for email templates. You can publish a theme for email templates with different combinations of assets. Variants are preset combinations of those assets.
      type: string
      x-enumDescriptions:
        FULL_THEME: Uses the Okta logo and Okta colors in email templates
        OKTA_DEFAULT: Uses the logo from the Theme. Uses `primaryColorHex` as the
          background color for buttons.
      x-okta-known-values:
      - FULL_THEME
      - OKTA_DEFAULT
    EmailTestAddresses:
      example:
        from: sender@host.com
        to: receiver@host.com
      properties:
        from:
          description: Email address that sends test emails
          example: sender@host.com
          type: string
        to:
          description: Email address that receives test emails
          example: receiver@host.com
          type: string
      required:
      - from
      - to
      type: object
    EnabledStatus:
      description: Setting status
      type: string
      x-okta-known-values:
      - DISABLED
      - ENABLED
    EndUserDashboardTouchPointVariant:
      default: OKTA_DEFAULT
      description: |
        Variant for the Okta End-User Dashboard. You can publish a theme for end-user dashboard with different combinations of assets. Variants are preset combinations of those assets.
      type: string
      x-enumDescriptions:
        FULL_THEME: Uses the logo and favicon from the Theme. Uses `primaryColorHex`
          for the logo and the side navigation bar background color.
        LOGO_ON_FULL_WHITE_BACKGROUND: Uses the logo and favicon from the Theme. Uses
          white background color for the logo and the side navigation bar background
          color.
        OKTA_DEFAULT: Uses the Okta logo and favicon. Uses a white background color
          for the logo and the side navigation bar background color.
        WHITE_LOGO_BACKGROUND: "Uses the logo and favicon from the Theme, with a white\
          \ background color for the logo. Uses `primaryColorHex` for the side navigation\
          \ bar background color."
      x-okta-known-values:
      - FULL_THEME
      - LOGO_ON_FULL_WHITE_BACKGROUND
      - OKTA_DEFAULT
      - WHITE_LOGO_BACKGROUND
    EndpointAuthMethod:
      description: Requested authentication method for OAuth 2.0 endpoints.
      type: string
      x-okta-known-values:
      - client_secret_basic
      - client_secret_jwt
      - client_secret_post
      - none
      - private_key_jwt
    EnhancedDynamicNetworkZone:
      allOf:
      - $ref: '#/components/schemas/NetworkZone'
      - title: Enhanced Dynamic Network Zone
      - properties:
          asns:
            $ref: '#/components/schemas/EnhancedDynamicNetworkZone_allOf_asns'
          locations:
            $ref: '#/components/schemas/EnhancedDynamicNetworkZone_allOf_locations'
          ipServiceCategories:
            $ref: '#/components/schemas/EnhancedDynamicNetworkZone_allOf_ipServiceCategories'
        type: object
        x-okta-lifecycle:
          lifecycle: EA
          isGenerallyAvailable: false
          SKUs: []
    EnrollmentActivationRequest:
      description: Enrollment Initialization Request
      properties:
        credResponses:
          description: List of credential responses from the fulfillment provider
          items:
            $ref: '#/components/schemas/WebAuthnCredResponse'
          type: array
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        pinResponseJwe:
          description: Encrypted JWE of PIN response from the fulfillment provider
          type: string
        serial:
          description: Serial number of the YubiKey
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
        version:
          description: Firmware version of the YubiKey
          type: string
        yubicoSigningJwks:
          description: List of usable signing keys from Yubico (in JWKS format) used
            to verify the JWS inside the JWE
          items:
            $ref: '#/components/schemas/ECKeyJWK'
          type: array
      type: object
    EnrollmentActivationResponse:
      description: Enrollment Initialization Response
      properties:
        authenticatorEnrollmentIds:
          description: List of IDs for preregistered WebAuthn Factors in Okta
          items:
            type: string
          type: array
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
      type: object
    EnrollmentInitializationRequest:
      description: Enrollment Initialization Request
      properties:
        enrollmentRpIds:
          description: List of Relying Party hostnames to register on the YubiKey.
          items:
            type: string
          type: array
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
        yubicoTransportKeyJWK:
          $ref: '#/components/schemas/ECKeyJWK'
      type: object
    EnrollmentInitializationResponse:
      description: "Yubico Transport Key in the form of a JWK, used to encrypt our\
        \ fulfillment request to Yubico. The currently agreed protocol uses P-384."
      properties:
        credRequests:
          description: List of credential requests for the fulfillment provider
          items:
            $ref: '#/components/schemas/WebAuthnCredRequest'
          type: array
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        pinRequestJwe:
          description: Encrypted JWE of PIN request for the fulfillment provider
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
      type: object
    EntitlementValue:
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        _links:
          type: object
      type: object
    EntitlementValuesResponse:
      properties:
        entitlementValues:
          items:
            $ref: '#/components/schemas/EntitlementValue'
          type: array
        _links:
          $ref: '#/components/schemas/BundleEntitlementsResponse__links'
      type: object
    EntityRiskPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - type: object
      properties:
        conditions:
          description: Policy conditions aren't supported for this policy types.
          nullable: true
          type: string
    EntityRiskPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/EntityRiskPolicyRule_allOf_actions'
          conditions:
            $ref: '#/components/schemas/EntityRiskPolicyRule_allOf_conditions'
        type: object
    EntityRiskPolicyRuleActionRunWorkflow:
      properties:
        action:
          enum:
          - RUN_WORKFLOW
          type: string
        workflow:
          $ref: '#/components/schemas/ContinuousAccessPolicyRuleRunWorkflow_workflow'
      type: object
    EntityRiskPolicyRuleActionTerminateAllSessions:
      properties:
        action:
          description: This action revokes or terminates all of the user's active
            sessions.
          enum:
          - TERMINATE_ALL_SESSIONS
          type: string
      type: object
    EntityRiskPolicyRuleActionsObject:
      discriminator:
        mapping:
          RUN_WORKFLOW: '#/components/schemas/EntityRiskPolicyRuleActionRunWorkflow'
          TERMINATE_ALL_SESSIONS: '#/components/schemas/EntityRiskPolicyRuleActionTerminateAllSessions'
        propertyName: action
      properties:
        action:
          enum:
          - RUN_WORKFLOW
          - TERMINATE_ALL_SESSIONS
          type: string
      type: object
    Error:
      properties:
        errorCauses:
          items:
            $ref: '#/components/schemas/ErrorCause'
          type: array
        errorCode:
          description: An Okta code for this type of error
          type: string
        errorId:
          description: A unique identifier for this error. This can be used by Okta
            Support to help with troubleshooting.
          type: string
        errorLink:
          description: An Okta code for this type of error
          type: string
        errorSummary:
          description: A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific error.
          type: string
      title: Error
      type: object
    ErrorCause:
      properties:
        errorSummary:
          type: string
      type: object
    ErrorPage:
      allOf:
      - $ref: '#/components/schemas/CustomizablePage'
      - properties:
          contentSecurityPolicySetting:
            $ref: '#/components/schemas/ContentSecurityPolicySetting'
        type: object
    ErrorPageTouchPointVariant:
      default: OKTA_DEFAULT
      description: |
        Variant for the error page. You can publish a theme for error page with different combinations of assets. Variants are preset combinations of those assets.
      type: string
      x-enumDescriptions:
        BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the Theme"
        BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme. Uses
          `secondaryColorHex` as the background color for the error page.
        OKTA_DEFAULT: "Uses the Okta logo, favicon, and background color"
      x-okta-known-values:
      - BACKGROUND_IMAGE
      - BACKGROUND_SECONDARY_COLOR
      - OKTA_DEFAULT
    EventHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        verificationStatus: verificationStatus
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: type
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method: method
            authScheme:
              type: type
              value: value
              key: key
            uri: uri
          version: version
        name: name
        description: description
        id: id
        events:
          filter:
            eventFilterMap:
            - condition:
                expression: expression
                version: version
              event: event
            - condition:
                expression: expression
                version: version
              event: event
            type: type
          type: type
          items:
          - items
          - items
        status: ACTIVE
      properties:
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          description: Timestamp of the event hook creation
          format: date-time
          readOnly: true
          type: string
        createdBy:
          description: The ID of the user who created the event hook
          readOnly: true
          type: string
        description:
          description: Description of the event hook
          nullable: true
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          description: Unique key for the event hook
          readOnly: true
          type: string
        lastUpdated:
          description: Date of the last event hook update
          format: date-time
          readOnly: true
          type: string
        name:
          description: Display name for the event hook
          type: string
        status:
          description: Status of the event hook
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
        verificationStatus:
          description: Verification status of the event hook. `UNVERIFIED` event hooks
            won't receive any events.
          readOnly: true
          type: string
          x-okta-known-values:
          - UNVERIFIED
          - VERIFIED
        _links:
          $ref: '#/components/schemas/EventHook__links'
      required:
      - channel
      - events
      - name
      type: object
    EventHookChannel:
      example:
        type: type
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method: method
          authScheme:
            type: type
            value: value
            key: key
          uri: uri
        version: version
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          description: The channel type. Currently supports `HTTP`.
          type: string
          x-okta-known-values:
          - HTTP
        version:
          description: Version of the channel. Currently the only supported version
            is `1.0.0``.
          type: string
      required:
      - config
      - type
      - version
      type: object
    EventHookChannelConfig:
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method: method
        authScheme:
          type: type
          value: value
          key: key
        uri: uri
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          description: |-
            Optional list of key/value pairs for headers that can be sent with the request to the external service. For example,
            `X-Other-Header` is an example of an optional header, with a value of `my-header-value`, that you want Okta to pass to your
            external service.
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
          type: array
        method:
          description: The method of the Okta event hook request
          readOnly: true
          type: string
        uri:
          description: The external service endpoint called to execute the event hook
            handler
          type: string
      required:
      - uri
      type: object
    EventHookChannelConfigAuthScheme:
      description: |-
        The authentication scheme used for this request.

        To use Basic Auth for authentication, set `type` to `HEADER`,
        `key` to `Authorization`, and `value` to the Base64-encoded string of "username:password". Ensure that you include
        the scheme (including space) as part of the `value` parameter. For example, `Basic YWRtaW46c3VwZXJzZWNyZXQ=`. See
        [HTTP Basic Authentication](/books/api-security/authn/api-authentication-options/#http-basic-authentication).
      example:
        type: type
        value: value
        key: key
      properties:
        key:
          description: The name for the authorization header
          type: string
        type:
          description: The authentication scheme type. Currently only supports `HEADER`.
          type: string
          x-okta-known-values:
          - HEADER
        value:
          description: |-
            The header value. This secret key is passed to your external service endpoint for security verification.
            This property is not returned in the response.
          type: string
          writeOnly: true
      type: object
    EventHookChannelConfigAuthSchemeType:
      description: The authentication scheme type. Currently only supports `HEADER`.
      type: string
      x-okta-known-values:
      - HEADER
    EventHookChannelConfigHeader:
      example:
        value: value
        key: key
      nullable: true
      properties:
        key:
          description: The optional field or header name
          type: string
        value:
          description: The value for the key
          type: string
      type: object
    EventHookChannelType:
      description: The channel type. Currently supports `HTTP`.
      type: string
      x-okta-known-values:
      - HTTP
    EventHookFilterMap:
      description: The object that maps the filter to the event type
      items:
        $ref: '#/components/schemas/EventHookFilterMapObject'
      type: array
    EventHookFilterMapObject:
      example:
        condition:
          expression: expression
          version: version
        event: event
      properties:
        condition:
          $ref: '#/components/schemas/EventHookFilterMapObjectCondition'
        event:
          description: The filtered event type
          type: string
      type: object
    EventHookFilterMapObjectCondition:
      example:
        expression: expression
        version: version
      properties:
        expression:
          description: The Okta Expression language statement that filters the event
            type
          type: string
        version:
          description: Internal field
          nullable: true
          readOnly: true
          type: string
      type: object
    EventHookFilters:
      description: |-
        The optional filter defined on a specific event type

        > **Note:** Event hook filters is a [self-service Early Access (EA)](/openapi/okta-management/guides/release-lifecycle/#early-access-ea) to enable.
        If you want to disable this feature, it's recommended to first remove all event filters.
      example:
        eventFilterMap:
        - condition:
            expression: expression
            version: version
          event: event
        - condition:
            expression: expression
            version: version
          event: event
        type: type
      nullable: true
      properties:
        eventFilterMap:
          description: The object that maps the filter to the event type
          items:
            $ref: '#/components/schemas/EventHookFilterMapObject'
          type: array
        type:
          description: The type of filter. Currently only supports `EXPRESSION_LANGUAGE`
          readOnly: true
          type: string
      type: object
    EventHookSubscribedEventTypes:
      description: |-
        The subscribed event types that trigger the event hook. When you register an event hook
        you need to specify which events you want to subscribe to. To see the list of event types
        currently eligible for use in event hooks, use the [Event Types catalog](/docs/reference/api/event-types/#catalog)
        and search with the parameter `event-hook-eligible`.
      items:
        type: string
      type: array
    EventHookVerificationStatus:
      description: Verification status of the event hook. `UNVERIFIED` event hooks
        won't receive any events.
      readOnly: true
      type: string
      x-okta-known-values:
      - UNVERIFIED
      - VERIFIED
    EventSubscriptionType:
      description: The events object type. Currently supports `EVENT_TYPE`.
      type: string
      x-okta-known-values:
      - EVENT_TYPE
    EventSubscriptions:
      example:
        filter:
          eventFilterMap:
          - condition:
              expression: expression
              version: version
            event: event
          - condition:
              expression: expression
              version: version
            event: event
          type: type
        type: type
        items:
        - items
        - items
      properties:
        filter:
          $ref: '#/components/schemas/EventHookFilters'
        items:
          description: |-
            The subscribed event types that trigger the event hook. When you register an event hook
            you need to specify which events you want to subscribe to. To see the list of event types
            currently eligible for use in event hooks, use the [Event Types catalog](/docs/reference/api/event-types/#catalog)
            and search with the parameter `event-hook-eligible`.
          items:
            type: string
          type: array
        type:
          description: The events object type. Currently supports `EVENT_TYPE`.
          type: string
          x-okta-known-values:
          - EVENT_TYPE
      required:
      - items
      - type
      type: object
    Expression:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    FCMConfiguration:
      properties:
        fileName:
          description: (Optional) File name for Admin Console display
          type: string
        projectId:
          description: Project ID of FCM configuration
          readOnly: true
          type: string
        serviceAccountJson:
          description: "JSON containing the private service account key and service\
            \ account details. See [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)\
            \ for more information on creating service account keys in JSON."
          type: object
          writeOnly: true
    FCMPushProvider:
      allOf:
      - $ref: '#/components/schemas/PushProvider'
      - properties:
          configuration:
            $ref: '#/components/schemas/FCMConfiguration'
        type: object
    Feature:
      description: Specifies feature release cycle information
      example:
        stage:
          state: state
          value: value
        _links: null
        name: name
        description: description
        id: id
        type: type
        status: status
      properties:
        description:
          description: Brief description of the feature and what it provides
          type: string
        id:
          description: Unique identifier for this feature
          readOnly: true
          type: string
        name:
          description: Name of the feature
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          description: Setting status
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
        type:
          description: Type of feature
          type: string
          x-okta-known-values:
          - self-service
        _links:
          $ref: '#/components/schemas/Feature__links'
      type: object
    FeatureLifecycle:
      example: ENABLE
      type: string
      x-okta-known-values:
      - DISABLE
      - ENABLE
    FeatureStage:
      description: |-
        Current release cycle stage of a feature

        If a feature's stage value is `EA`, the state is `null` and not returned. If the value is `BETA`, the state is `OPEN` or `CLOSED` depending on whether the `BETA` feature is manageable.

        > **Note:** If a feature's stage is `OPEN BETA`, you can update it only in Preview cells. If a feature's stage is `CLOSED BETA`, you can disable it only in Preview cells.
      example:
        state: state
        value: value
      properties:
        state:
          description: Indicates the release state of the feature
          type: string
          x-okta-known-values:
          - CLOSED
          - OPEN
        value:
          description: Current release stage of the feature
          type: string
          x-okta-known-values:
          - BETA
          - EA
      type: object
    FeatureStageState:
      description: Indicates the release state of the feature
      type: string
      x-okta-known-values:
      - CLOSED
      - OPEN
    FeatureStageValue:
      description: Current release stage of the feature
      type: string
      x-okta-known-values:
      - BETA
      - EA
    FeatureType:
      description: Type of feature
      type: string
      x-okta-known-values:
      - self-service
    FipsEnum:
      type: string
      x-okta-known-values:
      - OPTIONAL
      - REQUIRED
    ForgotPasswordResponse:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
    FulfillmentData:
      description: Fulfillment provider details
      properties:
        customizationId:
          description: ID for the set of custom configurations of the requested Factor
          type: string
        inventoryProductId:
          description: ID for the specific inventory bucket of the requested Factor
          type: string
        productId:
          description: ID for the make and model of the requested Factor
          type: string
      type: object
    FulfillmentRequest:
      description: Fulfillment Request
      properties:
        fulfillmentData:
          $ref: '#/components/schemas/FulfillmentData'
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
      type: object
    GoogleApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - google
            example: google
            type: string
          signOnMode:
            enum:
            - BROWSER_PLUGIN
            - SAML_2_0
            example: BROWSER_PLUGIN
            type: string
          settings:
            $ref: '#/components/schemas/GoogleApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Google Workspace app (key name: `google`)

        To create a Google Workspace app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Google Workspace app only supports `BROWSER_PLUGIN` and `SAML_2_0` sign-on modes.
      example:
        name: google
        label: Sample Google App
        signOnMode: SAML_2_0
        settings:
          app:
            domain: my-company-domain
      title: Google Workspace
      x-tags:
      - Application
      x-okta-defined-as:
        name: google
    GoogleApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/GoogleApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    GoogleApplicationSettingsApplication:
      description: Google app instance properties
      properties:
        domain:
          description: Your Google company domain
          type: string
        rpId:
          description: RPID
          type: string
      required:
      - domain
      type: object
    GovernanceBundle:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        orn:
          type: string
        status:
          type: string
        _links:
          $ref: '#/components/schemas/GovernanceBundle__links'
      type: object
    GovernanceBundleCreateRequest:
      properties:
        description:
          type: string
        entitlements:
          items:
            $ref: '#/components/schemas/IAMBundleEntitlement'
          type: array
        name:
          type: string
      type: object
    GovernanceBundleUpdateRequest:
      properties:
        description:
          type: string
        entitlements:
          items:
            $ref: '#/components/schemas/IAMBundleEntitlement'
          type: array
        name:
          type: string
      type: object
    GovernanceBundlesResponse:
      properties:
        bundles:
          items:
            $ref: '#/components/schemas/GovernanceBundle'
          type: array
        _links:
          $ref: '#/components/schemas/GovernanceBundlesResponse__links'
      type: object
    GrantOrTokenStatus:
      description: Status
      example: ACTIVE
      readOnly: true
      type: string
      x-okta-known-values:
      - ACTIVE
      - REVOKED
    GrantType:
      description: Determines the mechanism Okta uses to authorize the creation of
        the tokens.
      type: string
      x-okta-known-values:
      - authorization_code
      - client_credentials
      - implicit
      - interaction_code
      - password
      - refresh_token
      - urn:ietf:params:oauth:grant-type:device_code
      - urn:ietf:params:oauth:grant-type:jwt-bearer
      - urn:ietf:params:oauth:grant-type:saml2-bearer
      - urn:ietf:params:oauth:grant-type:token-exchange
      - urn:openid:params:grant-type:ciba
      - urn:okta:params:oauth:grant-type:otp
      - urn:okta:params:oauth:grant-type:oob
      - http://auth0.com/oauth/grant-type/mfa-otp
      - http://auth0.com/oauth/grant-type/mfa-oob
    GrantTypePolicyRuleCondition:
      description: Array of grant types that this condition includes. Determines the
        mechanism that Okta uses to authorize the creation of the tokens.
      properties:
        include:
          description: Array of grant types that this condition includes.
          items:
            type: string
          type: array
      type: object
    Group:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastMembershipUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          name: name
          description: description
        objectClass:
        - objectClass
        - objectClass
        id: id
        type: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          type: string
          x-okta-known-values:
          - APP_GROUP
          - BUILT_IN
          - OKTA_GROUP
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/Group__links'
      type: object
    GroupAssignmentProfile:
      additionalProperties: true
      description: "Specifies the profile properties applied to [Application Users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/)\
        \ that are assigned to the app through group membership. \nSome reference\
        \ properties are imported from the target app and can't be configured. See\
        \ [profile](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response)."
      type: object
    GroupCondition:
      description: Specifies a set of Groups whose Users are to be included or excluded
      properties:
        exclude:
          description: Groups to be excluded
          items:
            type: string
          type: array
        include:
          description: Groups to be included
          items:
            type: string
          type: array
      type: object
    GroupMember:
      allOf:
      - $ref: '#/components/schemas/User'
      example:
        groupRuleId: guo56h6ux7ibCPl2G0g7
      properties:
        groupRuleId:
          description: The group rule ID
          example: guo56h6ux7ibCPl2G0g7
          readOnly: true
          type: string
      type: object
    GroupOwner:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        originType: originType
        originId: originId
        displayName: displayName
        id: id
        type: type
        resolved: true
      properties:
        displayName:
          description: The display name of the group owner
          readOnly: true
          type: string
        id:
          description: The `id` of the group owner
          type: string
        lastUpdated:
          description: Timestamp when the group owner was last updated
          format: date-time
          readOnly: true
          type: string
        originId:
          description: The ID of the app instance if the `originType` is `APPLICATION`.
            This value is `NULL` if `originType` is `OKTA_DIRECTORY`.
          type: string
        originType:
          description: The source where group ownership is managed
          type: string
          x-okta-known-values:
          - APPLICATION
          - OKTA_DIRECTORY
        resolved:
          description: "If `originType`is APPLICATION, this parameter is set to `FALSE`\
            \ until the owner’s `originId` is reconciled with an associated Okta ID."
          type: boolean
        type:
          description: The entity type of the owner
          type: string
          x-okta-known-values:
          - GROUP
          - USER
      type: object
    GroupOwnerOriginType:
      description: The source where group ownership is managed
      type: string
      x-okta-known-values:
      - APPLICATION
      - OKTA_DIRECTORY
    GroupOwnerType:
      description: The entity type of the owner
      type: string
      x-okta-known-values:
      - GROUP
      - USER
    GroupPolicyRuleCondition:
      description: Specifies a set of Groups whose Users are to be included or excluded
      properties:
        exclude:
          description: Groups to be excluded
          items:
            type: string
          type: array
        include:
          description: Groups to be included
          items:
            type: string
          type: array
      type: object
    GroupProfile:
      additionalProperties: true
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-okta-extensible: true
    GroupRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            type: type
            value: value
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        type: type
        actions:
          assignUserToGroups:
            groupIds:
            - groupIds
            - groupIds
        status: status
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
          - INVALID
        type:
          type: string
      type: object
    GroupRuleAction:
      example:
        assignUserToGroups:
          groupIds:
          - groupIds
          - groupIds
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      type: object
    GroupRuleConditions:
      example:
        expression:
          type: type
          value: value
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      type: object
    GroupRuleExpression:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    GroupRuleGroupAssignment:
      example:
        groupIds:
        - groupIds
        - groupIds
      properties:
        groupIds:
          items:
            type: string
          type: array
      type: object
    GroupRuleGroupCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupRulePeopleCondition:
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      type: object
    GroupRuleStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
      - INVALID
    GroupRuleUserCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          self: null
        created: created
        name: name
        description: description
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              name:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              description:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
      x-okta-allow-null-property-value-for-updates: true
    GroupSchemaAttribute:
      example:
        minLength: 6
        externalNamespace: externalNamespace
        description: description
        union: union
        title: title
        type: type
        enum:
        - enum
        - enum
        required: true
        master:
          priority:
          - type: type
            value: value
          - type: type
            value: value
          type: type
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        externalName: externalName
        scope: scope
        unique: unique
        mutability: mutability
        items:
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          type: type
          enum:
          - enum
          - enum
        maxLength: 0
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          type: string
          x-okta-known-values:
          - NONE
          - SELF
        title:
          type: string
        type:
          type: string
          x-okta-known-values:
          - array
          - boolean
          - integer
          - number
          - string
        union:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENABLE
        unique:
          type: string
      type: object
    GroupSchemaBase:
      example:
        id: id
        type: type
        properties:
          name:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          description:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    GroupSchemaBaseProperties:
      example:
        name:
          minLength: 6
          externalNamespace: externalNamespace
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        description:
          minLength: 6
          externalNamespace: externalNamespace
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
      properties:
        description:
          $ref: '#/components/schemas/GroupSchemaAttribute'
        name:
          $ref: '#/components/schemas/GroupSchemaAttribute'
      type: object
    GroupSchemaCustom:
      example:
        id: id
        type: type
        properties:
          key:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    GroupSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            name:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            description:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
      type: object
    GroupType:
      type: string
      x-okta-known-values:
      - APP_GROUP
      - BUILT_IN
      - OKTA_GROUP
    HookKey:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          e: e
          _links:
            self: null
          created: 2000-01-23T04:56:07.000+00:00
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          expiresAt: 2000-01-23T04:56:07.000+00:00
          "n": "n"
          kty: kty
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          x5t#S256: x5t#S256
          x5t: x5t
          key_ops:
          - key_ops
          - key_ops
          x5u: x5u
          alg: alg
          status: status
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        keyId: keyId
        id: id
        isUsed: isUsed
      properties:
        created:
          description: Timestamp when the key was created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: The unique identifier for the key.
          readOnly: true
          type: string
        isUsed:
          description: Whether this key is currently in use by other hooks.
          format: boolean
          type: string
        keyId:
          description: The alias of the public key.
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the key was updated.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Display name of the key.
          readOnly: false
          type: string
        _embedded:
          $ref: '#/components/schemas/JsonWebKey'
      type: object
    HostedPage:
      example:
        type: type
        url: url
      properties:
        type:
          type: string
          x-okta-known-values:
          - EXTERNALLY_HOSTED
          - OKTA_DEFAULT
        url:
          type: string
      required:
      - type
      type: object
    HostedPageType:
      type: string
      x-okta-known-values:
      - EXTERNALLY_HOSTED
      - OKTA_DEFAULT
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      example:
        allow:
        - null
        - null
      properties:
        allow:
          items:
            $ref: '#/components/schemas/HttpMethod'
          type: array
      type: object
    HrefHintsGuidanceObject:
      allOf:
      - $ref: '#/components/schemas/HrefHints'
      - description: Describes allowed HTTP verbs and guidance for the `href`
      - properties:
          guidance:
            description: |
              Specifies the URI to invoke for granting scope consent required to complete the OAuth 2.0 connection
            items:
              type: string
            type: array
        type: object
    HrefObject:
      additionalProperties: true
      example:
        templated: true
        hints:
          allow:
          - null
          - null
        name: name
        href: href
        type: type
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
        href:
          description: Link URI
          type: string
        name:
          description: Link name
          type: string
        templated:
          description: Indicates whether the Link Object's `href` property is a URI
            template.
          type: boolean
        type:
          description: "The media type of the link. If omitted, it is implicitly `application/json`."
          type: string
      readOnly: true
      required:
      - href
      title: Link Object
      type: object
    HrefObjectActivateLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to activate the resource
    HrefObjectAppLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the app resource
    HrefObjectAuthorizeLink:
      description: Link to authorize scopes
      properties:
        hints:
          $ref: '#/components/schemas/HrefHintsGuidanceObject'
        href:
          description: Link URI
          type: string
      readOnly: true
      required:
      - href
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    HrefObjectClientLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the client resource
    HrefObjectDeactivateLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to deactivate the resource
    HrefObjectDeleteLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to delete the resource
    HrefObjectGroupLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the group resource
    HrefObjectLogoLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the logo resource
    HrefObjectMappingsLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the mappings resource
    HrefObjectRulesLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the rules resource
    HrefObjectSelfLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the resource (self)
    HrefObjectSuspendLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to suspend the resource
    HrefObjectUnsuspendLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to unsuspend the resource
    HrefObjectUserLink:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the user resource
    HttpMethod:
      type: string
      x-okta-known-values:
      - DELETE
      - GET
      - POST
      - PUT
    IAMBundleEntitlement:
      properties:
        resourceSets:
          items:
            type: string
          type: array
        role:
          type: string
        targets:
          items:
            type: string
          type: array
      type: object
    IPNetworkZone:
      allOf:
      - $ref: '#/components/schemas/NetworkZone'
      - title: IP Network Zone
      - properties:
          gateways:
            description: |-
              The IP addresses (range or CIDR form) for an IP Network Zone.
              The maximum array length is 150 entries for admin-created IP zones, 1000 entries for IP blocklist zones, and 5000 entries for the default system IP Zone.
            items:
              $ref: '#/components/schemas/NetworkZoneAddress'
            type: array
          proxies:
            description: |-
              The IP addresses (range or CIDR form) that are allowed to forward a request from gateway addresses for an IP Network Zone.
              These proxies are automatically trusted by Threat Insights and used to identify the client IP of a request.
              The maximum array length is 150 entries for admin-created zones and 5000 entries for the default system IP Zone.
            items:
              $ref: '#/components/schemas/NetworkZoneAddress'
            nullable: true
            type: array
        type: object
    IPServiceCategory:
      description: "An IP service offered by a provider, such as a proxy or VPN"
      type: string
      x-okta-known-values:
      - ALL_ANONYMIZERS
      - ALL_ANONYMIZERS_EXCEPT_TOR
      - ALL_IP_SERVICES
      - ALL_PROXIES_VPNS
      - ANONYMIZER_TOR
      - APPLE_ICLOUD_RELAY_PROXY
      - AVAST_VPN
      - GLOBALPROTECT_VPN
      - GOOGLE_VPN
      - MULLVAD_VPN
      - NORD_VPN
      - OXYLABS_PROXY
      - SAMSUNG_VPN
      - SURFSHARK_VPN
      - SYMANTEC_VPN
      - TRENDMICRO_VPN
      - ULTRASURF_VPN
    IamRole:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
      properties:
        created:
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the role
          type: string
        id:
          description: Unique key for the role
          readOnly: true
          type: string
        label:
          description: Unique label for the role
          type: string
        lastUpdated:
          description: Timestamp when the role was last updated
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/IamRole__links'
      required:
      - description
      - label
      type: object
    IamRoles:
      example:
        _links:
          next:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
        roles:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          label: label
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          label: label
      properties:
        roles:
          items:
            $ref: '#/components/schemas/IamRole'
          type: array
        _links:
          $ref: '#/components/schemas/LinksNext'
      type: object
    IdentityProvider:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        protocol:
          algorithms:
            request:
              signature:
                scope: scope
                algorithm: algorithm
            response:
              signature:
                scope: scope
                algorithm: algorithm
          relayState:
            format: format
          settings:
            nameFormat: nameFormat
          endpoints:
            acs:
              destination: destination
              binding: binding
              type: type
              url: url
            authorization:
              destination: destination
              binding: binding
              type: type
              url: url
            userInfo:
              destination: destination
              binding: binding
              type: type
              url: url
            metadata:
              destination: destination
              binding: binding
              type: type
              url: url
            jwks:
              destination: destination
              binding: binding
              type: type
              url: url
            slo:
              destination: destination
              binding: binding
              type: type
              url: url
            sso:
              destination: destination
              binding: binding
              type: type
              url: url
            token:
              destination: destination
              binding: binding
              type: type
              url: url
          credentials:
            trust:
              revocation: revocation
              audience: audience
              revocationCacheLifetime: 0
              kid: kid
              issuer: issuer
            client:
              pkce_required: true
              client_secret: client_secret
              client_id: client_id
            signing:
              kid: kid
          scopes:
          - scopes
          - scopes
          type: type
          issuer:
            destination: destination
            binding: binding
            type: type
            url: url
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        issuerMode: issuerMode
        properties:
          additionalAmr:
          - additionalAmr
          - additionalAmr
        policy: null
        status: status
      properties:
        created:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          type: string
          x-okta-known-values:
          - CUSTOM_URL
          - DYNAMIC
          - ORG_URL
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        properties:
          $ref: '#/components/schemas/IdentityProviderProperties'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - AgentlessDSSO
          - FACEBOOK
          - GOOGLE
          - IWA
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - SAML2
          - X509
        _links:
          $ref: '#/components/schemas/IdentityProvider__links'
      type: object
    IdentityProviderApplicationUser:
      example:
        lastUpdated: lastUpdated
        _embedded:
          key: "{}"
        _links:
          self: null
        created: created
        profile:
          key: "{}"
        externalId: externalId
        id: id
      properties:
        created:
          type: string
        externalId:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    IdentityProviderCredentials:
      example:
        trust:
          revocation: revocation
          audience: audience
          revocationCacheLifetime: 0
          kid: kid
          issuer: issuer
        client:
          pkce_required: true
          client_secret: client_secret
          client_id: client_id
        signing:
          kid: kid
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
      type: object
    IdentityProviderCredentialsClient:
      example:
        pkce_required: true
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        pkce_required:
          description: Require Proof Key for Code Exchange (PKCE) for additional verification
          type: boolean
      type: object
    IdentityProviderCredentialsSigning:
      example:
        kid: kid
      properties:
        kid:
          type: string
      type: object
    IdentityProviderCredentialsTrust:
      example:
        revocation: revocation
        audience: audience
        revocationCacheLifetime: 0
        kid: kid
        issuer: issuer
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          type: string
          x-okta-known-values:
          - CRL
          - DELTA_CRL
          - OCSP
        revocationCacheLifetime:
          type: integer
      type: object
    IdentityProviderCredentialsTrustRevocation:
      type: string
      x-okta-known-values:
      - CRL
      - DELTA_CRL
      - OCSP
    IdentityProviderPolicy:
      allOf:
      - properties:
          accountLink:
            $ref: '#/components/schemas/PolicyAccountLink'
          mapAMRClaims:
            default: false
            description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle>
              <x-lifecycle class="oie"></x-lifecycle></div>Enable mapping AMR from
              IdP to Okta to downstream apps
            type: boolean
            x-okta-lifecycle:
              lifecycle: EA
              isGenerallyAvailable: false
              SKUs:
              - Okta Identity Engine
          maxClockSkew:
            type: integer
          provisioning:
            $ref: '#/components/schemas/Provisioning'
          subject:
            $ref: '#/components/schemas/PolicySubject'
        type: object
    IdentityProviderPolicyProvider:
      type: string
      x-okta-known-values:
      - ANY
      - OKTA
      - SPECIFIC_IDP
    IdentityProviderPolicyRuleCondition:
      properties:
        idpIds:
          items:
            type: string
          type: array
        provider:
          type: string
          x-okta-known-values:
          - ANY
          - OKTA
          - SPECIFIC_IDP
      type: object
    IdentityProviderProperties:
      example:
        additionalAmr:
        - additionalAmr
        - additionalAmr
      nullable: true
      properties:
        additionalAmr:
          items:
            type: string
          nullable: true
          type: array
      type: object
    IdentityProviderType:
      type: string
      x-okta-known-values:
      - AgentlessDSSO
      - FACEBOOK
      - GOOGLE
      - IWA
      - LINKEDIN
      - MICROSOFT
      - OIDC
      - OKTA
      - SAML2
      - X509
    IdentitySourceSession:
      example:
        identitySourceId: identitySourceId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        importType: importType
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        identitySourceId:
          readOnly: true
          type: string
        importType:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          type: string
          x-okta-known-values:
          - CLOSED
          - COMPLETED
          - CREATED
          - ERROR
          - EXPIRED
          - IN_PROGRESS
          - TRIGGERED
      type: object
    IdentitySourceSessionStatus:
      type: string
      x-okta-known-values:
      - CLOSED
      - COMPLETED
      - CREATED
      - ERROR
      - EXPIRED
      - IN_PROGRESS
      - TRIGGERED
    IdentitySourceUserProfileForDelete:
      example:
        externalId: externalId
      properties:
        externalId:
          maxLength: 512
          type: string
      type: object
    IdentitySourceUserProfileForUpsert:
      additionalProperties: {}
      example:
        firstName: firstName
        lastName: lastName
        mobilePhone: mobilePhone
        secondEmail: secondEmail
        userName: userName
        email: email
        homeAddress: homeAddress
      properties:
        email:
          format: email
          maxLength: 100
          minLength: 5
          type: string
        firstName:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        homeAddress:
          maxLength: 4096
          nullable: true
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        mobilePhone:
          maxLength: 100
          nullable: true
          type: string
        secondEmail:
          format: email
          maxLength: 100
          minLength: 5
          type: string
        userName:
          maxLength: 100
          type: string
      type: object
    IdpDiscoveryPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            nullable: true
            type: object
        type: object
    IdpDiscoveryPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/IdpPolicyRuleAction'
          conditions:
            $ref: '#/components/schemas/IdpDiscoveryPolicyRuleCondition'
        type: object
    IdpDiscoveryPolicyRuleCondition:
      allOf:
      - properties:
          app:
            $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          userIdentifier:
            $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
          platform:
            $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        type: object
    IdpPolicyRuleAction:
      properties:
        idp:
          $ref: '#/components/schemas/IdpPolicyRuleAction_idp'
      type: object
    IdpPolicyRuleActionMatchCriteria:
      properties:
        propertyName:
          description: The IdP property that the evaluated string should match to
          type: string
        providerExpression:
          description: |
            You can provide an Okta Expression Language expression with the Login Context that's evaluated with the IdP. For example, the value `login.identifier` refers to the user's username. If the user is signing in with the username `john.doe@mycompany.com`, the expression `login.identifier.substringAfter(@))` is evaluated to the domain name of the user, for example: `mycompany.com`.
          type: string
      type: object
    IdpPolicyRuleActionProvider:
      properties:
        id:
          description: "IdP types of `OKTA`, `AgentlessDSSO`, and `IWA` don't require\
            \ an ID."
          type: string
        name:
          description: Provider `name` in Okta. Optional. Supported in `IDENTITY ENGINE`.
          type: string
        type:
          type: string
          x-okta-known-values:
          - AgentlessDSSO
          - FACEBOOK
          - GOOGLE
          - IWA
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - SAML2
          - X509
      type: object
    IdpSelectionType:
      type: string
      x-okta-known-values:
      - DYNAMIC
      - SPECIFIC
    IframeEmbedScopeAllowedApps:
      type: string
      x-okta-known-values:
      - OKTA_ENDUSER
    ImageUploadResponse:
      example:
        url: url
      properties:
        url:
          readOnly: true
          type: string
      type: object
    ImportScheduleObject:
      description: Import schedule configuration
      properties:
        fullImport:
          $ref: '#/components/schemas/ImportScheduleObject_fullImport'
        incrementalImport:
          $ref: '#/components/schemas/ImportScheduleObject_incrementalImport'
        status:
          description: Setting status
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
      type: object
    ImportScheduleSettings:
      properties:
        expression:
          description: The import schedule in UNIX cron format
          example: "00 21 * * Mon,Thu,Fri,Sat"
          type: string
        timezone:
          description: The import schedule time zone in Internet Assigned Numbers
            Authority (IANA) time zone name format
          example: America/Los_Angeles
          maxLength: 64
          minLength: 1
          type: string
      required:
      - expression
      type: object
    ImportUsernameObject:
      description: Determines the Okta username for the imported user
      properties:
        userNameExpression:
          description: "For `usernameFormat=CUSTOM`, specifies the Okta Expression\
            \ Language statement for a username format that imported users use to\
            \ sign in to Okta"
          type: string
        usernameFormat:
          default: EMAIL
          description: Determines the username format when users sign in to Okta
          enum:
          - EMAIL
          - CUSTOM
          type: string
      required:
      - usernameFormat
      type: object
    InactivityPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    InboundProvisioningApplicationFeature:
      allOf:
      - $ref: '#/components/schemas/ApplicationFeature'
      - type: object
      - properties:
          capabilities:
            $ref: '#/components/schemas/CapabilitiesInboundProvisioningObject'
    InlineHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: metadata
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: type
          version: version
        name: name
        id: id
        type: type
        version: version
        status: status
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        metadata:
          additionalProperties:
            type: string
          description: "Specific properties for the inline hook configuration, for\
            \ example, `optOutServiceProtectionRateLimit` to opt-out of Telephony\
            \ Service Protection Rate Limits when using the Telephony inline hook."
          type: object
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - com.okta.import.transform
          - com.okta.oauth2.tokens.transform
          - com.okta.saml.tokens.transform
          - com.okta.telephony.provider
          - com.okta.user.credential.password.import
          - com.okta.user.pre-registration
        version:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    InlineHookBasePayload:
      properties:
        cloudEventVersion:
          description: The inline hook cloud version
          example: "0.1"
          type: string
        contentType:
          description: The inline hook request header content
          example: application/JSON
          type: string
        eventId:
          description: The individual inline hook request ID
          example: 3o9jBzq1SmOGmmsDsqyyeQ
          type: string
        eventTime:
          description: The time the inline hook request was sent
          example: 2020-01-17T21:23:56.000Z
          type: string
        eventTypeVersion:
          description: The inline hook version
          example: "1"
          type: string
      type: object
    InlineHookChannel:
      discriminator:
        mapping:
          HTTP: '#/components/schemas/InlineHookChannelHttp'
          OAUTH: '#/components/schemas/InlineHookChannelOAuth'
        propertyName: type
      example:
        type: type
        version: version
      properties:
        type:
          type: string
          x-okta-known-values:
          - HTTP
          - OAUTH
        version:
          type: string
      type: object
    InlineHookChannelConfig:
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
          type: array
        method:
          type: string
        uri:
          type: string
      type: object
    InlineHookChannelConfigAuthScheme:
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    InlineHookChannelConfigHeaders:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    InlineHookChannelHttp:
      allOf:
      - $ref: '#/components/schemas/InlineHookChannel'
      - properties:
          config:
            $ref: '#/components/schemas/InlineHookChannelConfig'
        type: object
    InlineHookChannelOAuth:
      allOf:
      - $ref: '#/components/schemas/InlineHookChannel'
      - properties:
          config:
            $ref: '#/components/schemas/InlineHookOAuthChannelConfig'
        type: object
    InlineHookChannelType:
      type: string
      x-okta-known-values:
      - HTTP
      - OAUTH
    InlineHookOAuthBasicConfig:
      allOf:
      - $ref: '#/components/schemas/InlineHookChannelConfig'
      properties:
        authType:
          type: string
        clientId:
          type: string
        scope:
          type: string
        tokenUrl:
          type: string
      type: object
    InlineHookOAuthChannelConfig:
      discriminator:
        mapping:
          client_secret_post: '#/components/schemas/InlineHookOAuthClientSecretConfig'
          private_key_jwt: '#/components/schemas/InlineHookOAuthPrivateKeyJwtConfig'
        propertyName: authType
      properties:
        authType:
          type: string
      type: object
    InlineHookOAuthClientSecretConfig:
      allOf:
      - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'
      properties:
        clientSecret:
          type: string
      type: object
    InlineHookOAuthPrivateKeyJwtConfig:
      allOf:
      - $ref: '#/components/schemas/InlineHookOAuthBasicConfig'
      properties:
        hookKeyId:
          type: string
      type: object
    InlineHookPayload:
      type: object
      x-okta-extensible: true
    InlineHookRequestObject:
      properties:
        request:
          $ref: '#/components/schemas/InlineHookRequestObject_request'
      type: object
    InlineHookResponse:
      example:
        commands:
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
      properties:
        commands:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
          type: array
      type: object
    InlineHookResponseCommandValue:
      example:
        op: op
        path: path
        value: value
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
      type: object
    InlineHookResponseCommands:
      example:
        type: type
        value:
        - op: op
          path: path
          value: value
        - op: op
          path: path
          value: value
      properties:
        type:
          type: string
        value:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
          type: array
      type: object
    InlineHookStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    InlineHookType:
      type: string
      x-okta-known-values:
      - com.okta.import.transform
      - com.okta.oauth2.tokens.transform
      - com.okta.saml.tokens.transform
      - com.okta.telephony.provider
      - com.okta.user.credential.password.import
      - com.okta.user.pre-registration
    IssuerMode:
      type: string
      x-okta-known-values:
      - CUSTOM_URL
      - DYNAMIC
      - ORG_URL
    JsonPatchOperation:
      description: The update action
      example:
        op: op
        path: path
        value: "{}"
      properties:
        op:
          description: The operation (PATCH action)
          type: string
          x-enumDescriptions:
            remove: Removes the attribute in `path`
            replace: Replaces the attribute in content `path` with the content in
              `value`
          x-okta-known-values:
          - remove
          - replace
        path:
          description: The resource path of the attribute to update
          type: string
        value:
          description: The update operation value
          type: object
      type: object
    JsonWebKey:
      example:
        e: e
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        expiresAt: 2000-01-23T04:56:07.000+00:00
        "n": "n"
        kty: kty
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        x5u: x5u
        alg: alg
        status: status
      properties:
        alg:
          description: "The algorithm used with the Key. Valid value: `RS256`"
          type: string
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        e:
          description: RSA key value (public exponent) for Key binding
          readOnly: true
          type: string
        expiresAt:
          description: Timestamp when the certificate expires
          format: date-time
          readOnly: true
          type: string
        key_ops:
          description: Identifies the operation(s) for which the key is intended to
            be used
          items:
            type: string
          type: array
        kid:
          description: Unique identifier for the certificate
          readOnly: true
          type: string
        kty:
          description: "Cryptographic algorithm family for the certificate's keypair.\
            \ Valid value: `RSA`"
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          type: string
        "n":
          description: RSA modulus value that is used by both the public and private
            keys and provides a link between them
          type: string
        status:
          description: |-
            An `ACTIVE` Key is used to sign tokens issued by the authorization server. Supported values: `ACTIVE`, `NEXT`, or `EXPIRED`<br>
            A `NEXT` Key is the next Key that the authorization server uses to sign tokens when Keys are rotated. The `NEXT` Key might not be listed if it hasn't been generated yet.
            An `EXPIRED` Key is the previous Key that the authorization server used to sign tokens. The `EXPIRED` Key might not be listed if no Key has expired or the expired Key was deleted.
          type: string
        use:
          description: "Acceptable use of the certificate. Valid value: `sig`"
          readOnly: true
          type: string
        x5c:
          description: X.509 certificate chain that contains a chain of one or more
            certificates
          items:
            type: string
          readOnly: true
          type: array
        x5t:
          description: "X.509 certificate SHA-1 thumbprint, which is the base64url-encoded\
            \ SHA-1 thumbprint (digest) of the DER encoding of an X.509 certificate"
          readOnly: true
          type: string
        x5t#S256:
          description: "X.509 certificate SHA-256 thumbprint, which is the base64url-encoded\
            \ SHA-256 thumbprint (digest) of the DER encoding of an X.509 certificate"
          readOnly: true
          type: string
        x5u:
          description: A URI that refers to a resource for the X.509 public key certificate
            or certificate chain corresponding to the key used to digitally sign the
            JWS (JSON Web Signature)
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    JwkUse:
      example:
        use: use
      properties:
        use:
          type: string
          x-okta-known-values:
          - sig
      type: object
    JwkUseType:
      type: string
      x-okta-known-values:
      - sig
    KeyRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    KeyTrustLevelBrowserKey:
      description: Represents the attestation strength used by the Chrome Verified
        Access API
      example: CHROME_BROWSER_HW_KEY
      type: string
      x-enumDescriptions:
        CHROME_BROWSER_HW_KEY: Identity of the device was attested using a key pair
          that is OS encapsulated by a hardware layer
        CHROME_BROWSER_OS_KEY: Identity of the device was attested using a key pair
          that is simply stored on the device but not in any specific hardware layer
      x-okta-known-values:
      - CHROME_BROWSER_HW_KEY
      - CHROME_BROWSER_OS_KEY
    KeyTrustLevelOSMode:
      description: Represents the attestation strength used by the Chrome Verified
        Access API
      example: CHROME_OS_VERIFIED_MODE
      type: string
      x-enumDescriptions:
        CHROME_OS_VERIFIED_MODE: "Identity of the device was attested using an enterprise-emitted\
          \ certificate, and the device is in Verified mode"
        CHROME_OS_DEVELOPER_MODE: "Identity of the device was attested using an enterprise-emitted\
          \ certificate, and the device is in Developer mode"
      x-okta-known-values:
      - CHROME_OS_DEVELOPER_MODE
      - CHROME_OS_VERIFIED_MODE
    KnowledgeConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
    Language:
      description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)"
      type: string
    LifecycleCreateSettingObject:
      description: Determines whether to update a user in the application when a user
        in Okta is updated
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/EnabledStatus'
          - default: DISABLED
      type: object
    LifecycleDeactivateSettingObject:
      description: Determines whether deprovisioning occurs when the app is unassigned
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/EnabledStatus'
          - default: DISABLED
      type: object
    LifecycleExpirationPolicyRuleCondition:
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
      type: object
    LifecycleStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    LinkedHrefObject:
      additionalProperties: true
      example:
        href: href
      properties:
        href:
          description: Link URI
          type: string
      readOnly: true
      required:
      - href
      title: Link Object
      type: object
    LinkedObject:
      example:
        _links:
          self:
            href: href
        associated:
          name: name
          description: description
          title: title
          type: type
        primary:
          name: name
          description: description
          title: title
          type: type
      properties:
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
        _links:
          $ref: '#/components/schemas/LinkedObjectLinksSelf'
      title: LinkedObject
      type: object
    LinkedObjectDetails:
      example:
        name: name
        description: description
        title: title
        type: type
      properties:
        description:
          description: Description of the `primary` or the `associated` relationship
          type: string
        name:
          description: API name of the `primary` or the `associated` link
          type: string
        title:
          description: Display name of the `primary` or the `associated` link
          type: string
        type:
          description: The object type for this relationship
          type: string
          x-enumDescriptions:
            USER: Specifies the type of object
          x-okta-known-values:
          - USER
      required:
      - name
      - title
      - type
      title: LinkedObjectDetails
      type: object
    LinkedObjectDetailsType:
      description: The object type for this relationship
      type: string
      x-enumDescriptions:
        USER: Specifies the type of object
      x-okta-known-values:
      - USER
    LinkedObjectLinksSelf:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      example:
        self:
          href: href
      properties:
        self:
          $ref: '#/components/schemas/LinkedHrefObject'
      type: object
    LinksActivate:
      properties:
        activate:
          $ref: '#/components/schemas/LinksActivate_activate'
      readOnly: true
      type: object
    LinksAppAndUser:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available using the [JSON Hypertext Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of resources related\
        \ to the Application User."
      example:
        app: null
        user: null
        group: null
      properties:
        app:
          $ref: '#/components/schemas/HrefObjectAppLink'
        group:
          $ref: '#/components/schemas/HrefObjectGroupLink'
        user:
          $ref: '#/components/schemas/HrefObjectUserLink'
      readOnly: true
      type: object
    LinksCancel:
      properties:
        cancel:
          $ref: '#/components/schemas/LinksCancel_cancel'
      readOnly: true
      type: object
    LinksDeactivate:
      properties:
        deactivate:
          $ref: '#/components/schemas/LinksDeactivate_deactivate'
      readOnly: true
      type: object
    LinksEnroll:
      properties:
        enroll:
          $ref: '#/components/schemas/LinksEnroll_enroll'
      readOnly: true
      type: object
    LinksFactor:
      properties:
        factor:
          $ref: '#/components/schemas/LinksFactor_factor'
      readOnly: true
      type: object
    LinksNext:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. Use the `LinksNext` object for dynamic discovery of related\
        \ resources and lifecycle operations."
      example:
        next:
          templated: true
          hints:
            allow:
            - null
            - null
          name: name
          href: href
          type: type
      properties:
        next:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    LinksPoll:
      properties:
        poll:
          $ref: '#/components/schemas/LinksPoll_poll'
      readOnly: true
      type: object
    LinksQrcode:
      properties:
        qrcode:
          $ref: '#/components/schemas/LinksQrcode_qrcode'
      readOnly: true
      type: object
    LinksQuestions:
      properties:
        question:
          $ref: '#/components/schemas/LinksQuestions_question'
      readOnly: true
      type: object
    LinksResend:
      properties:
        resend:
          $ref: '#/components/schemas/LinksResend_resend'
      readOnly: true
      type: object
    LinksSelf:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      example:
        self: null
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
      type: object
    LinksSelfAndFullUsersLifecycle:
      allOf:
      - $ref: '#/components/schemas/LinksSelfAndLifecycle'
      - properties:
          suspend:
            $ref: '#/components/schemas/HrefObjectSuspendLink'
          unsuspend:
            $ref: '#/components/schemas/HrefObjectUnsuspendLink'
          users:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: Link to Device users
        type: object
    LinksSelfAndLifecycle:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          activate:
            $ref: '#/components/schemas/HrefObjectActivateLink'
          deactivate:
            $ref: '#/components/schemas/HrefObjectDeactivateLink'
        type: object
    LinksSelfAndRoles:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          roles:
            $ref: '#/components/schemas/HrefObject'
        type: object
    LinksSelfLifecycleAndAuthorize:
      allOf:
      - $ref: '#/components/schemas/LinksSelfAndLifecycle'
      - properties:
          authorize:
            $ref: '#/components/schemas/HrefObjectAuthorizeLink'
        type: object
    LinksSend:
      properties:
        send:
          $ref: '#/components/schemas/LinksSend_send'
      readOnly: true
      type: object
    LinksUser:
      properties:
        user:
          $ref: '#/components/schemas/LinksUser_user'
      readOnly: true
      type: object
    LinksVerify:
      properties:
        verify:
          $ref: '#/components/schemas/LinksVerify_verify'
      readOnly: true
      type: object
    ListProfileMappings:
      description: |-
        A collection of the profile mappings that include a subset of the profile mapping object's properties. The Profile Mapping object describes a mapping between an Okta User's and an App User's properties using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).

        > **Note:** Same type source/target mappings aren't supported by this API. Profile mappings must either be Okta->App or App->Okta.
      example:
        _links:
          self: null
        id: id
        source:
          _links: null
          name: name
          id: id
          type: type
        target:
          _links: null
          name: name
          id: id
          type: type
      properties:
        id:
          description: Unique identifier for profile mapping
          readOnly: true
          type: string
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    LoadingPageTouchPointVariant:
      default: OKTA_DEFAULT
      description: |
        Variant for the Okta loading page. You can publish a theme for Okta loading page with different combinations of assets. Variants are preset combinations of those assets.
      type: string
      x-enumDescriptions:
        NONE: Uses no loading page animation during the redirect
        OKTA_DEFAULT: Uses the default Okta loading page animation during the redirect
      x-okta-known-values:
      - NONE
      - OKTA_DEFAULT
    LocationGranularity:
      type: string
      x-okta-known-values:
      - CITY
      - COUNTRY
      - LAT_LONG
      - SUBDIVISION
    LogActor:
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: "{}"
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detailEntry:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogAuthenticationContext:
      example:
        credentialType: credentialType
        authenticationProvider: authenticationProvider
        credentialProvider: credentialProvider
        externalSessionId: externalSessionId
        interface: interface
        authenticationStep: 0
        issuer:
          id: id
          type: type
      properties:
        authenticationProvider:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FACTOR_PROVIDER
          - FEDERATION
          - LDAP
          - OKTA_AUTHENTICATION_PROVIDER
          - SOCIAL
        authenticationStep:
          readOnly: true
          type: integer
        credentialProvider:
          type: string
          x-okta-known-values:
          - DUO
          - GOOGLE
          - OKTA_AUTHENTICATION_PROVIDER
          - OKTA_CREDENTIAL_PROVIDER
          - RSA
          - SYMANTEC
          - YUBIKEY
        credentialType:
          type: string
          x-okta-known-values:
          - ASSERTION
          - EMAIL
          - IWA
          - JWT
          - OAuth 2.0
          - OTP
          - PASSWORD
          - SMS
        externalSessionId:
          readOnly: true
          type: string
        interface:
          readOnly: true
          type: string
        issuer:
          $ref: '#/components/schemas/LogIssuer'
      type: object
    LogAuthenticationProvider:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FACTOR_PROVIDER
      - FEDERATION
      - LDAP
      - OKTA_AUTHENTICATION_PROVIDER
      - SOCIAL
    LogClient:
      example:
        zone: zone
        ipAddress: ipAddress
        userAgent:
          os: os
          browser: browser
          rawUserAgent: rawUserAgent
        id: id
        device: device
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
      properties:
        device:
          readOnly: true
          type: string
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          readOnly: true
          type: string
        ipAddress:
          readOnly: true
          type: string
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          readOnly: true
          type: string
      type: object
    LogCredentialProvider:
      type: string
      x-okta-known-values:
      - DUO
      - GOOGLE
      - OKTA_AUTHENTICATION_PROVIDER
      - OKTA_CREDENTIAL_PROVIDER
      - RSA
      - SYMANTEC
      - YUBIKEY
    LogCredentialType:
      type: string
      x-okta-known-values:
      - ASSERTION
      - EMAIL
      - IWA
      - JWT
      - OAuth 2.0
      - OTP
      - PASSWORD
      - SMS
    LogDebugContext:
      example:
        debugData:
          key: "{}"
      properties:
        debugData:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    LogEvent:
      example:
        severity: severity
        request:
          ipChain:
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
        authenticationContext:
          credentialType: credentialType
          authenticationProvider: authenticationProvider
          credentialProvider: credentialProvider
          externalSessionId: externalSessionId
          interface: interface
          authenticationStep: 0
          issuer:
            id: id
            type: type
        eventType: eventType
        published: 2000-01-23T04:56:07.000+00:00
        securityContext:
          asNumber: 5
          domain: domain
          isp: isp
          isProxy: true
          asOrg: asOrg
        uuid: uuid
        version: version
        target:
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
          changeDetails:
            from:
              key: "{}"
            to:
              key: "{}"
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
          changeDetails:
            from:
              key: "{}"
            to:
              key: "{}"
        actor:
          alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
        debugContext:
          debugData:
            key: "{}"
        displayMessage: displayMessage
        client:
          zone: zone
          ipAddress: ipAddress
          userAgent:
            os: os
            browser: browser
            rawUserAgent: rawUserAgent
          id: id
          device: device
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        legacyEventType: legacyEventType
        outcome:
          result: result
          reason: reason
        transaction:
          detail:
            key: "{}"
          id: id
          type: type
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          readOnly: true
          type: string
        eventType:
          readOnly: true
          type: string
        legacyEventType:
          readOnly: true
          type: string
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          format: date-time
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          type: string
          x-okta-known-values:
          - DEBUG
          - ERROR
          - INFO
          - WARN
        target:
          items:
            $ref: '#/components/schemas/LogTarget'
          readOnly: true
          type: array
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
    LogGeographicalContext:
      example:
        country: country
        city: city
        postalCode: postalCode
        state: state
        geolocation:
          lon: 1.4658129805029452
          lat: 6.027456183070403
      properties:
        city:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          readOnly: true
          type: string
        state:
          readOnly: true
          type: string
      type: object
    LogGeolocation:
      example:
        lon: 1.4658129805029452
        lat: 6.027456183070403
      properties:
        lat:
          format: double
          readOnly: true
          type: number
        lon:
          format: double
          readOnly: true
          type: number
      type: object
    LogIpAddress:
      example:
        ip: ip
        source: source
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
        version: version
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          readOnly: true
          type: string
        source:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
    LogIssuer:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogOutcome:
      example:
        result: result
        reason: reason
      properties:
        reason:
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
      type: object
    LogRequest:
      example:
        ipChain:
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
      properties:
        ipChain:
          items:
            $ref: '#/components/schemas/LogIpAddress'
          readOnly: true
          type: array
      type: object
    LogSecurityContext:
      example:
        asNumber: 5
        domain: domain
        isp: isp
        isProxy: true
        asOrg: asOrg
      properties:
        asNumber:
          readOnly: true
          type: integer
        asOrg:
          readOnly: true
          type: string
        domain:
          readOnly: true
          type: string
        isp:
          readOnly: true
          type: string
        isProxy:
          readOnly: true
          type: boolean
      type: object
    LogSeverity:
      type: string
      x-okta-known-values:
      - DEBUG
      - ERROR
      - INFO
      - WARN
    LogStream:
      discriminator:
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAws'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunk'
        propertyName: type
      properties:
        created:
          description: Timestamp when the Log Stream object was created
          example: 2022-10-21T16:59:59Z
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique identifier for the Log Stream
          example: 0oa1orzg0CHSgPcjZ0g4
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the Log Stream object was last updated
          example: 2022-10-21T17:15:10Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: Unique name for the Log Stream object
          example: My AWS EventBridge log stream
          type: string
        status:
          description: Lifecycle status of the Log Stream object
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
        type:
          description: |-
            Specifies the streaming provider used

            Supported providers:
              * `aws_eventbridge` ([AWS EventBridge](https://aws.amazon.com/eventbridge))
              * `splunk_cloud_logstreaming` ([Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html))

            Select the provider type to see provider-specific configurations in the `settings` property:
          type: string
          x-okta-known-values:
          - aws_eventbridge
          - splunk_cloud_logstreaming
        _links:
          $ref: '#/components/schemas/LogStreamLinksSelfAndLifecycle'
      required:
      - _links
      - created
      - id
      - lastUpdated
      - name
      - status
      - type
      type: object
    LogStreamActivateLink:
      allOf:
      - $ref: '#/components/schemas/LogStreamLinkObject'
      - description: Link to activate the resource
    LogStreamAws:
      allOf:
      - $ref: '#/components/schemas/LogStream'
      - properties:
          settings:
            $ref: '#/components/schemas/LogStreamSettingsAws'
        required:
        - settings
        type: object
    LogStreamAwsPutSchema:
      allOf:
      - $ref: '#/components/schemas/LogStreamPutSchema'
      - properties:
          settings:
            $ref: '#/components/schemas/LogStreamSettingsAws'
        required:
        - settings
        type: object
    LogStreamDeactivateLink:
      allOf:
      - $ref: '#/components/schemas/LogStreamLinkObject'
      - description: Link to deactivate the resource
    LogStreamLinkObject:
      properties:
        href:
          description: The URI of the resource
          type: string
        method:
          description: HTTP method allowed for the resource
          enum:
          - GET
          - POST
          type: string
      readOnly: true
      required:
      - href
      title: Log Stream Link object
      type: object
    LogStreamLinksSelfAndLifecycle:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      properties:
        activate:
          $ref: '#/components/schemas/LogStreamActivateLink'
        deactivate:
          $ref: '#/components/schemas/LogStreamDeactivateLink'
        self:
          $ref: '#/components/schemas/LogStreamSelfLink'
      readOnly: true
      required:
      - self
      type: object
    LogStreamName:
      description: Unique name for the Log Stream object
      example: My AWS EventBridge log stream
      type: string
    LogStreamPutSchema:
      discriminator:
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAwsPutSchema'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunkPutSchema'
        propertyName: type
      properties:
        name:
          description: Unique name for the Log Stream object
          example: My AWS EventBridge log stream
          type: string
        type:
          description: |-
            Specifies the streaming provider used

            Supported providers:
              * `aws_eventbridge` ([AWS EventBridge](https://aws.amazon.com/eventbridge))
              * `splunk_cloud_logstreaming` ([Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html))

            Select the provider type to see provider-specific configurations in the `settings` property:
          type: string
          x-okta-known-values:
          - aws_eventbridge
          - splunk_cloud_logstreaming
      required:
      - name
      - type
      type: object
    LogStreamSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          self: null
        created: created
        errorMessage: "{}"
        name: name
        id: id
        title: title
        type: type
        properties: "{}"
        required:
        - required
        - required
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        errorMessage:
          type: object
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          type: object
        required:
          items:
            type: string
          type: array
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    LogStreamSelfLink:
      allOf:
      - $ref: '#/components/schemas/LogStreamLinkObject'
      - description: Link to the resource (self)
    LogStreamSettingsAws:
      description: Specifies the configuration for the `aws_eventbridge` Log Stream
        type. This configuration can't be modified after creation.
      properties:
        accountId:
          description: Your AWS account ID
          example: "123456789012"
          maxLength: 12
          minLength: 12
          type: string
        eventSourceName:
          description: An alphanumeric name (no spaces) to identify this event source
            in AWS EventBridge
          example: your-event-source-name
          maxLength: 75
          minLength: 1
          pattern: "^[a-zA-Z0-9.\\-_]$"
          type: string
        region:
          description: The destination AWS region where your event source is located
          type: string
          x-okta-known-values:
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
      required:
      - accountId
      - eventSourceName
      - region
      type: object
    LogStreamSettingsSplunk:
      description: Specifies the configuration for the `splunk_cloud_logstreaming`
        Log Stream type.
      properties:
        edition:
          description: Edition of the Splunk Cloud instance
          example: aws
          type: string
          x-okta-known-values:
          - aws
          - aws_govcloud
          - gcp
        host:
          description: "The domain name for your Splunk Cloud instance. Don't include\
            \ `http` or `https` in the string. For example: `acme.splunkcloud.com`"
          example: acme.splunkcloud.com
          maxLength: 116
          minLength: 17
          type: string
        token:
          description: "The HEC token for your Splunk Cloud HTTP Event Collector.\
            \ The token value is set at object creation, but isn't returned."
          example: 11111111-1111-2222-2222-222222222222
          pattern: "(?i)^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          type: string
          writeOnly: true
      required:
      - edition
      - host
      - token
      type: object
    LogStreamSettingsSplunkPut:
      description: Specifies the configuration for the `splunk_cloud_logstreaming`
        Log Stream type.
      properties:
        edition:
          description: Edition of the Splunk Cloud instance
          example: aws
          type: string
          x-okta-known-values:
          - aws
          - aws_govcloud
          - gcp
        host:
          description: "The domain name for your Splunk Cloud instance. Don't include\
            \ `http` or `https` in the string. For example: `acme.splunkcloud.com`"
          example: acme.splunkcloud.com
          maxLength: 116
          minLength: 17
          type: string
      required:
      - edition
      - host
      type: object
    LogStreamSplunk:
      allOf:
      - $ref: '#/components/schemas/LogStream'
      - properties:
          settings:
            $ref: '#/components/schemas/LogStreamSettingsSplunk'
        required:
        - settings
        type: object
    LogStreamSplunkPutSchema:
      allOf:
      - $ref: '#/components/schemas/LogStreamPutSchema'
      - properties:
          settings:
            $ref: '#/components/schemas/LogStreamSettingsSplunkPut'
        required:
        - settings
        type: object
    LogStreamType:
      description: |-
        Specifies the streaming provider used

        Supported providers:
          * `aws_eventbridge` ([AWS EventBridge](https://aws.amazon.com/eventbridge))
          * `splunk_cloud_logstreaming` ([Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html))

        Select the provider type to see provider-specific configurations in the `settings` property:
      type: string
      x-okta-known-values:
      - aws_eventbridge
      - splunk_cloud_logstreaming
    LogTarget:
      description: "The entity that an actor performs an action on. Targets can be\
        \ anything, such as an app user, a sign-in token, or anything else."
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: "{}"
        type: type
        changeDetails:
          from:
            key: "{}"
          to:
            key: "{}"
      properties:
        alternateId:
          description: The alternate ID of the target
          readOnly: true
          type: string
        changeDetails:
          $ref: '#/components/schemas/LogTarget_changeDetails'
        detailEntry:
          additionalProperties:
            properties: {}
            type: object
          description: Further details on the target
          readOnly: true
          type: object
        displayName:
          description: The display name of the target
          readOnly: true
          type: string
        id:
          description: The ID of the target
          readOnly: true
          type: string
        type:
          description: The type of target
          readOnly: true
          type: string
      type: object
    LogTransaction:
      example:
        detail:
          key: "{}"
        id: id
        type: type
      properties:
        detail:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogUserAgent:
      example:
        os: os
        browser: browser
        rawUserAgent: rawUserAgent
      properties:
        browser:
          readOnly: true
          type: string
        os:
          readOnly: true
          type: string
        rawUserAgent:
          readOnly: true
          type: string
      type: object
    MDMEnrollmentPolicyEnrollment:
      type: string
      x-okta-known-values:
      - ANY_OR_NONE
      - OMM
    MDMEnrollmentPolicyRuleCondition:
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          type: string
          x-okta-known-values:
          - ANY_OR_NONE
          - OMM
      type: object
    MultifactorEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
          settings:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
        type: object
    MultifactorEnrollmentPolicyAuthenticatorSettings:
      properties:
        constraints:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings_constraints'
        enroll:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings_enroll'
        key:
          type: string
          x-okta-known-values:
          - custom_app
          - custom_otp
          - duo
          - external_idp
          - google_otp
          - okta_email
          - okta_password
          - okta_verify
          - onprem_mfa
          - phone_number
          - rsa_token
          - security_question
          - symantec_vip
          - webauthn
          - yubikey_token
      type: object
    MultifactorEnrollmentPolicyAuthenticatorStatus:
      type: string
      x-okta-known-values:
      - NOT_ALLOWED
      - OPTIONAL
      - REQUIRED
    MultifactorEnrollmentPolicyAuthenticatorType:
      type: string
      x-okta-known-values:
      - custom_app
      - custom_otp
      - duo
      - external_idp
      - google_otp
      - okta_email
      - okta_password
      - okta_verify
      - onprem_mfa
      - phone_number
      - rsa_token
      - security_question
      - symantec_vip
      - webauthn
      - yubikey_token
    MultifactorEnrollmentPolicySettings:
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'
          type: array
        type:
          type: string
          x-okta-known-values:
          - AUTHENTICATORS
      type: object
    MultifactorEnrollmentPolicySettingsType:
      type: string
      x-okta-known-values:
      - AUTHENTICATORS
    NetworkZone:
      discriminator:
        mapping:
          IP: '#/components/schemas/IPNetworkZone'
          DYNAMIC: '#/components/schemas/DynamicNetworkZone'
          DYNAMIC_V2: '#/components/schemas/EnhancedDynamicNetworkZone'
        propertyName: type
      properties:
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique identifier for the Network Zone
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the object was last modified
          format: date-time
          readOnly: true
          type: string
        name:
          description: Unique name for this Network Zone
          maxLength: 128
          type: string
        status:
          description: Network Zone status
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          description: |
            Indicates a system Network Zone:
            * `true` for system Network Zones
            * `false` for custom Network Zones

            The Okta org provides the following default system Network Zones:
            * `LegacyIpZone`
            * `BlockedIpZone`
            * <x-lifecycle class="ea"></x-lifecycle> `DefaultEnhancedDynamicZone`

            Admins can modify the name of the default system Network Zone and add up to 5000 gateway or proxy IP entries.
          readOnly: true
          type: boolean
        type:
          description: The type of Network Zone
          type: string
          x-okta-known-values:
          - DYNAMIC
          - IP
          - DYNAMIC_V2
        usage:
          description: The usage of the Network Zone
          type: string
          x-okta-known-values:
          - BLOCKLIST
          - POLICY
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      required:
      - name
      - type
      type: object
    NetworkZoneAddress:
      description: Specifies the value of an IP address expressed using either `range`
        or `CIDR` form.
      properties:
        type:
          description: Format of the IP addresses
          type: string
          x-okta-known-values:
          - CIDR
          - RANGE
        value:
          description: "Value in CIDR/range form, depending on the `type` specified"
          type: string
      type: object
    NetworkZoneAddressType:
      description: Format of the IP addresses
      type: string
      x-okta-known-values:
      - CIDR
      - RANGE
    NetworkZoneLocation:
      properties:
        country:
          description: |-
            The two-character ISO-3166-1 country code.
            Don't use continent codes since they are treated as generic codes for undesignated countries.
            <br>For example: `US`
          maxLength: 2
          minLength: 2
          type: string
        region:
          description: |-
            (Optional) The ISO-3166-2 region code appended to the country code (`countryCode-regionCode`), or `null` if empty.
            Don't use continent codes since they are treated as generic codes for undesignated regions.
            <br>For example: `CA` (for `US-CA` country and region code)
          type: string
      type: object
    NetworkZoneLocationArray:
      items:
        $ref: '#/components/schemas/NetworkZoneLocation'
      maximum: 75
      nullable: true
      type: array
    NetworkZoneStatus:
      description: Network Zone status
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    NetworkZoneType:
      description: The type of Network Zone
      type: string
      x-okta-known-values:
      - DYNAMIC
      - IP
      - DYNAMIC_V2
    NetworkZoneUsage:
      description: The usage of the Network Zone
      type: string
      x-okta-known-values:
      - BLOCKLIST
      - POLICY
    NotificationType:
      description: The type of notification
      type: string
      x-enumDescriptions:
        AD_AGENT: System notification sent when an AD agent disconnects or reconnects
        AGENT_AUTO_UPDATE_NOTIFICATION: System notification sent when an agent automatically
          updates
        APP_IMPORT: System notification sent with the status of an app user import
        CONNECTOR_AGENT: System notification sent when an on-premises provisioning
          or Okta on-prem MFA agent disconnects or reconnects
        IWA_AGENT: System notification sent when an IGA agent disconnects or reconnects
        LDAP_AGENT: System notification sent when an LDAP agent disconnects or reconnects
        OKTA_ANNOUNCEMENT: Okta communication sent for announcements and release notes
        OKTA_ISSUE: Okta communication sent for trust incident alerts and updates
        OKTA_UPDATE: Okta communication sent for scheduled system updates
        RATELIMIT_NOTIFICATION: System notification sent when an org reaches rate
          limit warning or violation thresholds
        REPORT_SUSPICIOUS_ACTIVITY: System notification sent when a user reports suspicious
          activity
        USER_DEPROVISION: System notification sent when a user is deprovisioned from
          apps
        USER_LOCKED_OUT: System notification sent when a user is locked out from logging
          in to Okta
      x-okta-known-values:
      - AD_AGENT
      - AGENT_AUTO_UPDATE_NOTIFICATION
      - AGENT_AUTO_UPDATE_NOTIFICATION_LDAP
      - APP_IMPORT
      - CONNECTOR_AGENT
      - IWA_AGENT
      - LDAP_AGENT
      - OKTA_ANNOUNCEMENT
      - OKTA_ISSUE
      - OKTA_UPDATE
      - RATELIMIT_NOTIFICATION
      - REPORT_SUSPICIOUS_ACTIVITY
      - USER_DEPROVISION
      - USER_LOCKED_OUT
    OAuth2Actor:
      description: User that created the object
      example:
        id: id
        type: User
      properties:
        id:
          description: User ID
          readOnly: true
          type: string
        type:
          description: Type of user
          example: User
          type: string
      readOnly: true
      type: object
    OAuth2Claim:
      example:
        group_filter_type: group_filter_type
        claimType: claimType
        system: true
        alwaysIncludeInToken: true
        _links:
          self: null
        valueType: valueType
        name: name
        id: id
        conditions:
          scopes:
          - scopes
          - scopes
        value: value
        status: status
      properties:
        alwaysIncludeInToken:
          description: "Specifies whether to include Claims in the token. The value\
            \ is always `TRUE` for access token Claims. If the value is set to `FALSE`\
            \ for an ID token claim, the Claim isn't included in the ID token when\
            \ the token is requested with the access token or with the `authorization_code`.\
            \ The client instead uses the access token to get Claims from the `/userinfo`\
            \ endpoint."
          type: boolean
        claimType:
          description: Specifies whether the Claim is for an access token (`RESOURCE`)
            or an ID token (`IDENTITY`)
          type: string
          x-okta-known-values:
          - IDENTITY
          - RESOURCE
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          description: |-
            Specifies the type of group filter if `valueType` is `GROUPS`

            If `valueType` is `GROUPS`, then the groups returned are filtered according to the value of `group_filter_type`.

            If you have complex filters for Groups, you can [create a Groups allowlist](https://developer.okta.com/docs/guides/customize-tokens-groups-claim/main/) to put them all in a Claim.
          type: string
          x-enumDescriptions:
            STARTS_WITH: "Group names start with `value` (not case-sensitive). For\
              \ example, if `value` is `group1`, then `group123` and `Group123` are\
              \ included."
            EQUALS: "Group name is the same as `value` (not case-sensitive). For example,\
              \ if `value` is `group1`, then `group1` and `Group1` are included, but\
              \ `group123` isn't."
            CONTAINS: "Group names contain `value` (not case-sensitive). For example,\
              \ if `value` is `group1`, then `MyGroup123` and `group1` are included."
            REGEX: "Group names match the regular expression in `value` (case-sensitive).\
              \ For example if `value` is `/^[a-z0-9_-]{3,16}$/`, then any Group name\
              \ that has at least three letters, no more than 16, and contains lowercase\
              \ letters, a hyphen, or numbers is a match."
          x-okta-known-values:
          - CONTAINS
          - EQUALS
          - REGEX
          - STARTS_WITH
        id:
          description: ID of the Claim
          readOnly: true
          type: string
        name:
          description: Name of the Claim
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          description: "When `true`, indicates that Okta created the Claim"
          type: boolean
        value:
          description: "Specifies the value of the Claim. This value must be a string\
            \ literal if `valueType` is `GROUPS`, and the string literal is matched\
            \ with the selected `group_filter_type`. The value must be an Okta EL\
            \ expression if `valueType` is `EXPRESSION`."
          type: string
        valueType:
          description: "Specifies whether the Claim is an Okta Expression Language\
            \ (EL) expression (`EXPRESSION`), a set of groups (`GROUPS`), or a system\
            \ claim (`SYSTEM`)"
          type: string
          x-okta-known-values:
          - EXPRESSION
          - GROUPS
          - SYSTEM
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OAuth2ClaimConditions:
      description: Specifies the scopes for the Claim
      example:
        scopes:
        - scopes
        - scopes
      properties:
        scopes:
          items:
            type: string
          type: array
      type: object
    OAuth2ClaimGroupFilterType:
      description: |-
        Specifies the type of group filter if `valueType` is `GROUPS`

        If `valueType` is `GROUPS`, then the groups returned are filtered according to the value of `group_filter_type`.

        If you have complex filters for Groups, you can [create a Groups allowlist](https://developer.okta.com/docs/guides/customize-tokens-groups-claim/main/) to put them all in a Claim.
      type: string
      x-enumDescriptions:
        STARTS_WITH: "Group names start with `value` (not case-sensitive). For example,\
          \ if `value` is `group1`, then `group123` and `Group123` are included."
        EQUALS: "Group name is the same as `value` (not case-sensitive). For example,\
          \ if `value` is `group1`, then `group1` and `Group1` are included, but `group123`\
          \ isn't."
        CONTAINS: "Group names contain `value` (not case-sensitive). For example,\
          \ if `value` is `group1`, then `MyGroup123` and `group1` are included."
        REGEX: "Group names match the regular expression in `value` (case-sensitive).\
          \ For example if `value` is `/^[a-z0-9_-]{3,16}$/`, then any Group name\
          \ that has at least three letters, no more than 16, and contains lowercase\
          \ letters, a hyphen, or numbers is a match."
      x-okta-known-values:
      - CONTAINS
      - EQUALS
      - REGEX
      - STARTS_WITH
    OAuth2ClaimType:
      description: Specifies whether the Claim is for an access token (`RESOURCE`)
        or an ID token (`IDENTITY`)
      type: string
      x-okta-known-values:
      - IDENTITY
      - RESOURCE
    OAuth2ClaimValueType:
      description: "Specifies whether the Claim is an Okta Expression Language (EL)\
        \ expression (`EXPRESSION`), a set of groups (`GROUPS`), or a system claim\
        \ (`SYSTEM`)"
      type: string
      x-okta-known-values:
      - EXPRESSION
      - GROUPS
      - SYSTEM
    OAuth2Client:
      example:
        client_uri: client_uri
        _links:
          self: null
        logo_uri: logo_uri
        client_name: client_name
        client_id: client_id
      properties:
        client_id:
          description: Unique key for the client application. The `client_id` is immutable
          readOnly: true
          type: string
        client_name:
          description: Human-readable string name of the client application
          readOnly: true
          type: string
        client_uri:
          readOnly: true
          type: string
        logo_uri:
          description: URL string that references a logo for the client consent dialog
            (not the sign-in dialog)
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OAuth2RefreshToken:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          scopes:
          - _links:
              scope: ""
            displayName: displayName
            name: name
            description: description
            id: id
          - _links:
              scope: ""
            displayName: displayName
            name: name
            description: description
            id: id
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: ACTIVE
      properties:
        clientId:
          description: Client ID
          type: string
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          description: Expiration time of the OAuth 2.0 Token
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the Token object
          readOnly: true
          type: string
        issuer:
          description: The complete URL of the authorization server that issued the
            Token
          type: string
        lastUpdated:
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          type: string
        scopes:
          description: The scope names attached to the Token
          items:
            type: string
          type: array
        status:
          description: Status
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          description: The ID of the user associated with the Token
          type: string
        _embedded:
          $ref: '#/components/schemas/OAuth2RefreshToken__embedded'
        _links:
          $ref: '#/components/schemas/OAuth2RefreshToken__links'
      type: object
    OAuth2RefreshTokenScope:
      example:
        _links:
          scope: ""
        displayName: displayName
        name: name
        description: description
        id: id
      properties:
        description:
          description: Description of the Scope
          type: string
        displayName:
          description: Name of the end user displayed in a consent dialog
          type: string
        id:
          description: Scope object ID
          readOnly: true
          type: string
        name:
          description: Scope name
          type: string
        _links:
          $ref: '#/components/schemas/OAuth2RefreshTokenScope__links'
      type: object
    OAuth2Scope:
      example:
        default: true
        system: true
        displayName: displayName
        name: name
        description: description
        metadataPublish: NO_CLIENTS
        optional: true
        id: id
        consent: IMPLICIT
      properties:
        consent:
          default: IMPLICIT
          description: Indicates whether a consent dialog is needed for the Scope
          type: string
          x-okta-known-values:
          - ADMIN
          - FLEXIBLE
          - IMPLICIT
          - REQUIRED
        default:
          description: Indicates if this Scope is a default scope
          type: boolean
        description:
          description: Description of the Scope
          type: string
        displayName:
          description: Name of the end user displayed in a consent dialog
          type: string
        id:
          description: Scope object ID
          readOnly: true
          type: string
        metadataPublish:
          default: NO_CLIENTS
          description: Indicates whether the Scope is included in the metadata
          type: string
          x-okta-known-values:
          - ALL_CLIENTS
          - NO_CLIENTS
        name:
          description: Scope name
          type: string
        optional:
          type: boolean
        system:
          description: Indicates if Okta created the Scope
          type: boolean
      type: object
    OAuth2ScopeConsentGrant:
      description: Grant object that represents an app consent scope grant
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        scopeId: okta.users.read
        clientId: clientId
        createdBy:
          id: id
          type: User
        _embedded:
          scope:
            id: okta.users.read
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        source: ADMIN
        userId: userId
        issuer: https://my_test_okta_org.oktapreview.com
        status: ACTIVE
      properties:
        clientId:
          description: Client ID of the app integration
          readOnly: true
          type: string
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          description: ID of the Grant object
          readOnly: true
          type: string
        issuer:
          description: The issuer of your org authorization server. This is typically
            your Okta domain.
          example: https://my_test_okta_org.oktapreview.com
          type: string
        lastUpdated:
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          type: string
        scopeId:
          description: "The name of the [Okta scope](https://developer.okta.com/docs/api/oauth2/#oauth-20-scopes)\
            \ for which consent is granted"
          example: okta.users.read
          type: string
        source:
          description: User type source that granted consent
          example: ADMIN
          readOnly: true
          type: string
          x-okta-known-values:
          - ADMIN
          - END_USER
        status:
          description: Status
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          description: User ID that granted consent (if `source` is `END_USER`)
          readOnly: true
          type: string
        _embedded:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrant__embedded'
        _links:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrant__links'
      required:
      - issuer
      - scopeId
      type: object
    OAuth2ScopeConsentGrantSource:
      description: User type source that granted consent
      example: ADMIN
      readOnly: true
      type: string
      x-okta-known-values:
      - ADMIN
      - END_USER
    OAuth2ScopeConsentType:
      default: IMPLICIT
      description: Indicates whether a consent dialog is needed for the Scope
      type: string
      x-okta-known-values:
      - ADMIN
      - FLEXIBLE
      - IMPLICIT
      - REQUIRED
    OAuth2ScopeMetadataPublish:
      default: NO_CLIENTS
      description: Indicates whether the Scope is included in the metadata
      type: string
      x-okta-known-values:
      - ALL_CLIENTS
      - NO_CLIENTS
    OAuth2ScopesMediationPolicyRuleCondition:
      description: Array of scopes that the condition includes
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    OAuth2Token:
      properties:
        clientId:
          description: Client ID
          example: 0oabskvc6442nkvQO0h7
          readOnly: true
          type: string
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          description: Expiration time of the OAuth 2.0 Token
          format: date-time
          readOnly: true
          type: string
        id:
          description: ID of the Token object
          readOnly: true
          type: string
        issuer:
          description: The complete URL of the authorization server that issued the
            Token
          type: string
        lastUpdated:
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          type: string
        scopes:
          description: Name of scopes attached to the Token
          items:
            type: string
          type: array
        status:
          description: Status
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          description: Embedded resources related to the object if the `expand` query
            parameter is specified
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OAuthApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - properties:
          oauthClient:
            $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
        type: object
    OAuthEndpointAuthenticationMethod:
      type: string
      x-okta-known-values:
      - client_secret_basic
      - client_secret_jwt
      - client_secret_post
      - none
      - private_key_jwt
    OAuthGrantType:
      type: string
      x-okta-known-values:
      - authorization_code
      - client_credentials
      - implicit
      - interaction_code
      - password
      - refresh_token
      - urn:ietf:params:oauth:grant-type:device_code
      - urn:ietf:params:oauth:grant-type:jwt-bearer
      - urn:ietf:params:oauth:grant-type:saml2-bearer
      - urn:ietf:params:oauth:grant-type:token-exchange
    OAuthMetadata:
      properties:
        authorization_endpoint:
          description: URL of the authorization server's authorization endpoint.
          type: string
        backchannel_authentication_request_signing_alg_values_supported:
          description: <div class="x-lifecycle-container"><x-lifecycle class="lea"></x-lifecycle>
            <x-lifecycle class="oie"></x-lifecycle></div>A list of signing algorithms
            that this authorization server supports for signed requests.
          items:
            $ref: '#/components/schemas/SigningAlgorithm'
          type: array
          x-okta-lifecycle:
            lifecycle: LIMITED_GA
            isGenerallyAvailable: false
            SKUs:
            - Okta Identity Engine
        backchannel_token_delivery_modes_supported:
          description: <div class="x-lifecycle-container"><x-lifecycle class="lea"></x-lifecycle>
            <x-lifecycle class="oie"></x-lifecycle></div>The delivery modes that this
            authorization server supports for Client-Initiated Backchannel Authentication.
          items:
            $ref: '#/components/schemas/TokenDeliveryMode'
          type: array
          x-okta-lifecycle:
            lifecycle: LIMITED_GA
            isGenerallyAvailable: false
            SKUs:
            - Okta Identity Engine
        claims_supported:
          description: A list of the claims supported by this authorization server.
          items:
            $ref: '#/components/schemas/Claim'
          type: array
        code_challenge_methods_supported:
          description: A list of PKCE code challenge methods supported by this authorization
            server.
          items:
            $ref: '#/components/schemas/CodeChallengeMethod'
          type: array
        device_authorization_endpoint:
          type: string
        dpop_signing_alg_values_supported:
          description: A list of signing algorithms supported by this authorization
            server for Demonstrating Proof-of-Possession (DPoP) JWTs.
          items:
            enum:
            - ES256
            - ES384
            - ES512
            - RS256
            - RS384
            - RS512
            type: string
          type: array
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        end_session_endpoint:
          description: URL of the authorization server's logout endpoint.
          type: string
        grant_types_supported:
          description: A list of the grant type values that this authorization server
            supports.
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        introspection_endpoint:
          description: URL of the authorization server's introspection endpoint.
          type: string
        introspection_endpoint_auth_methods_supported:
          description: A list of client authentication methods supported by this introspection
            endpoint.
          items:
            $ref: '#/components/schemas/EndpointAuthMethod'
          type: array
        issuer:
          description: "The authorization server's issuer identifier. In the context\
            \ of this document, this is your authorization server's base URL. This\
            \ becomes the `iss` claim in an access token."
          type: string
        jwks_uri:
          description: URL of the authorization server's JSON Web Key Set document.
          type: string
        pushed_authorization_request_endpoint:
          type: string
        registration_endpoint:
          description: URL of the authorization server's JSON Web Key Set document.
          type: string
        request_object_signing_alg_values_supported:
          description: A list of signing algorithms that this authorization server
            supports for signed requests.
          items:
            $ref: '#/components/schemas/SigningAlgorithm'
          type: array
        request_parameter_supported:
          description: Indicates if Request Parameters are supported by this authorization
            server.
          type: boolean
        response_modes_supported:
          description: A list of the `response_mode` values that this authorization
            server supports. More information here.
          items:
            $ref: '#/components/schemas/ResponseMode'
          type: array
        response_types_supported:
          description: "A list of the `response_type` values that this authorization\
            \ server supports. Can be a combination of `code`, `token`, and `id_token`."
          items:
            $ref: '#/components/schemas/ResponseTypesSupported'
          type: array
        revocation_endpoint:
          description: URL of the authorization server's revocation endpoint.
          type: string
        revocation_endpoint_auth_methods_supported:
          description: A list of client authentication methods supported by this revocation
            endpoint.
          items:
            $ref: '#/components/schemas/EndpointAuthMethod'
          type: array
        scopes_supported:
          description: A list of the scope values that this authorization server supports.
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        subject_types_supported:
          description: "A list of the Subject Identifier types that this authorization\
            \ server supports. Valid types include `pairwise` and `public`, but only\
            \ `public` is currently supported. See the [Subject Identifier Types](https://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes)\
            \ section in the OpenID Connect specification."
          items:
            $ref: '#/components/schemas/SubjectType'
          type: array
        token_endpoint:
          description: URL of the authorization server's token endpoint.
          type: string
        token_endpoint_auth_methods_supported:
          description: A list of client authentication methods supported by this token
            endpoint.
          items:
            $ref: '#/components/schemas/EndpointAuthMethod'
          type: array
      type: object
    OAuthProvisioningEnabledApp:
      description: Application name for the provisioning connection
      type: string
      x-okta-known-values:
      - google
      - office365
      - slack
      - zoomus
    OAuthResponseType:
      type: string
      x-okta-known-values:
      - code
      - id_token
      - token
    OINApplication:
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        label:
          description: User-defined display name for app
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          description: The key name for the OIN app definition
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          description: Contains any valid JSON schema for specifying properties that
            can be referenced from a request (only available to OAuth 2.0 client apps)
          type: object
        signOnMode:
          description: Authentication mode for the app
          type: string
        status:
          description: App instance status
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DELETED
          - INACTIVE
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      type: object
    OINSaml11ApplicationSettingsSignOn:
      description: Contains SAML 1.1 sign-on mode attributes
      properties:
        audienceOverride:
          description: "Audience override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        defaultRelayState:
          description: Identifies a specific application resource in an IdP-initiated
            SSO scenario
          type: string
        recipientOverride:
          description: "Recipient override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        ssoAcsUrlOverride:
          description: "Assertion Consumer Service (ACS) URL override for CASB configuration.\
            \ See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
      title: SAML 1.1 settings
      type: object
    OINSaml20ApplicationSettingsSignOn:
      description: |-
        Contains SAML 2.0 sign-on mode attributes.
        > **Note:** Set `destinationOverride` to configure any other SAML 2.0 attributes in this section.
      properties:
        audienceOverride:
          description: "Audience override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        configuredAttributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        defaultRelayState:
          description: Identifies a specific application resource in an IdP-initiated
            SSO scenario
          type: string
        destinationOverride:
          description: "Destination override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        recipientOverride:
          description: "Recipient override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        samlAssertionLifetimeSeconds:
          description: Determines the SAML app session lifetimes with Okta
          example: 3600
          type: integer
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        ssoAcsUrlOverride:
          description: "Assertion Consumer Service (ACS) URL override for CASB configuration.\
            \ See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
      title: SAML 2.0 settings
      type: object
    OSVersion:
      description: |
        Specifies the OS requirement for the policy.

        There are two types of OS requirements:

        * **Static**: A specific OS version requirement that doesn't change until you update the policy. A static OS requirement is specified with the `osVersion.minimum` property.
        * **Dynamic**: An OS version requirement that is relative to the latest major OS release and security patch. A dynamic OS requirement is specified with the `osVersion.dynamicVersionRequirement` property.
        > **Note:** Dynamic OS requirements are available only if the **Dynamic OS version compliance** [self-service EA](/openapi/okta-management/guides/release-lifecycle/#early-access-ea) feature is enabled. You can't specify both `osVersion.minimum` and `osVersion.dynamicVersionRequirement` properties at the same time.
      properties:
        dynamicVersionRequirement:
          $ref: '#/components/schemas/OSVersion_dynamicVersionRequirement'
        minimum:
          description: "The device version must be equal to or newer than the specified\
            \ version string (maximum of three components for iOS and macOS, and maximum\
            \ of four components for Android)"
          example: 12.4.5
          type: string
      type: object
    OSVersionConstraint:
      properties:
        dynamicVersionRequirement:
          $ref: '#/components/schemas/OSVersionConstraint_dynamicVersionRequirement'
        majorVersionConstraint:
          description: Indicates the Windows major version
          enum:
          - WINDOWS_11
          - WINDOWS_10
          type: string
          x-enumDescriptions:
            WINDOWS_11: The device is on Windows 11
            WINDOWS_10: The device is on Windows 10 or an older Windows version
        minimum:
          description: The Windows device version must be equal to or newer than the
            specified version
          example: 12.4.5.9
          type: string
      required:
      - majorVersionConstraint
      type: object
    OSVersionFourComponents:
      description: Current version of the operating system (maximum of four components
        in the versioning scheme)
      properties:
        minimum:
          example: 12.4.5.9
          type: string
      type: object
    OSVersionThreeComponents:
      description: Current version of the operating system (maximum of three components
        in the versioning scheme)
      properties:
        minimum:
          example: 12.4.5
          type: string
      type: object
    Office365Application:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - office365
            example: office365
            type: string
          signOnMode:
            enum:
            - BROWSER_PLUGIN
            - SAML_1_1
            example: BROWSER_PLUGIN
            type: string
          settings:
            $ref: '#/components/schemas/Office365ApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Microsoft Office 365 app (key name: `office365`)

        To create a Microsoft Office 365 app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Office 365 app only supports `BROWSER_PLUGIN` and `SAML_1_1` sign-on modes.
      example:
        name: office365
        label: Sample Office365 App
        signOnMode: SAML_1_1
        settings:
          app:
            domain: myintegration.okta365test.net
            msftTenant: mycompanyinc
      title: Microsoft Office 365
      x-tags:
      - Application
      x-okta-defined-as:
        name: office365
    Office365ApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/Office365ApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml11ApplicationSettingsSignOn'
        required:
        - app
    Office365ApplicationSettingsApplication:
      description: Office365 app instance properties
      properties:
        domain:
          description: The domain for your Office 365 account
          type: string
        msftTenant:
          description: Microsoft tenant name
          type: string
      required:
      - domain
      - msftTenant
      type: object
    Office365ProvisioningSettings:
      description: Settings required for the Microsoft Office 365 Provisioning Connection
      properties:
        adminPassword:
          description: Microsoft Office 365 global administrator password
          type: string
        adminUsername:
          description: Microsoft Office 365 global administrator username
          type: string
      required:
      - adminPassword
      - adminUsername
      title: Microsoft Office 365 provisioning settings
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    Oidc:
      description: OIDC configuration details
      properties:
        doc:
          description: "The URL to your customer-facing instructions for configuring\
            \ your OIDC integration. See [Customer configuration document guidelines](https://developer.okta.com/docs/guides/submit-app-prereq/main/#customer-configuration-document-guidelines)."
          example: https://example.com/strawberry/help/oidcSetup
          format: uri
          type: string
        initiateLoginUri:
          description: The URL to redirect users when they click on your app from
            their Okta End-User Dashboard
          example: "https://${org.subdomain}.example.com/strawberry/oidc/sp-init"
          format: uri
          type: string
        postLogoutUris:
          description: The sign-out redirect URIs for your app. You can send a request
            to `/v1/logout` to sign the user out and redirect them to one of these
            URIs.
          items:
            description: "A sign-out redirect URI. You can use the org properties\
              \ you defined in the `config` array as variables in your URI. For example:\
              \ `https://${org.subdomain}.example.com/strawberry/oidc/logged-out`"
            example: "https://${org.subdomain}.example.com/strawberry/oidc/logged-out"
            format: uri
            type: string
          type: array
        redirectUris:
          description: List of sign-in redirect URIs
          items:
            description: Sign-in redirect URI
            example: "https://${org.subdomain}.example.com/strawberry/oidc/login"
            format: uri
            type: string
          minItems: 1
          type: array
      required:
      - doc
      - redirectUris
      type: object
    OktaDeviceRiskChangeEvent:
      description: The device risk level changed
      properties:
        current_level:
          description: Current risk level of the device
          enum:
          - low
          - medium
          - high
          - secure
          - none
          example: low
          type: string
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        previous_level:
          description: Previous risk level of the device
          enum:
          - low
          - medium
          - high
          - secure
          - none
          example: medium
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - current_level
      - event_timestamp
      - previous_level
      - subjects
      type: object
    OktaIpChangeEvent:
      description: IP changed for the subject's session
      properties:
        current_ip_address:
          description: Current IP address of the subject
          example: 123.4.5.6
          type: string
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        previous_ip_address:
          description: Previous IP address of the subject
          example: 123.45.67.8
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - current_ip_address
      - event_timestamp
      - previous_ip_address
      - subjects
      type: object
    OktaSignOnPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyConditions'
        type: object
    OktaSignOnPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - properties:
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        type: object
    OktaSignOnPolicyFactorPromptMode:
      type: string
      x-okta-known-values:
      - ALWAYS
      - DEVICE
      - SESSION
    OktaSignOnPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
        type: object
    OktaSignOnPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - properties:
          signon:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
        type: object
    OktaSignOnPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - properties:
          authContext:
            $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        type: object
    OktaSignOnPolicyRuleSignonActions:
      properties:
        access:
          type: string
          x-okta-known-values:
          - ALLOW
          - DENY
        factorLifetime:
          type: integer
        factorPromptMode:
          type: string
          x-okta-known-values:
          - ALWAYS
          - DEVICE
          - SESSION
        rememberDeviceByDefault:
          default: false
          type: boolean
        requireFactor:
          default: false
          type: boolean
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
      type: object
    OktaSignOnPolicyRuleSignonSessionActions:
      properties:
        maxSessionIdleMinutes:
          type: integer
        maxSessionLifetimeMinutes:
          type: integer
        usePersistentCookie:
          default: false
          type: boolean
      type: object
    OktaUserRiskChangeEvent:
      description: The user risk level changed
      properties:
        current_level:
          description: Current risk level of the user
          enum:
          - low
          - medium
          - high
          - secure
          - none
          example: low
          type: string
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        initiating_entity:
          description: The entity that initiated the event
          enum:
          - admin
          - user
          - policy
          - system
          type: string
        previous_level:
          description: Previous risk level of the user
          enum:
          - low
          - medium
          - high
          - secure
          - none
          example: medium
          type: string
        reason_admin:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_admin'
        reason_user:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent_reason_user'
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - current_level
      - event_timestamp
      - previous_level
      - subjects
      type: object
    OpenIdConnectApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/OAuthApplicationCredentials'
          name:
            description: '`oidc_client` is the key name for an OIDC app instance'
            enum:
            - oidc_client
            type: string
          settings:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
        required:
        - credentials
        - name
        - settings
        type: object
      x-okta-defined-as:
        name: oidc_client
    OpenIdConnectApplicationConsentMethod:
      type: string
      x-okta-known-values:
      - REQUIRED
      - TRUSTED
    OpenIdConnectApplicationIdpInitiatedLogin:
      properties:
        default_scope:
          items:
            type: string
          type: array
        mode:
          type: string
      type: object
    OpenIdConnectApplicationIssuerMode:
      type: string
      x-okta-known-values:
      - CUSTOM_URL
      - DYNAMIC
      - ORG_URL
    OpenIdConnectApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          oauthClient:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
        type: object
    OpenIdConnectApplicationSettingsClient:
      properties:
        application_type:
          type: string
          x-okta-known-values:
          - browser
          - native
          - service
          - web
        client_uri:
          type: string
        consent_method:
          type: string
          x-okta-known-values:
          - REQUIRED
          - TRUSTED
        dpop_bound_access_tokens:
          default: false
          description: "Indicates that the client application uses Demonstrating Proof-of-Possession\
            \ (DPoP) for token requests. If `true`, the authorization server rejects\
            \ token requests from this client that don't contain the DPoP header."
          type: boolean
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        frontchannel_logout_session_required:
          description: Include user session details.
          type: boolean
        frontchannel_logout_uri:
          description: URL where Okta sends the logout request.
          type: string
        grant_types:
          items:
            $ref: '#/components/schemas/OAuthGrantType'
          type: array
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          type: string
          x-okta-known-values:
          - CUSTOM_URL
          - DYNAMIC
          - ORG_URL
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        jwks_uri:
          description: URL string that references a JSON Web Key Set for validating
            JWTs presented to Okta.
          type: string
        logo_uri:
          type: string
        participate_slo:
          description: Allows the app to participate in front-channel single logout.
          type: boolean
        policy_uri:
          type: string
        post_logout_redirect_uris:
          items:
            type: string
          type: array
        redirect_uris:
          items:
            type: string
          type: array
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          items:
            $ref: '#/components/schemas/OAuthResponseType'
          type: array
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
      type: object
    OpenIdConnectApplicationSettingsClientKeys:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/schemas-JsonWebKey'
          type: array
      type: object
    OpenIdConnectApplicationSettingsRefreshToken:
      description: |
        Refresh token configuration for an OAuth 2.0 client

        When you create or update an OAuth 2.0 client, you can configure refresh token rotation by setting the `rotation_type` and `leeway` properties. If you don't set these properties when you create an app integration, the default values are used.
        When you update an app integration, your previously configured values are used.
      properties:
        leeway:
          default: 30
          description: |
            The leeway, in seconds, allowed for the OAuth 2.0 client.
            After the refresh token is rotated, the previous token remains valid for the specified period of time so clients can get the new token.

            > **Note:** A leeway of 0 doesn't necessarily mean that the previous token is immediately invalidated. The previous token is invalidated after the new token is generated and returned in the response.
          example: 20
          maximum: 60
          minimum: 0
          type: integer
        rotation_type:
          description: The refresh token rotation mode for the OAuth 2.0 client
          example: STATIC
          type: string
          x-enumDescriptions:
            ROTATE: The default rotation type for single-page apps (SPAs)
            STATIC: "The default rotation type for all clients, except SPAs"
          x-okta-known-values:
          - ROTATE
          - STATIC
      required:
      - rotation_type
      type: object
    OpenIdConnectApplicationType:
      type: string
      x-okta-known-values:
      - browser
      - native
      - service
      - web
    OpenIdConnectRefreshTokenRotationType:
      description: The refresh token rotation mode for the OAuth 2.0 client
      example: STATIC
      type: string
      x-enumDescriptions:
        ROTATE: The default rotation type for single-page apps (SPAs)
        STATIC: "The default rotation type for all clients, except SPAs"
      x-okta-known-values:
      - ROTATE
      - STATIC
    OperationRequest:
      example:
        assignmentId: assignmentId
      properties:
        assignmentId:
          type: string
      type: object
    OperationResponse:
      example:
        realmId: realmId
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        realmName: realmName
        started: 2000-01-23T04:56:07.000+00:00
        completed: 2000-01-23T04:56:07.000+00:00
        id: id
        type: type
        assignmentOperation:
          configuration:
            name: name
            id: id
            conditions:
              expression:
                value: value
              profileSourceId: profileSourceId
            actions:
              assignUserToRealm:
                realmId: realmId
        numUserMoved: 0.8008281904610115
        status: COMPLETED
      properties:
        assignmentOperation:
          $ref: '#/components/schemas/OperationResponse_assignmentOperation'
        completed:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        numUserMoved:
          readOnly: true
          type: number
        realmId:
          readOnly: true
          type: string
        realmName:
          readOnly: true
          type: string
        started:
          format: date-time
          readOnly: true
          type: string
        status:
          enum:
          - COMPLETED
          - SCHEDULED
          - IN_PROGRESS
          - FAILED
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OperationalStatus:
      description: Operational status of a given agent
      type: string
      x-okta-known-values:
      - DEGRADED
      - DISRUPTED
      - INACTIVE
      - OPERATIONAL
    OptInStatusResponse:
      properties:
        optInStatus:
          enum:
          - OPTING_IN
          - OPTED_IN
          - OPTING_OUT
          - OPTED_OUT
          type: string
        _links:
          $ref: '#/components/schemas/OptInStatusResponse__links'
      type: object
    OrgCAPTCHASettings:
      description: ""
      example:
        _links:
          self:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
        enabledPages:
        - null
        - null
        captchaId: captchaId
      properties:
        captchaId:
          description: The unique key of the associated CAPTCHA instance
          type: string
        enabledPages:
          description: An array of pages that have CAPTCHA enabled
          items:
            $ref: '#/components/schemas/enabledPagesType'
          type: array
        _links:
          $ref: '#/components/schemas/OrgCAPTCHASettings__links'
      title: OrgCAPTCHASettings
      type: object
    OrgContactType:
      type: string
      x-okta-known-values:
      - BILLING
      - TECHNICAL
    OrgContactTypeObj:
      example:
        _links:
          self: null
        contactType: contactType
      properties:
        contactType:
          type: string
          x-okta-known-values:
          - BILLING
          - TECHNICAL
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OrgContactUser:
      example:
        _links:
          self: null
        userId: userId
      properties:
        userId:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OrgOktaCommunicationSetting:
      example:
        _links:
          self: null
        optOutEmailUsers: true
      properties:
        optOutEmailUsers:
          readOnly: true
          type: boolean
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OrgOktaSupportSetting:
      type: string
      x-okta-known-values:
      - DISABLED
      - ENABLED
    OrgOktaSupportSettingsObj:
      example:
        _links:
          self: null
        expiration: 2000-01-23T04:56:07.000+00:00
        support: support
      properties:
        expiration:
          format: date-time
          readOnly: true
          type: string
        support:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OrgPreferences:
      example:
        _links:
          self: null
        showEndUserFooter: true
      properties:
        showEndUserFooter:
          readOnly: true
          type: boolean
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OrgSetting:
      example:
        country: country
        website: website
        supportPhoneNumber: supportPhoneNumber
        address2: address2
        city: city
        _links:
          self: null
        address1: address1
        created: 2000-01-23T04:56:07.000+00:00
        companyName: companyName
        postalCode: postalCode
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        phoneNumber: phoneNumber
        endUserSupportHelpURL: endUserSupportHelpURL
        subdomain: subdomain
        id: id
        state: state
        status: status
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    OtpProtocol:
      description: The protocol used
      type: string
      x-okta-known-values:
      - SYMANTEC
      - TOTP
      - YUBICO
    OtpTotpAlgorithm:
      description: HMAC algorithm
      type: string
      x-okta-known-values:
      - HMacSHA1
      - HMacSHA256
      - HMacSHA512
    OtpTotpEncoding:
      description: The shared secret encoding
      type: string
      x-okta-known-values:
      - base32
      - base64
      - hexadecimal
    OtpTotpPassCodeLength:
      description: Number of digits in an OTP value
      maximum: 10
      minimum: 6
      multipleOf: 2
      type: integer
    OtpTotpTimeIntervalInSeconds:
      description: Time interval for TOTP in seconds
      type: integer
    PageRoot:
      example:
        _embedded:
          preview:
            pageContent: pageContent
          default:
            pageContent: pageContent
          customized:
            pageContent: pageContent
          previewUrl: https://openapi-generator.tech
          customizedUrl: https://openapi-generator.tech
        _links: null
      properties:
        _embedded:
          $ref: '#/components/schemas/PageRoot__embedded'
        _links:
          $ref: '#/components/schemas/PageRoot__links'
      type: object
    Parameters:
      description: Attributes used for processing AD Group membership update
      example:
        values:
        - values
        - values
        action: ADD
        attribute: attribute
      properties:
        action:
          description: The update action to take
          enum:
          - ADD
          - REMOVE
          type: string
          x-enumDescriptions:
            ADD: Add to the membership of the group
            REMOVE: Remove from the membership of the group
        attribute:
          description: The attribute that tracks group memberships in AD. This should
            be `member` for AD.
          type: string
        values:
          description: List of user IDs whose group memberships to update
          items:
            description: ID of an existing user
            type: string
          type: array
      type: object
    PasswordCredential:
      description: "When a user has a valid password, imported hashed password, or\
        \ password hook, and a response object contains\na password credential, then\
        \ the password object is a bare object without the value property defined\
        \ (for example, `password: {}`). This \nindicates that a password value exists.\
        \ You can modify password policy requirements in the Admin Console by editing\
        \ the Password\nauthenticator:  **Security** > **Authenticators** > **Password**\
        \ (or for Okta Classic orgs, use **Security** > **Authentication** > **Password**)."
      example:
        hook:
          type: type
        value: value
        hash:
          iterationCount: 0
          salt: salt
          keySize: 6
          saltOrder: saltOrder
          workFactor: 3
          digestAlgorithm: digestAlgorithm
          value: value
          algorithm: algorithm
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          description: Specifies the password for a user. The Password Policy validates
            this password.
          format: password
          type: string
          writeOnly: true
      type: object
    PasswordCredentialHash:
      description: |-
        Specifies a hashed password to import into Okta. This allows an existing password to be imported into Okta directly
        from some other store. Okta supports the BCRYPT, SHA-512, SHA-256, SHA-1, MD5, and PBKDF2 hash functions for password import.
         A hashed password may be specified in a Password object when creating or updating a user, but not for other operations.
         See [Create User with Imported Hashed Password](https://developer.okta.com/docs/reference/api/users/#create-user-with-imported-hashed-password)
         for information on using this object when creating a user. When updating a user with a hashed password, the user must be in the `STAGED` status.
      example:
        iterationCount: 0
        salt: salt
        keySize: 6
        saltOrder: saltOrder
        workFactor: 3
        digestAlgorithm: digestAlgorithm
        value: value
        algorithm: algorithm
      properties:
        algorithm:
          description: "The algorithm used to generate the hash using the password\
            \ (and salt, when applicable)."
          type: string
          x-okta-known-values:
          - BCRYPT
          - MD5
          - PBKDF2
          - SHA-1
          - SHA-256
          - SHA-512
        digestAlgorithm:
          description: Algorithm used to generate the key. Only required for the PBKDF2
            algorithm.
          type: string
          x-okta-known-values:
          - SHA256_HMAC
          - SHA512_HMAC
        iterationCount:
          description: The number of iterations used when hashing passwords using
            PBKDF2. Must be >= 4096. Only required for PBKDF2 algorithm.
          type: integer
        keySize:
          description: Size of the derived key in bytes. Only required for PBKDF2
            algorithm.
          type: integer
        salt:
          description: |-
            Only required for salted hashes. For BCRYPT, this specifies Radix-64 as the encoded salt used to generate the hash,
            which must be 22 characters long. For other salted hashes, this specifies the Base64-encoded salt used to
            generate the hash.
          type: string
        saltOrder:
          description: Specifies whether salt was pre- or postfixed to the password
            before hashing. Only required for salted algorithms.
          type: string
        value:
          description: |-
            For SHA-512, SHA-256, SHA-1, MD5, and PBKDF2, this is the actual base64-encoded hash of the password (and salt, if used).
            This is the Base64-encoded `value` of the SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest that was computed by either pre-fixing or post-fixing
            the `salt` to the `password`, depending on the `saltOrder`. If a `salt` was not used in the `source` system, then this should just be
            the Base64-encoded `value` of the password's SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest. For BCRYPT, this is the actual Radix-64 encoded hashed password.
          type: string
        workFactor:
          description: Governs the strength of the hash and the time required to compute
            it. Only required for BCRYPT algorithm.
          maximum: 20
          minimum: 1
          type: integer
      type: object
    PasswordCredentialHashAlgorithm:
      description: "The algorithm used to generate the hash using the password (and\
        \ salt, when applicable)."
      type: string
      x-okta-known-values:
      - BCRYPT
      - MD5
      - PBKDF2
      - SHA-1
      - SHA-256
      - SHA-512
    PasswordCredentialHook:
      description: |-
        Specify a [password import inline hook](https://developer.okta.com/docs/reference/password-hook/) to trigger verification of the user's password
        the first time the user logs in. This allows an existing password to be imported into Okta directly from some other store.
        See [Create User with Password Hook](https://developer.okta.com/docs/reference/api/users/#create-user-with-password-import-inline-hook) for information on using this object when creating a user.
      example:
        type: type
      properties:
        type:
          description: "The type of password inline hook. Currently, must be set to\
            \ default."
          type: string
      type: object
    PasswordDictionary:
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
      type: object
    PasswordDictionaryCommon:
      properties:
        exclude:
          default: false
          type: boolean
      type: object
    PasswordExpirationPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    PasswordImportRequest:
      properties:
        data:
          $ref: '#/components/schemas/PasswordImportRequestData'
        eventType:
          description: The type of inline hook. The password import inline hook type
            is `com.okta.user.credential.password.import`.
          type: string
        source:
          description: The ID and URL of the password import inline hook
          type: string
      type: object
    PasswordImportRequestData:
      properties:
        action:
          $ref: '#/components/schemas/PasswordImportRequestData_action'
        context:
          $ref: '#/components/schemas/PasswordImportRequestData_context'
      type: object
    PasswordImportResponse:
      properties:
        commands:
          description: "The `commands` object specifies whether Okta accepts the end\
            \ user's sign-in credentials as valid or not. For the password import\
            \ inline hook, you typically only return one `commands` object with one\
            \ array element in it."
          items:
            $ref: '#/components/schemas/PasswordImportResponse_commands_inner'
          type: array
      type: object
    PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            $ref: '#/components/schemas/PasswordPolicyConditions'
          settings:
            $ref: '#/components/schemas/PasswordPolicySettings'
        type: object
    PasswordPolicyAuthenticationProviderCondition:
      properties:
        include:
          items:
            type: string
          type: array
        provider:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
      type: object
    PasswordPolicyAuthenticationProviderType:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - ANY
      - LDAP
      - OKTA
    PasswordPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - properties:
          authProvider:
            $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        type: object
    PasswordPolicyDelegationSettings:
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
      type: object
    PasswordPolicyDelegationSettingsOptions:
      properties:
        skipUnlock:
          type: boolean
      type: object
    PasswordPolicyPasswordSettings:
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
      type: object
    PasswordPolicyPasswordSettingsAge:
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
      type: object
    PasswordPolicyPasswordSettingsComplexity:
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          items:
            type: string
          type: array
        excludeUsername:
          default: true
          type: boolean
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
      type: object
    PasswordPolicyPasswordSettingsLockout:
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          items:
            type: string
          type: array
      type: object
    PasswordPolicyRecoveryEmail:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryEmailProperties:
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
      type: object
    PasswordPolicyRecoveryEmailRecoveryToken:
      properties:
        tokenLifetimeMinutes:
          type: integer
      type: object
    PasswordPolicyRecoveryFactorSettings:
      properties:
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryFactors:
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
      type: object
    PasswordPolicyRecoveryQuestion:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryQuestionComplexity:
      properties:
        minLength:
          readOnly: true
          type: integer
      type: object
    PasswordPolicyRecoveryQuestionProperties:
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
      type: object
    PasswordPolicyRecoverySettings:
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
      type: object
    PasswordPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/PasswordPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/PasswordPolicyRuleConditions'
        type: object
    PasswordPolicyRuleAction:
      properties:
        access:
          type: string
          x-okta-known-values:
          - ALLOW
          - DENY
      type: object
    PasswordPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - properties:
          passwordChange:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServicePasswordReset:
            $ref: '#/components/schemas/SelfServicePasswordResetAction'
          selfServiceUnlock:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
        type: object
    PasswordPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - properties:
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        type: object
    PasswordPolicySettings:
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
      type: object
    PasswordProtectionWarningTrigger:
      description: Indicates whether the Password Protection Warning feature is enabled
      example: PHISHING_REUSE
      type: string
      x-enumDescriptions:
        PASSWORD_PROTECTION_OFF: Password protection warning is off
        PASSWORD_REUSE: Password protection warning is triggered by password reuse
        PHISHING_REUSE: Password protection warning is triggered by password reuse
          on a phishing page
      x-okta-known-values:
      - PASSWORD_PROTECTION_OFF
      - PASSWORD_REUSE
      - PHISHING_REUSE
    PasswordSettingObject:
      description: Determines whether Okta creates and pushes a password in the application
        for each assigned user
      properties:
        change:
          default: KEEP_EXISTING
          description: Determines whether a change in a user's password also updates
            the user's password in the application
          example: CHANGE
          type: string
          x-okta-known-values:
          - CHANGE
          - KEEP_EXISTING
        seed:
          default: RANDOM
          description: Determines whether the generated password is the user's Okta
            password or a randomly generated password
          example: OKTA
          type: string
          x-okta-known-values:
          - OKTA
          - RANDOM
        status:
          allOf:
          - $ref: '#/components/schemas/EnabledStatus'
          - default: DISABLED
          - example: ENABLED
      type: object
    PatchAction:
      description: The operation (PATCH action)
      type: string
      x-enumDescriptions:
        remove: Removes the attribute in `path`
        replace: Replaces the attribute in content `path` with the content in `value`
      x-okta-known-values:
      - remove
      - replace
    PerClientRateLimitMode:
      type: string
      x-okta-known-values:
      - DISABLE
      - ENFORCE
      - PREVIEW
    PerClientRateLimitSettings:
      description: ""
      example:
        defaultMode: defaultMode
        useCaseModeOverrides:
          LOGIN_PAGE: LOGIN_PAGE
          OIE_APP_INTENT: OIE_APP_INTENT
          OAUTH2_AUTHORIZE: OAUTH2_AUTHORIZE
      properties:
        defaultMode:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENFORCE
          - PREVIEW
        useCaseModeOverrides:
          $ref: '#/components/schemas/PerClientRateLimitSettings_useCaseModeOverrides'
      required:
      - defaultMode
      title: PerClientRateLimitSettings
      type: object
    Permission:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        label: label
        conditions: "{}"
      properties:
        conditions:
          description: Conditions for further restricting a permission
          nullable: true
          type: object
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        created:
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          type: string
        label:
          description: The permission type
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the role was last updated
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/Permission__links'
      type: object
    PermissionConditions:
      description: Conditions for further restricting a permission
      nullable: true
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    Permissions:
      example:
        permissions:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          label: label
          conditions: "{}"
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          label: label
          conditions: "{}"
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    PinRequest:
      description: Pin Request
      properties:
        authenticatorEnrollmentId:
          description: ID for a WebAuthn Preregistration Factor in Okta
          type: string
        fulfillmentProvider:
          description: Name of the fulfillment provider for the WebAuthn Preregistration
            Factor
          enum:
          - yubico
          type: string
        userId:
          description: ID of an existing Okta user
          type: string
      type: object
    PipelineType:
      description: "The authentication pipeline of the org. `idx` means the org is\
        \ using the Identity Engine, while `v1` means the org is using the Classic\
        \ authentication pipeline."
      type: string
      x-okta-known-values:
      - idx
      - v1
    Platform:
      type: string
      x-okta-known-values:
      - ANDROID
      - CHROMEOS
      - IOS
      - MACOS
      - WINDOWS
    PlatformConditionEvaluatorPlatform:
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          type: string
          x-okta-known-values:
          - ANY
          - DESKTOP
          - MOBILE
          - OTHER
      type: object
    PlatformConditionEvaluatorPlatformOperatingSystem:
      properties:
        expression:
          type: string
        type:
          type: string
          x-okta-known-values:
          - ANDROID
          - ANY
          - IOS
          - OSX
          - OTHER
          - WINDOWS
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
      type: object
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      properties:
        matchType:
          type: string
          x-okta-known-values:
          - EXPRESSION
          - SEMVER
        value:
          type: string
      type: object
    PlatformConditionOperatingSystemVersionMatchType:
      type: string
      x-okta-known-values:
      - EXPRESSION
      - SEMVER
    PlatformPolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
        include:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
      type: object
    Policy:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdpDiscoveryPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
          CONTINUOUS_ACCESS: '#/components/schemas/ContinuousAccessPolicy'
          ENTITY_RISK: '#/components/schemas/EntityRiskPolicy'
        propertyName: type
      properties:
        created:
          description: Timestamp when the Policy was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Policy description
          type: string
        id:
          description: Policy ID
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the Policy was last updated
          format: date-time
          readOnly: true
          type: string
        name:
          description: Policy name
          type: string
        priority:
          description: Specifies the order in which this Policy is evaluated in relation
            to the other policies
          type: integer
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          description: Specifies whether Okta created the Policy
          type: boolean
        type:
          description: "All Okta orgs contain only one IdP Discovery Policy with an\
            \ immutable default Rule routing to your org's sign-in page. \nCreating\
            \ or replacing a policy with `IDP_DISCOVERY` type isn't supported. The\
            \ following policy types are available with\nthe Okta Identity Engine:\
            \ `ACCESS_POLICY`, `PROFILE_ENROLLMENT`, `CONTINUOUS_ACCESS`, and `ENTITY_RISK`.\
            \ The `CONTINUOUS_ACCESS`, and `ENTITY_RISK` \npolicy types are in Early\
            \ Access (EA). Contact your Okta account team to enable these features."
          type: string
          x-okta-known-values:
          - ACCESS_POLICY
          - CONTINUOUS_ACCESS
          - ENTITY_RISK
          - IDP_DISCOVERY
          - MFA_ENROLL
          - OKTA_SIGN_ON
          - PASSWORD
          - PROFILE_ENROLLMENT
          - RESOURCE_ACCESS
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/PolicyLinks'
      type: object
    PolicyAccess:
      type: string
      x-okta-known-values:
      - ALLOW
      - DENY
    PolicyAccountLink:
      properties:
        action:
          type: string
          x-okta-known-values:
          - AUTO
          - DISABLED
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
      type: object
    PolicyAccountLinkAction:
      type: string
      x-okta-known-values:
      - AUTO
      - DISABLED
    PolicyAccountLinkFilter:
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
      type: object
    PolicyAccountLinkFilterGroups:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    PolicyContext:
      example:
        ip: ip
        groups:
          ids:
          - ids
          - ids
        risk:
          level: LOW
        zones:
          ids:
          - ids
          - ids
        device:
          managed: true
          registered: true
          platform: platform
          assuranceId: assuranceId
        user:
          id: id
      properties:
        device:
          $ref: '#/components/schemas/PolicyContext_device'
        groups:
          $ref: '#/components/schemas/PolicyContext_groups'
        ip:
          description: "The network rule condition, zone, or IP address"
          type: string
        risk:
          $ref: '#/components/schemas/PolicyContext_risk'
        user:
          $ref: '#/components/schemas/PolicyContext_user'
        zones:
          $ref: '#/components/schemas/PolicyContext_zones'
      required:
      - groups
      - user
      type: object
    PolicyLinks:
      properties:
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        mappings:
          $ref: '#/components/schemas/HrefObjectMappingsLink'
        rules:
          $ref: '#/components/schemas/HrefObjectRulesLink'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      type: object
    PolicyMapping:
      example:
        _links: null
        id: id
      properties:
        id:
          type: string
        _links:
          $ref: '#/components/schemas/PolicyMapping__links'
      type: object
    PolicyMappingRequest:
      example:
        resourceId: resourceId
        resourceType: resourceType
      properties:
        resourceId:
          type: string
        resourceType:
          type: string
          x-okta-known-values:
          - APP
      type: object
    PolicyMappingResourceType:
      type: string
      x-okta-known-values:
      - APP
    PolicyNetworkCondition:
      properties:
        connection:
          description: Network selection mode
          type: string
          x-okta-known-values:
          - ANYWHERE
          - ZONE
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    PolicyNetworkConnection:
      description: Network selection mode
      type: string
      x-okta-known-values:
      - ANYWHERE
      - ZONE
    PolicyPeopleCondition:
      description: Identifies Users and Groups that are used together
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
      type: object
    PolicyPlatformOperatingSystemType:
      type: string
      x-okta-known-values:
      - ANDROID
      - ANY
      - IOS
      - OSX
      - OTHER
      - WINDOWS
    PolicyPlatformType:
      type: string
      x-okta-known-values:
      - ANY
      - DESKTOP
      - MOBILE
      - OTHER
    PolicyRule:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
          IDP_DISCOVERY: '#/components/schemas/IdpDiscoveryPolicyRule'
          CONTINUOUS_ACCESS: '#/components/schemas/ContinuousAccessPolicyRule'
          ENTITY_RISK: '#/components/schemas/EntityRiskPolicyRule'
        propertyName: type
      properties:
        created:
          description: Timestamp when the rule was created
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          description: Identifier for the rule
          type: string
        lastUpdated:
          description: Timestamp when the rule was last modified
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          description: Name of the rule
          type: string
        priority:
          description: Priority of the rule
          type: integer
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          default: false
          description: Specifies whether Okta created the Policy Rule (`system=true`).
            You can't delete Policy Rules that have `system` set to `true`.
          type: boolean
        type:
          description: Rule type
          type: string
          x-okta-known-values:
          - ACCESS_POLICY
          - CONTINUOUS_ACCESS
          - ENTITY_RISK
          - IDP_DISCOVERY
          - MFA_ENROLL
          - PASSWORD
          - PROFILE_ENROLLMENT
          - RESOURCE_ACCESS
          - SIGN_ON
      type: object
    PolicyRuleActions:
      type: object
    PolicyRuleActionsEnroll:
      properties:
        self:
          type: string
          x-okta-known-values:
          - CHALLENGE
          - LOGIN
          - NEVER
      type: object
    PolicyRuleActionsEnrollSelf:
      type: string
      x-okta-known-values:
      - CHALLENGE
      - LOGIN
      - NEVER
    PolicyRuleAuthContextCondition:
      properties:
        authType:
          type: string
          x-okta-known-values:
          - ANY
          - RADIUS
      type: object
    PolicyRuleAuthContextType:
      type: string
      x-okta-known-values:
      - ANY
      - RADIUS
    PolicyRuleConditions:
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
      type: object
    PolicyRuleType:
      description: Rule type
      type: string
      x-okta-known-values:
      - ACCESS_POLICY
      - CONTINUOUS_ACCESS
      - ENTITY_RISK
      - IDP_DISCOVERY
      - MFA_ENROLL
      - PASSWORD
      - PROFILE_ENROLLMENT
      - RESOURCE_ACCESS
      - SIGN_ON
    PolicySubject:
      properties:
        filter:
          type: string
        format:
          items:
            type: string
          type: array
        matchAttribute:
          type: string
        matchType:
          type: string
          x-okta-known-values:
          - CUSTOM_ATTRIBUTE
          - EMAIL
          - USERNAME
          - USERNAME_OR_EMAIL
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
      type: object
    PolicySubjectMatchType:
      type: string
      x-okta-known-values:
      - CUSTOM_ATTRIBUTE
      - EMAIL
      - USERNAME
      - USERNAME_OR_EMAIL
    PolicyType:
      description: "All Okta orgs contain only one IdP Discovery Policy with an immutable\
        \ default Rule routing to your org's sign-in page. \nCreating or replacing\
        \ a policy with `IDP_DISCOVERY` type isn't supported. The following policy\
        \ types are available with\nthe Okta Identity Engine: `ACCESS_POLICY`, `PROFILE_ENROLLMENT`,\
        \ `CONTINUOUS_ACCESS`, and `ENTITY_RISK`. The `CONTINUOUS_ACCESS`, and `ENTITY_RISK`\
        \ \npolicy types are in Early Access (EA). Contact your Okta account team\
        \ to enable these features."
      type: string
      x-okta-known-values:
      - ACCESS_POLICY
      - CONTINUOUS_ACCESS
      - ENTITY_RISK
      - IDP_DISCOVERY
      - MFA_ENROLL
      - OKTA_SIGN_ON
      - PASSWORD
      - PROFILE_ENROLLMENT
      - RESOURCE_ACCESS
    PolicyTypeSimulation:
      type: string
      x-okta-known-values:
      - ACCESS_POLICY
      - MFA_ENROLL
      - OKTA_SIGN_ON
      - PROFILE_ENROLLMENT
    PolicyUserNameTemplate:
      properties:
        template:
          type: string
      type: object
    PolicyUserStatus:
      type: string
      x-okta-known-values:
      - ACTIVATING
      - ACTIVE
      - DELETED
      - DELETING
      - EXPIRED_PASSWORD
      - INACTIVE
      - PENDING
      - SUSPENDED
    PossessionConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
      - properties:
          deviceBound:
            default: OPTIONAL
            description: Indicates if device-bound Factors are required. This property
              is only set for `POSSESSION` constraints.
            enum:
            - OPTIONAL
            - REQUIRED
            type: string
          hardwareProtection:
            default: OPTIONAL
            description: Indicates if any secrets or private keys used during authentication
              must be hardware protected and not exportable. This property is only
              set for `POSSESSION` constraints.
            enum:
            - OPTIONAL
            - REQUIRED
            type: string
          phishingResistant:
            default: OPTIONAL
            description: Indicates if phishing-resistant Factors are required. This
              property is only set for `POSSESSION` constraints.
            enum:
            - OPTIONAL
            - REQUIRED
            type: string
          userPresence:
            default: REQUIRED
            description: Indicates if the user needs to approve an Okta Verify prompt
              or provide biometrics (meets NIST AAL2 requirements). This property
              is only set for `POSSESSION` constraints.
            enum:
            - OPTIONAL
            - REQUIRED
            type: string
          userVerification:
            default: OPTIONAL
            description: Indicates the user interaction requirement (PIN or biometrics)
              to ensure verification of a possession factor
            enum:
            - OPTIONAL
            - REQUIRED
            type: string
        type: object
    PreRegistrationInlineHook:
      properties:
        inlineHookId:
          type: string
      type: object
    PrincipalRateLimitEntity:
      description: ""
      example:
        defaultConcurrencyPercentage: 0
        lastUpdatedBy: lastUpdatedBy
        createdDate: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        defaultPercentage: 6
        principalId: principalId
        id: id
        orgId: orgId
        principalType: principalType
      properties:
        createdBy:
          readOnly: true
          type: string
        createdDate:
          format: date-time
          readOnly: true
          type: string
        defaultConcurrencyPercentage:
          readOnly: true
          type: integer
        defaultPercentage:
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        lastUpdate:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        orgId:
          readOnly: true
          type: string
        principalId:
          type: string
        principalType:
          type: string
          x-okta-known-values:
          - SSWS_TOKEN
      required:
      - principalId
      - principalType
      title: PrincipalRateLimitEntity
      type: object
    PrincipalType:
      type: string
      x-okta-known-values:
      - SSWS_TOKEN
    PrivilegedResource:
      default:
        resourceType: OKTA_USER_ACCOUNT
      discriminator:
        mapping:
          APP_ACCOUNT: '#/components/schemas/PrivilegedResourceAccountApp'
          OKTA_USER_ACCOUNT: '#/components/schemas/PrivilegedResourceAccountOkta'
        propertyName: resourceType
      properties:
        created:
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
          type: string
        credentialChanged:
          description: Timestamp when the credential was changed
          format: date-time
          readOnly: true
          type: string
        credentialSyncState:
          description: Current credential sync status of the privileged resource
          readOnly: true
          type: string
          x-enumDescriptions:
            NOT_SYNCED: Credentials are not yet synced
            SYNCING: Credentials are currently being synced
            SYNCED: Credentials are successfully synced
            SYNC_FAILED: Credential sync failed
          x-okta-known-values:
          - NOT_SYNCED
          - SYNCED
          - SYNCING
          - SYNC_FAILED
        id:
          description: ID of the privileged resource
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          type: string
        resourceType:
          description: The type of the resource
          type: string
          x-okta-known-values:
          - APP_ACCOUNT
          - OKTA_USER_ACCOUNT
        status:
          description: Current status of the privileged resource
          readOnly: true
          type: string
          x-enumDescriptions:
            CREATED: The privileged resource is created but not yet managed by OPA
            ACTIVE: The privileged resource is currently managed by OPA
            INACTIVE: The privileged resource is `INACTIVE` and not currently managed
              by OPA
          x-okta-known-values:
          - ACTIVE
          - CREATED
          - INACTIVE
      type: object
    PrivilegedResourceAccountApp:
      allOf:
      - properties:
          containerDetails:
            $ref: '#/components/schemas/AppAccountContainerDetails'
          credentials:
            $ref: '#/components/schemas/PrivilegedResourceCredentials'
        type: object
      - $ref: '#/components/schemas/PrivilegedResource'
      required:
      - containerId
      - credentials
    PrivilegedResourceAccountOkta:
      allOf:
      - properties:
          resourceId:
            description: The user ID associated with the Okta privileged resource
            type: string
          credentials:
            $ref: '#/components/schemas/PrivilegedResourceCredentials'
          profile:
            $ref: '#/components/schemas/profile'
        required:
        - resourceId
        type: object
      - $ref: '#/components/schemas/PrivilegedResource'
    PrivilegedResourceCredentials:
      description: Credentials for the privileged account
      properties:
        password:
          description: The password associated with the privileged resource
          format: password
          type: string
          writeOnly: true
        userName:
          description: The username associated with the privileged resource
          example: testuser@example.com
          maxLength: 100
          minLength: 1
          type: string
      type: object
    PrivilegedResourceStatus:
      description: Current status of the privileged resource
      readOnly: true
      type: string
      x-enumDescriptions:
        CREATED: The privileged resource is created but not yet managed by OPA
        ACTIVE: The privileged resource is currently managed by OPA
        INACTIVE: The privileged resource is `INACTIVE` and not currently managed
          by OPA
      x-okta-known-values:
      - ACTIVE
      - CREATED
      - INACTIVE
    PrivilegedResourceType:
      description: The type of the resource
      type: string
      x-okta-known-values:
      - APP_ACCOUNT
      - OKTA_USER_ACCOUNT
    ProfileEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - properties:
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
        type: object
    ProfileEnrollmentPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - properties:
          actions:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
        type: object
    ProfileEnrollmentPolicyRuleAction:
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
          type: array
        profileAttributes:
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
          type: array
        progressiveProfilingAction:
          enum:
          - ENABLED
          - DISABLED
          type: string
        targetGroupIds:
          items:
            type: string
          type: array
        unknownUserAction:
          enum:
          - DENY
          - REGISTER
          type: string
      type: object
    ProfileEnrollmentPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - properties:
          profileEnrollment:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
        type: object
    ProfileEnrollmentPolicyRuleActivationRequirement:
      properties:
        emailVerification:
          type: boolean
      type: object
    ProfileEnrollmentPolicyRuleProfileAttribute:
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
      type: object
    ProfileMapping:
      description: |-
        The Profile Mapping object describes a mapping between an Okta User's and an App User's properties using [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).

        > **Note:** Same type source/target mappings aren't supported by this API. Profile mappings must either be Okta->App or App->Okta.
      example:
        _links:
          self: null
        id: id
        source:
          _links: null
          name: name
          id: id
          type: type
        properties:
          key:
            expression: expression
            pushStatus: pushStatus
        target:
          _links: null
          name: name
          id: id
          type: type
      properties:
        id:
          description: Unique identifier for a profile mapping
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: false
          type: object
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    ProfileMappingProperty:
      description: "A target property, in string form, that maps to a valid [JSON\
        \ Schema Draft](https://tools.ietf.org/html/draft-zyp-json-schema-04) document."
      example:
        expression: expression
        pushStatus: pushStatus
      properties:
        expression:
          description: Combination or single source properties that are mapped to
            the target property
          type: string
        pushStatus:
          description: |-
            Indicates whether to update target properties for user create and update or just for user create.

            Having a pushStatus of `PUSH` causes properties in the target to be updated on create and update. Having a pushStatus of `DONT_PUSH` causes properties in the target to be updated only on create.
          type: string
          x-okta-known-values:
          - DONT_PUSH
          - PUSH
      type: object
    ProfileMappingPropertyPushStatus:
      description: |-
        Indicates whether to update target properties for user create and update or just for user create.

        Having a pushStatus of `PUSH` causes properties in the target to be updated on create and update. Having a pushStatus of `DONT_PUSH` causes properties in the target to be updated only on create.
      type: string
      x-okta-known-values:
      - DONT_PUSH
      - PUSH
    ProfileMappingRequest:
      description: The updated request body properties
      example:
        properties:
          key:
            expression: expression
            pushStatus: pushStatus
      properties:
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          type: object
      required:
      - additionalProperties
      - expression
      - properties
      - pushStatus
      type: object
    ProfileMappingSource:
      description: |-
        The parameter is the source of a profile mapping and is a valid [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04) document with the following properties. The data type can be an app instance or an Okta object.

        > **Note:** If the source is Okta and the UserTypes feature isn't enabled, then the source `_links` only has a link to the schema.
      example:
        _links: null
        name: name
        id: id
        type: type
      properties:
        id:
          description: Unique identifier for the application instance or userType
          readOnly: true
          type: string
        name:
          description: Variable name of the application instance or name of the referenced
            UserType
          readOnly: true
          type: string
        type:
          description: Type of user referenced in the mapping
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/SourceLinks'
      type: object
    ProfileMappingTarget:
      description: |-
        The parameter is the target of a profile mapping and is a valid [JSON Schema Draft 4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04) document with the following properties. The data type can be an app instance or an Okta object.

         > **Note:** If the target is Okta and the UserTypes feature isn't enabled, then the target `_links` only has a link to the schema.
      example:
        _links: null
        name: name
        id: id
        type: type
      properties:
        id:
          description: Unique identifier for the application instance or UserType
          readOnly: true
          type: string
        name:
          description: Variable name of the application instance or name of the referenced
            userType
          readOnly: true
          type: string
        type:
          description: Type of user referenced in the mapping
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/SourceLinks'
      type: object
    ProfileSettingObject:
      description: |
        This setting determines whether a user in the application gets updated when they're updated in Okta.

        If enabled, Okta updates a user's attributes in the application when the application is assigned.
        Future changes made to the Okta user's profile automatically overwrite the corresponding attribute value in the application.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/EnabledStatus'
          - example: DISABLED
          - default: DISABLED
      type: object
    Protocol:
      example:
        algorithms:
          request:
            signature:
              scope: scope
              algorithm: algorithm
          response:
            signature:
              scope: scope
              algorithm: algorithm
        relayState:
          format: format
        settings:
          nameFormat: nameFormat
        endpoints:
          acs:
            destination: destination
            binding: binding
            type: type
            url: url
          authorization:
            destination: destination
            binding: binding
            type: type
            url: url
          userInfo:
            destination: destination
            binding: binding
            type: type
            url: url
          metadata:
            destination: destination
            binding: binding
            type: type
            url: url
          jwks:
            destination: destination
            binding: binding
            type: type
            url: url
          slo:
            destination: destination
            binding: binding
            type: type
            url: url
          sso:
            destination: destination
            binding: binding
            type: type
            url: url
          token:
            destination: destination
            binding: binding
            type: type
            url: url
        credentials:
          trust:
            revocation: revocation
            audience: audience
            revocationCacheLifetime: 0
            kid: kid
            issuer: issuer
          client:
            pkce_required: true
            client_secret: client_secret
            client_id: client_id
          signing:
            kid: kid
        scopes:
        - scopes
        - scopes
        type: type
        issuer:
          destination: destination
          binding: binding
          type: type
          url: url
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          type: string
          x-okta-known-values:
          - MTLS
          - OAUTH2
          - OIDC
          - SAML2
      type: object
    ProtocolAlgorithmType:
      example:
        signature:
          scope: scope
          algorithm: algorithm
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
      type: object
    ProtocolAlgorithmTypeSignature:
      example:
        scope: scope
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        scope:
          type: string
          x-okta-known-values:
          - ANY
          - NONE
          - REQUEST
          - RESPONSE
          - TOKEN
      type: object
    ProtocolAlgorithmTypeSignatureScope:
      type: string
      x-okta-known-values:
      - ANY
      - NONE
      - REQUEST
      - RESPONSE
      - TOKEN
    ProtocolAlgorithms:
      example:
        request:
          signature:
            scope: scope
            algorithm: algorithm
        response:
          signature:
            scope: scope
            algorithm: algorithm
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
      type: object
    ProtocolEndpoint:
      example:
        destination: destination
        binding: binding
        type: type
        url: url
      properties:
        binding:
          type: string
          x-okta-known-values:
          - HTTP-POST
          - HTTP-REDIRECT
        destination:
          type: string
        type:
          type: string
          x-okta-known-values:
          - INSTANCE
          - ORG
        url:
          type: string
      type: object
    ProtocolEndpointBinding:
      type: string
      x-okta-known-values:
      - HTTP-POST
      - HTTP-REDIRECT
    ProtocolEndpointType:
      type: string
      x-okta-known-values:
      - INSTANCE
      - ORG
    ProtocolEndpoints:
      example:
        acs:
          destination: destination
          binding: binding
          type: type
          url: url
        authorization:
          destination: destination
          binding: binding
          type: type
          url: url
        userInfo:
          destination: destination
          binding: binding
          type: type
          url: url
        metadata:
          destination: destination
          binding: binding
          type: type
          url: url
        jwks:
          destination: destination
          binding: binding
          type: type
          url: url
        slo:
          destination: destination
          binding: binding
          type: type
          url: url
        sso:
          destination: destination
          binding: binding
          type: type
          url: url
        token:
          destination: destination
          binding: binding
          type: type
          url: url
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
      type: object
    ProtocolRelayState:
      example:
        format: format
      properties:
        format:
          type: string
          x-okta-known-values:
          - FROM_URL
          - OPAQUE
      type: object
    ProtocolRelayStateFormat:
      type: string
      x-okta-known-values:
      - FROM_URL
      - OPAQUE
    ProtocolSettings:
      example:
        nameFormat: nameFormat
      properties:
        nameFormat:
          type: string
      type: object
    ProtocolType:
      type: string
      x-okta-known-values:
      - MTLS
      - OAUTH2
      - OIDC
      - SAML2
    ProviderType:
      type: string
      x-okta-known-values:
      - APNS
      - FCM
    Provisioning:
      properties:
        action:
          type: string
          x-okta-known-values:
          - AUTO
          - CALLOUT
          - DISABLED
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
      type: object
    ProvisioningAction:
      type: string
      x-okta-known-values:
      - AUTO
      - CALLOUT
      - DISABLED
    ProvisioningConditions:
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
      type: object
    ProvisioningConnectionAuthScheme:
      description: Defines the method of authentication
      type: string
      x-enumDescriptions:
        TOKEN: A token is used to authenticate with the app.
        OAUTH2: OAuth 2.0 is used to authenticate with the app.
        UNKNOWN: "The authentication scheme used by the app isn't supported, or the\
          \ app doesn't support provisioning."
      x-okta-known-values:
      - OAUTH2
      - TOKEN
      - UNKNOWN
    ProvisioningConnectionOauthAuthScheme:
      description: OAuth 2.0 is used to authenticate with the app.
      type: string
      x-okta-known-values:
      - OAUTH2
    ProvisioningConnectionOauthRequest:
      allOf:
      - $ref: '#/components/schemas/ProvisioningConnectionRequest'
      - description: OAuth 2.0-based Provisioning Connection request
        properties:
          profile:
            $ref: '#/components/schemas/ProvisioningConnectionOauthRequestProfile'
        required:
        - profile
      title: OAuth 2.0-based connection
    ProvisioningConnectionOauthRequestProfile:
      properties:
        authScheme:
          description: OAuth 2.0 is used to authenticate with the app.
          type: string
          x-okta-known-values:
          - OAUTH2
        clientId:
          description: Only used for the Okta Org2Org (`okta_org2org`) app. The unique
            client identifier for the OAuth 2.0 service app from the target org.
          type: string
        settings:
          $ref: '#/components/schemas/Office365ProvisioningSettings'
      required:
      - authScheme
    ProvisioningConnectionProfileOauth:
      description: |
        The app provisioning connection profile used to configure the method of authentication and the credentials.
        Currently, token-based and OAuth 2.0-based authentication are supported.
      properties:
        authScheme:
          description: OAuth 2.0 is used to authenticate with the app.
          type: string
          x-okta-known-values:
          - OAUTH2
        clientId:
          type: string
      required:
      - authScheme
    ProvisioningConnectionRequest:
      type: object
    ProvisioningConnectionRequestAuthScheme:
      type: string
      x-okta-known-values:
      - OAUTH2
      - TOKEN
    ProvisioningConnectionResponse:
      example:
        baseUrl: baseUrl
        _links: null
        profile:
          authScheme: authScheme
        authScheme: authScheme
        status: DISABLED
      properties:
        authScheme:
          description: A token is used to authenticate with the app. This property
            is only returned for the `TOKEN` authentication scheme.
          type: string
          x-okta-known-values:
          - TOKEN
        baseUrl:
          description: Base URL
          type: string
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionResponseProfile'
        status:
          default: DISABLED
          description: Provisioning Connection status
          type: string
          x-enumDescriptions:
            DISABLED: The Provisioning Connection is disabled.
            ENABLED: The Provisioning Connection is enabled.
            UNKNOWN: "Provisioning isn't supported by the app, or the authentication\
              \ method is unknown."
          x-okta-known-values:
          - DISABLED
          - ENABLED
          - UNKNOWN
        _links:
          $ref: '#/components/schemas/LinksSelfLifecycleAndAuthorize'
      required:
      - profile
      - status
      type: object
    ProvisioningConnectionResponseProfile:
      example:
        authScheme: authScheme
      properties:
        authScheme:
          description: Defines the method of authentication
          type: string
          x-enumDescriptions:
            TOKEN: A token is used to authenticate with the app.
            OAUTH2: OAuth 2.0 is used to authenticate with the app.
            UNKNOWN: "The authentication scheme used by the app isn't supported, or\
              \ the app doesn't support provisioning."
          x-okta-known-values:
          - OAUTH2
          - TOKEN
          - UNKNOWN
      required:
      - authScheme
    ProvisioningConnectionStatus:
      default: DISABLED
      description: Provisioning Connection status
      type: string
      x-enumDescriptions:
        DISABLED: The Provisioning Connection is disabled.
        ENABLED: The Provisioning Connection is enabled.
        UNKNOWN: "Provisioning isn't supported by the app, or the authentication method\
          \ is unknown."
      x-okta-known-values:
      - DISABLED
      - ENABLED
      - UNKNOWN
    ProvisioningConnectionTokenAuthScheme:
      description: A token is used to authenticate with the app. This property is
        only returned for the `TOKEN` authentication scheme.
      type: string
      x-okta-known-values:
      - TOKEN
    ProvisioningConnectionTokenRequest:
      allOf:
      - $ref: '#/components/schemas/ProvisioningConnectionRequest'
      - description: Token-based Provisioning Connection request
        properties:
          baseUrl:
            description: "Only used for the Zscaler 2.0 (`zscalerbyz`) app. The base\
              \ URL for the Zscaler 2.0 target app, which also contains the Zscaler\
              \ ID."
            type: string
            x-okta-lifecycle:
              lifecycle: GA
              isGenerallyAvailable: true
          profile:
            $ref: '#/components/schemas/ProvisioningConnectionTokenRequestProfile'
        required:
        - profile
      title: Token-based connection
    ProvisioningConnectionTokenRequestProfile:
      properties:
        authScheme:
          description: A token is used to authenticate with the app. This property
            is only returned for the `TOKEN` authentication scheme.
          type: string
          x-okta-known-values:
          - TOKEN
        token:
          description: Token used to authenticate with the app
          type: string
      required:
      - authScheme
    ProvisioningDeprovisionedAction:
      type: string
      x-okta-known-values:
      - NONE
      - REACTIVATE
    ProvisioningDeprovisionedCondition:
      description: Not supported with OIDC IdPs
      properties:
        action:
          type: string
          x-okta-known-values:
          - NONE
          - REACTIVATE
      type: object
    ProvisioningGroups:
      properties:
        action:
          type: string
          x-okta-known-values:
          - APPEND
          - ASSIGN
          - NONE
          - SYNC
        assignments:
          items:
            type: string
          type: array
        filter:
          items:
            type: string
          type: array
        sourceAttributeName:
          type: string
      type: object
    ProvisioningGroupsAction:
      type: string
      x-okta-known-values:
      - APPEND
      - ASSIGN
      - NONE
      - SYNC
    ProvisioningSuspendedAction:
      type: string
      x-okta-known-values:
      - NONE
      - UNSUSPEND
    ProvisioningSuspendedCondition:
      description: Not supported with OIDC IdPs
      properties:
        action:
          type: string
          x-okta-known-values:
          - NONE
          - UNSUSPEND
      type: object
    PushMethodKeyProtection:
      description: Indicates whether you must use a hardware key store
      type: string
      x-okta-known-values:
      - ANY
      - HARDWARE
    PushProvider:
      discriminator:
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
        propertyName: providerType
      properties:
        id:
          description: Unique key for the Push Provider
          readOnly: true
          type: string
        lastUpdatedDate:
          description: Timestamp when the Push Provider was last modified
          readOnly: true
          type: string
        name:
          description: Display name of the push provider
          type: string
        providerType:
          type: string
          x-okta-known-values:
          - APNS
          - FCM
        _links:
          $ref: '#/components/schemas/LinksSelf'
      title: PushProvider
      type: object
    RateLimitAdminNotifications:
      description: ""
      example:
        notificationsEnabled: true
      properties:
        notificationsEnabled:
          type: boolean
      required:
      - notificationsEnabled
      title: RateLimitAdminNotifications
      type: object
    RateLimitWarningThresholdRequest:
      description: ""
      example:
        warningThreshold: 34
      properties:
        warningThreshold:
          description: "The threshold value (percentage) of a rate limit that, when\
            \ exceeded, triggers a warning notification. By default, this value is\
            \ 90 for Workforce orgs and 60 for CIAM orgs."
          maximum: 90
          minimum: 30
          type: integer
      required:
      - warningThreshold
      title: RateLimitWarningThreshold
      type: object
    RateLimitWarningThresholdResponse:
      description: ""
      example:
        warningThreshold: 34
      properties:
        warningThreshold:
          description: "The threshold value (percentage) of a rate limit that, when\
            \ exceeded, triggers a warning notification. By default, this value is\
            \ 90 for Workforce orgs and 60 for CIAM orgs."
          maximum: 90
          minimum: 30
          type: integer
      title: RateLimitWarningThreshold
      type: object
    Realm:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        isDefault: true
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          realmType: PARTNER
          name: name
        id: id
      properties:
        created:
          description: Timestamp when the Realm was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique key for the Realm
          readOnly: true
          type: string
        isDefault:
          description: Conveys whether the Realm is the default
          readOnly: true
          type: boolean
        lastUpdated:
          description: Timestamp when the Realm was last updated
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/RealmProfile'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    RealmAssignment:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        isDefault: true
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            value: value
          profileSourceId: profileSourceId
        priority: 0
        actions:
          assignUserToRealm:
            realmId: realmId
        status: status
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        isDefault:
          readOnly: true
          type: boolean
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    RealmProfile:
      example:
        realmType: PARTNER
        name: name
      properties:
        name:
          description: Name of a Realm
          type: string
        realmType:
          description: Used to store partner users. This must be set to Partner to
            access Okta's external partner portal.
          enum:
          - PARTNER
          - DEFAULT
          type: string
          x-enumDescriptions:
            PARTNER: Realm with external partner portal
            DEFAULT: Default
      required:
      - name
      type: object
    RecoveryQuestionCredential:
      description: |-
        Specifies a secret question and answer that's validated (case insensitive) when a user forgets their
        password or unlocks their account. The answer property is write-only.
      example:
        answer: answer
        question: question
      properties:
        answer:
          description: The recovery question answer
          maximum: 100
          minimum: 1
          type: string
          writeOnly: true
        question:
          description: The recovery question
          maximum: 100
          minimum: 1
          type: string
      type: object
    ReleaseChannel:
      description: Release channel for auto-update
      type: string
      x-okta-known-values:
      - BETA
      - EA
      - GA
      - TEST
    RequiredEnum:
      type: string
      x-okta-known-values:
      - ALWAYS
      - HIGH_RISK_ONLY
      - NEVER
    ResendUserFactor:
      discriminator:
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          sms: '#/components/schemas/UserFactorSMS'
        propertyName: factorType
      properties:
        factorType:
          description: Type of the Factor
          enum:
          - call
          - email
          - sms
          type: string
      type: object
    ResetPasswordToken:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
    ResourceSelectorCreateRequestSchema:
      properties:
        description:
          description: Description of the Resource Selector
          type: string
        filter:
          description: SCIM filter of the Resource Selector
          type: string
        name:
          description: Name of the Resource Selector
          type: string
        schema:
          description: Schema of the Resource Selector
          type: string
      type: object
    ResourceSelectorPatchRequestSchema:
      properties:
        description:
          description: Description of the Resource Selector
          type: string
        filter:
          description: SCIM filter of the Resource Selector
          type: string
        name:
          description: Name of the Resource Selector
          type: string
      type: object
    ResourceSelectorResponseSchema:
      properties:
        description:
          description: Description of the Resource Selector
          type: string
        id:
          description: Unique key for the Resource Selector
          type: string
        name:
          description: Name of the Resource Selector
          type: string
        orn:
          description: An Okta resource name
          type: string
        _links:
          $ref: '#/components/schemas/ResourceSelectorResponseSchema__links'
      type: object
    ResourceSelectorResponseWithoutSelfLinkSchema:
      properties:
        description:
          description: Description of the Resource Selector
          type: string
        id:
          description: Unique key for the Resource Selector
          type: string
        name:
          description: Name of the Resource Selector
          type: string
        orn:
          description: An Okta resource name
          type: string
        _links:
          $ref: '#/components/schemas/ResourceSelectorResponseWithoutSelfLinkSchema__links'
      type: object
    ResourceSelectorsSchema:
      properties:
        resourceSelectors:
          items:
            $ref: '#/components/schemas/ResourceSelectorResponseWithoutSelfLinkSchema'
          type: array
        _links:
          $ref: '#/components/schemas/LinksNext'
      type: object
    ResourceSet:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
      properties:
        created:
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the Resource Set
          type: string
        id:
          description: Unique key for the role
          readOnly: true
          type: string
        label:
          description: Unique label for the Resource Set
          type: string
        lastUpdated:
          description: Timestamp when the role was last updated
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/ResourceSet__links'
      type: object
    ResourceSetBindingAddMembersRequest:
      example:
        additions:
        - additions
        - additions
      properties:
        additions:
          items:
            type: string
          type: array
      type: object
    ResourceSetBindingCreateRequest:
      example:
        role: role
        members:
        - members
        - members
      properties:
        members:
          items:
            type: string
          type: array
        role:
          description: Unique key for the role
          type: string
      type: object
    ResourceSetBindingMember:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        created:
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique key for the role
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the role was last updated
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    ResourceSetBindingMembers:
      example:
        _links: null
        members:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links:
            self: null
          created: 2000-01-23T04:56:07.000+00:00
          id: id
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links:
            self: null
          created: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        members:
          items:
            $ref: '#/components/schemas/ResourceSetBindingMember'
          type: array
        _links:
          $ref: '#/components/schemas/ResourceSetBindingMembers__links'
      type: object
    ResourceSetBindingResponse:
      example:
        _links: null
        id: id
      properties:
        id:
          description: '`id` of the role'
          type: string
        _links:
          $ref: '#/components/schemas/ResourceSetBindingResponse__links'
      type: object
    ResourceSetBindingRole:
      example:
        _links: null
        id: id
      properties:
        id:
          type: string
        _links:
          $ref: '#/components/schemas/ResourceSetBindingRole__links'
      type: object
    ResourceSetBindings:
      example:
        _links: null
        roles:
        - _links: null
          id: id
        - _links: null
          id: id
      properties:
        roles:
          items:
            $ref: '#/components/schemas/ResourceSetBindingRole'
          type: array
        _links:
          $ref: '#/components/schemas/ResourceSetBindingResponse__links'
      type: object
    ResourceSetResource:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
      properties:
        created:
          description: Timestamp when the role was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the Resource Set
          type: string
        id:
          description: Unique key for the role
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the role was last updated
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    ResourceSetResourcePatchRequest:
      example:
        additions:
        - additions
        - additions
      properties:
        additions:
          items:
            type: string
          type: array
      type: object
    ResourceSetResources:
      example:
        _links: null
        resources:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links:
            self: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links:
            self: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
      properties:
        resources:
          items:
            $ref: '#/components/schemas/ResourceSetResource'
          type: array
        _links:
          $ref: '#/components/schemas/ResourceSetResources__links'
      type: object
    ResourceSets:
      example:
        resource-sets:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          label: label
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          _links: null
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          label: label
        _links:
          next:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
      properties:
        resource-sets:
          items:
            $ref: '#/components/schemas/ResourceSet'
          type: array
        _links:
          $ref: '#/components/schemas/LinksNext'
      type: object
    ResponseLinks:
      type: object
    ResponseMode:
      type: string
      x-enumDescriptions:
        fragment: Parameters are encoded in the URL fragment added to the `redirect_uri`
          when redirecting back to the client.
        query: Parameters are encoded in the query string added to the `redirect_uri`
          when redirecting back to the client.
        form_post: Parameters are encoded as HTML form values (`application/x-www-form-urlencoded`
          format) and are transmitted through the HTTP POST method to the client.
        okta_post_message: |-
          Uses [HTML5 Web Messaging](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) (for example, `window.postMessage()`) instead of the redirect for the authorization response from the `/authorize` endpoint.

          `okta_post_message` is an adaptation of the [Web Message Response Mode](https://tools.ietf.org/html/draft-sakimura-oauth-wmrm-00#section-4.1).
          This value provides a secure way for a single-page application to perform a sign-in flow in a pop-up window or an iFrame and receive the ID token, access token, and/or authorization code back in the parent page without leaving the context of that page. The data object for the `postMessage` call is in the next section.
      x-okta-known-values:
      - form_post
      - fragment
      - okta_post_message
      - query
    ResponseType:
      type: string
      x-okta-known-values:
      - code
      - id_token
      - none
      - token
    ResponseTypesSupported:
      type: string
      x-okta-known-values:
      - code
      - code id_token
      - code id_token token
      - code token
      - id_token
      - id_token token
      - token
    RiscIdentifierChangedEvent:
      description: "The subject's identifier has changed, which is either an email\
        \ address or a phone number change"
      properties:
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        new-value:
          description: The new identifier value
          example: new.email@okta.example.com
          type: string
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - event_timestamp
      - subjects
      type: object
    RiskEvent:
      example:
        subjects:
        - riskLevel: riskLevel
          ip: ip
          message: message
        - riskLevel: riskLevel
          ip: ip
          message: message
        expiresAt: 2000-01-23T04:56:07.000+00:00
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        expiresAt:
          description: "Timestamp at which the event expires (expressed as a UTC time\
            \ zone using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`). If this optional\
            \ field is not included, Okta automatically expires the event 24 hours\
            \ after the event is consumed."
          format: date-time
          type: string
        subjects:
          description: List of Risk Event Subjects
          items:
            $ref: '#/components/schemas/RiskEventSubject'
          type: array
        timestamp:
          description: "Timestamp of when the event is produced (expressed as a UTC\
            \ time zone using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`)"
          format: date-time
          type: string
      required:
      - subjects
      type: object
    RiskEventSubject:
      example:
        riskLevel: riskLevel
        ip: ip
        message: message
      properties:
        ip:
          description: The risk event subject IP address (either an IPv4 or IPv6 address)
          type: string
        message:
          description: Additional reasons for the risk level of the IP
          maxLength: 512
          pattern: "^[a-zA-Z0-9 .\\-_]*$"
          type: string
        riskLevel:
          description: The risk level associated with the IP
          type: string
          x-okta-known-values:
          - HIGH
          - LOW
          - MEDIUM
      required:
      - ip
      - riskLevel
      type: object
    RiskEventSubjectRiskLevel:
      description: The risk level associated with the IP
      type: string
      x-okta-known-values:
      - HIGH
      - LOW
      - MEDIUM
    RiskPolicyRuleCondition:
      properties:
        behaviors:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    RiskProvider:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: 00cjkjjkkgjkdkjdkkljjsd
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        name: Risk-Partner-X
        action: log_only
        id: 00rp12r4skkjkjgsn
      properties:
        action:
          default: log_only
          description: Action taken by Okta during authentication attempts based on
            the risk events sent by this provider
          type: string
          x-enumDescriptions:
            log_only: Include risk event information in the System Log
            none: No action
            enforce_and_log: Use risk event information to evaluate risks during authentication
              attempts and include risk event information in the System Log
          x-okta-known-values:
          - enforce_and_log
          - log_only
          - none
        clientId:
          description: "The ID of the [OAuth service app](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#create-a-service-app-and-grant-scopes)\
            \ that is used to send risk events to Okta"
          example: 00cjkjjkkgjkdkjdkkljjsd
          type: string
        created:
          description: Timestamp when the Risk Provider object was created
          format: date-time
          readOnly: true
          type: string
        id:
          description: The ID of the Risk Provider object
          example: 00rp12r4skkjkjgsn
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the Risk Provider object was last updated
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the risk provider
          example: Risk-Partner-X
          maxLength: 50
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - _links
      - action
      - clientId
      - id
      - name
      type: object
    RiskProviderAction:
      default: log_only
      description: Action taken by Okta during authentication attempts based on the
        risk events sent by this provider
      type: string
      x-enumDescriptions:
        log_only: Include risk event information in the System Log
        none: No action
        enforce_and_log: Use risk event information to evaluate risks during authentication
          attempts and include risk event information in the System Log
      x-okta-known-values:
      - enforce_and_log
      - log_only
      - none
    RiskScorePolicyRuleCondition:
      properties:
        level:
          type: string
      type: object
    Role:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
        type: type
        assignmentType: assignmentType
        status: status
      properties:
        assignmentType:
          type: string
          x-okta-known-values:
          - GROUP
          - USER
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          description: Standard role type
          type: string
          x-enumDescriptions:
            API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
            API_ADMIN: Access Management Administrator
            APP_ADMIN: Application Administrator
            CUSTOM: Custom label specified by the client
            GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
            HELP_DESK_ADMIN: Help Desk Administrator
            MOBILE_ADMIN: Mobile Administrator
            ORG_ADMIN: Organizational Administrator
            READ_ONLY_ADMIN: Read-Only Administrator
            REPORT_ADMIN: Report Administrator
            SUPER_ADMIN: Super Administrator
            USER_ADMIN: Group Administrator
          x-okta-known-values:
          - API_ACCESS_MANAGEMENT_ADMIN
          - API_ADMIN
          - APP_ADMIN
          - CUSTOM
          - GROUP_MEMBERSHIP_ADMIN
          - HELP_DESK_ADMIN
          - MOBILE_ADMIN
          - ORG_ADMIN
          - READ_ONLY_ADMIN
          - REPORT_ADMIN
          - SUPER_ADMIN
          - USER_ADMIN
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    RoleAssignedUser:
      example:
        _links: null
        orn: orn
        id: id
      properties:
        id:
          readOnly: true
          type: string
        orn:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelfAndRoles'
      type: object
    RoleAssignedUsers:
      example:
        _links:
          next:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
        value:
        - _links: null
          orn: orn
          id: id
        - _links: null
          orn: orn
          id: id
      properties:
        value:
          items:
            $ref: '#/components/schemas/RoleAssignedUser'
          type: array
        _links:
          $ref: '#/components/schemas/LinksNext'
      type: object
    RoleAssignmentType:
      type: string
      x-okta-known-values:
      - GROUP
      - USER
    RolePermissionType:
      description: Permission type
      type: string
      x-okta-known-values:
      - okta.apps.assignment.manage
      - okta.apps.manage
      - okta.apps.manageFirstPartyApps
      - okta.apps.read
      - okta.authzServers.manage
      - okta.authzServers.read
      - okta.customizations.manage
      - okta.customizations.read
      - okta.devices.lifecycle.activate
      - okta.devices.lifecycle.deactivate
      - okta.devices.lifecycle.delete
      - okta.devices.lifecycle.manage
      - okta.devices.lifecycle.suspend
      - okta.devices.lifecycle.unsuspend
      - okta.devices.manage
      - okta.devices.read
      - okta.governance.accessCertifications.manage
      - okta.governance.accessRequests.manage
      - okta.groups.appAssignment.manage
      - okta.groups.create
      - okta.groups.manage
      - okta.groups.members.manage
      - okta.groups.read
      - okta.identityProviders.manage
      - okta.identityProviders.read
      - okta.profilesources.import.run
      - okta.users.appAssignment.manage
      - okta.users.create
      - okta.users.credentials.expirePassword
      - okta.users.credentials.manage
      - okta.users.credentials.resetFactors
      - okta.users.credentials.resetPassword
      - okta.users.groupMembership.manage
      - okta.users.lifecycle.activate
      - okta.users.lifecycle.clearSessions
      - okta.users.lifecycle.deactivate
      - okta.users.lifecycle.delete
      - okta.users.lifecycle.manage
      - okta.users.lifecycle.suspend
      - okta.users.lifecycle.unlock
      - okta.users.lifecycle.unsuspend
      - okta.users.manage
      - okta.users.read
      - okta.users.userprofile.manage
    RoleType:
      description: Standard role type
      type: string
      x-enumDescriptions:
        API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
        API_ADMIN: Access Management Administrator
        APP_ADMIN: Application Administrator
        CUSTOM: Custom label specified by the client
        GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
        HELP_DESK_ADMIN: Help Desk Administrator
        MOBILE_ADMIN: Mobile Administrator
        ORG_ADMIN: Organizational Administrator
        READ_ONLY_ADMIN: Read-Only Administrator
        REPORT_ADMIN: Report Administrator
        SUPER_ADMIN: Super Administrator
        USER_ADMIN: Group Administrator
      x-okta-known-values:
      - API_ACCESS_MANAGEMENT_ADMIN
      - API_ADMIN
      - APP_ADMIN
      - CUSTOM
      - GROUP_MEMBERSHIP_ADMIN
      - HELP_DESK_ADMIN
      - MOBILE_ADMIN
      - ORG_ADMIN
      - READ_ONLY_ADMIN
      - REPORT_ADMIN
      - SUPER_ADMIN
      - USER_ADMIN
    SafeBrowsingProtectionLevel:
      description: Represents the current value of the Safe Browsing protection level
      example: ENHANCED_PROTECTION
      type: string
      x-enumDescriptions:
        NO_SAFE_BROWSING: Safe Browsing is never active
        STANDARD_PROTECTION: Safe Browsing is active in the standard mode
        ENHANCED_PROTECTION: Safe Browsing is active in the enhanced mode
      x-okta-known-values:
      - ENHANCED_PROTECTION
      - NO_SAFE_BROWSING
      - STANDARD_PROTECTION
    SalesforceApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - salesforce
            example: salesforce
            type: string
          signOnMode:
            enum:
            - BROWSER_PLUGIN
            - BOOKMARK
            - SAML_2_0
            example: BROWSER_PLUGIN
            type: string
          settings:
            $ref: '#/components/schemas/SalesforceApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Salesforce app (key name: `salesforce`)

        To create a Salesforce app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Salesforce app only supports `BROWSER_PLUGIN`, `BOOKMARK`, and `SAML_2_0` sign-on modes.
      example:
        name: salesforce
        label: Sample Salesforce App
        signOnMode: SAML_2_0
        settings:
          app:
            instanceType: SANDBOX
            integrationType: STANDARD
      title: Salesforce
      x-tags:
      - Application
      x-okta-defined-as:
        name: salesforce
    SalesforceApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/SalesforceApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    SalesforceApplicationSettingsApplication:
      description: Salesforce app instance properties
      properties:
        instanceType:
          description: Salesforce instance that you want to connect to
          enum:
          - SANDBOX
          - PRODUCTION
          - GOVERNMENT
          type: string
        integrationType:
          description: Salesforce integration type
          enum:
          - STANDARD
          - PORTAL
          - COMMUNITY
          type: string
        loginUrl:
          description: The Login URL specified in your Salesforce Single Sign-On settings
          type: string
        logoutUrl:
          description: Salesforce Logout URL
          type: string
      required:
      - instanceType
      - integrationType
      type: object
    Saml:
      description: SAML configuration details
      properties:
        acs:
          description: "List of Assertion Consumer Service (ACS) URLs. The default\
            \ ACS URL is required and is indicated by a null `index` value. You can\
            \ use the org-level variables you defined in the `config` array in the\
            \ URL. For example: `https://${org.subdomain}.example.com/saml/login`"
          items:
            $ref: '#/components/schemas/Saml_acs_inner'
          minItems: 1
          type: array
        doc:
          description: "The URL to your customer-facing instructions for configuring\
            \ your SAML integration. See [Customer configuration document guidelines](https://developer.okta.com/docs/guides/submit-app-prereq/main/#customer-configuration-document-guidelines)."
          example: https://example.com/strawberry/help/samlSetup
          format: uri
          type: string
        entityId:
          description: "Globally unique name for your SAML entity. For instance, your\
            \ Identity Provider (IdP) or Service Provider (SP) URL."
          example: "https://${org.subdomain}.example.com"
          type: string
      required:
      - acs
      - doc
      - entityId
      type: object
    Saml11Application:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/ApplicationCredentials'
          name:
            description: The key name for the SAML 1.1 app definition. You can't create
              a custom SAML 1.1 app integration instance. Only existing OIN SAML 1.1
              app integrations are supported.
            type: string
          settings:
            $ref: '#/components/schemas/Saml11ApplicationSettings'
        required:
        - name
        type: object
    Saml11ApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            additionalProperties:
              type: string
            type: object
          signOn:
            $ref: '#/components/schemas/Saml11ApplicationSettingsSignOn'
        type: object
    Saml11ApplicationSettingsSignOn:
      description: SAML 1.1 sign-on mode attributes
      properties:
        audienceOverride:
          description: The intended audience of the SAML assertion. This is usually
            the Entity ID of your application.
          type: string
        defaultRelayState:
          description: "The URL of the resource to direct users after they successfully\
            \ sign in to the SP using SAML. See the SP documentation to check if you\
            \ need to specify a RelayState. In most instances, you can leave this\
            \ field blank."
          type: string
        recipientOverride:
          description: The location where the application can present the SAML assertion.
            This is usually the Single Sign-On (SSO) URL.
          type: string
        ssoAcsUrlOverride:
          description: Assertion Consumer Services (ACS) URL value for the Service
            Provider (SP). This URL is always used for Identity Provider (IdP) initiated
            sign-on requests.
          type: string
      title: SAML 1.1 settings
      type: object
    SamlApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/ApplicationCredentials'
          name:
            description: A unique key is generated for the custom app instance when
              you use SAML_2_0 `signOnMode`.
            readOnly: true
            type: string
          settings:
            $ref: '#/components/schemas/SamlApplicationSettings'
        type: object
    SamlApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/SamlApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
        type: object
    SamlApplicationSettingsApplication:
      properties:
        acsUrl:
          type: string
        audRestriction:
          type: string
        baseUrl:
          type: string
      type: object
    SamlApplicationSettingsSignOn:
      description: |-
        SAML sign-on attributes.
        > **Note:** Only for SAML 2.0, set either `destinationOverride` or `ssoAcsUrl` to configure any other SAML 2.0 attributes in this section.
      properties:
        acsEndpoints:
          items:
            $ref: '#/components/schemas/AcsEndpoint'
          type: array
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        audience:
          type: string
        audienceOverride:
          description: "Audience override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        authnContextClassRef:
          type: string
        configuredAttributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        defaultRelayState:
          description: Identifies a specific application resource in an IdP-initiated
            SSO scenario
          type: string
        destination:
          type: string
        destinationOverride:
          description: "Destination override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          description: Set to `true` to prompt users for their credentials when a
            SAML request has the `ForceAuthn` attribute set to `true`
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        participateSlo:
          $ref: '#/components/schemas/SloParticipate'
        recipient:
          type: string
        recipientOverride:
          description: "Recipient override for CASB configuration. See [CASB config\
            \ guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        samlAssertionLifetimeSeconds:
          description: For SAML 2.0 only.<br>Determines the SAML app session lifetimes
            with Okta
          example: 3600
          type: integer
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          description: Single Sign-On Assertion Consumer Service (ACS) URL
          type: string
        ssoAcsUrlOverride:
          description: "Assertion Consumer Service (ACS) URL override for CASB configuration.\
            \ See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)."
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
      type: object
    SamlAttributeStatement:
      description: Define custom attribute statements for the integration. These statements
        are inserted into the SAML assertions shared with your app
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    ScheduledUserLifecycleAction:
      properties:
        status:
          type: string
          x-okta-known-values:
          - ACTIVATING
          - ACTIVE
          - DELETED
          - DELETING
          - EXPIRED_PASSWORD
          - INACTIVE
          - PENDING
          - SUSPENDED
      type: object
    SchemeApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - properties:
          password:
            $ref: '#/components/schemas/PasswordCredential'
          revealPassword:
            description: Allow users to securely see their password
            type: boolean
          scheme:
            $ref: '#/components/schemas/ApplicationCredentialsScheme'
          signing:
            $ref: '#/components/schemas/ApplicationCredentialsSigning'
          userName:
            type: string
        type: object
    Scope:
      type: string
    ScreenLockType:
      type: string
      x-okta-known-values:
      - BIOMETRIC
      - NONE
      - PASSCODE
    SecurePasswordStoreApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            description: '`template_sps` is the key name for a SWA app instance that
              uses HTTP POST and doesn''t require a browser plugin'
            enum:
            - template_sps
            type: string
          settings:
            $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
        required:
        - name
        - settings
        type: object
      x-okta-defined-as:
        name: template_sps
    SecurePasswordStoreApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
        type: object
    SecurePasswordStoreApplicationSettingsApplication:
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
    SecurityEvent:
      properties:
        event_timestamp:
          description: The time of the event (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        subjects:
          $ref: '#/components/schemas/SecurityEventSubject'
      required:
      - event_timestamp
      - subjects
      type: object
    SecurityEventReason:
      properties:
        en:
          description: The event reason in English
          example: Event message example
          type: string
      required:
      - en
      type: object
    SecurityEventSubject:
      description: The event subjects
      properties:
        device:
          description: The device involved with the event
          type: object
        tenant:
          description: The tenant involved with the event
          type: object
        user:
          description: The user involved with the event
          type: object
    SecurityEventTokenError:
      description: Error object thrown when parsing the Security Event Token
      properties:
        description:
          description: |
            Describes the error
            > **Note:** SET claim fields with underscores (snake case) are presented in camelcase. For example, `previous_status` appears as `previousStatus`.
          example: "Failed claim validation in security event token. 'events.mediationDeviceComplianceChangeEvent.previousStatus':\
            \ The field cannot be left blank"
          type: string
        err:
          description: A code that describes the category of the error
          enum:
          - authentication_failed
          - invalid_audience
          - invalid_issuer
          - invalid_key
          - invalid_request
          example: invalid_request
          type: string
      title: Security Event Token Error
      type: object
    SecurityEventTokenRequestJwtBody:
      description: JSON Web Token body payload for a Security Event Token
      properties:
        aud:
          description: Audience
          example: https://receiverexample.okta.com/
          type: string
        events:
          $ref: '#/components/schemas/SecurityEventTokenRequestJwtEvents'
        iat:
          description: Token issue time (UNIX timestamp)
          example: 1702448550
          format: int64
          type: integer
        iss:
          description: Token issuer
          example: https://transmitter.example.com
          type: string
        jti:
          description: Token ID
          example: 24c63fb56f ... a9fa24
          type: string
      required:
      - aud
      - events
      - iat
      - iss
      - jti
      title: Security Event Token JWT body payload
      type: object
      x-tags:
      - SSFSecurityEventToken
    SecurityEventTokenRequestJwtEvents:
      description: A non-empty collection of events
      properties:
        https://schemas.okta.com/secevent/okta/event-type/device-risk-change:
          $ref: '#/components/schemas/OktaDeviceRiskChangeEvent'
        https://schemas.okta.com/secevent/okta/event-type/ip-change:
          $ref: '#/components/schemas/OktaIpChangeEvent'
        https://schemas.okta.com/secevent/okta/event-type/user-risk-change:
          $ref: '#/components/schemas/OktaUserRiskChangeEvent'
        https://schemas.openid.net/secevent/caep/event-type/device-compliance-change:
          $ref: '#/components/schemas/CaepDeviceComplianceChangeEvent'
        https://schemas.openid.net/secevent/caep/event-type/session-revoked:
          $ref: '#/components/schemas/CaepSessionRevokedEvent'
        https://schemas.openid.net/secevent/risc/event-type/identifier-changed:
          $ref: '#/components/schemas/RiscIdentifierChangedEvent'
      type: object
    SecurityEventTokenRequestJwtHeader:
      description: JSON Web Token header for a Security Event Token
      properties:
        alg:
          description: Algorithm used to sign or encrypt the JWT
          example: RS256
          type: string
        kid:
          description: Key ID used to sign or encrypt the JWT
          type: string
        typ:
          description: The type of content being signed or encrypted
          example: secevent+jwt
          type: string
      required:
      - alg
      - kid
      - typ
      title: Security Event Token JWT header
      type: object
      x-tags:
      - SSFSecurityEventToken
    SecurityEventsProviderRequest:
      description: The request schema for creating or updating a Security Events Provider.
        The `settings` must match one of the schemas.
      example:
        settings: null
        name: Target SSF Provider
        type: okta
      properties:
        name:
          description: The name of the Security Events Provider instance
          example: Target SSF Provider
          maxLength: 100
          type: string
        settings:
          $ref: '#/components/schemas/SecurityEventsProviderRequest_settings'
        type:
          description: The application type of the Security Events Provider
          example: okta
          maxLength: 255
          type: string
      required:
      - name
      - settings
      - type
      title: Security Events Provider Request
      type: object
    SecurityEventsProviderResponse:
      description: The Security Events Provider response
      example:
        settings:
          well_known_url: https://example.okta.com/.well-known/ssf-configuration
          issuer: example.okta.com
          jwks_url: https://example.okta.com/oauth2/v1/keys
        _links: null
        name: Target SSF Provider
        id: sse1qg25RpusjUP6m0g5
        type: okta
        status: ACTIVE
      properties:
        id:
          description: The unique identifier of this instance
          example: sse1qg25RpusjUP6m0g5
          readOnly: true
          type: string
        name:
          description: The name of the Security Events Provider instance
          example: Target SSF Provider
          maxLength: 100
          type: string
        settings:
          $ref: '#/components/schemas/SecurityEventsProviderSettingsResponse'
        status:
          description: Indicates whether the Security Events Provider is active or
            not
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
        type:
          description: The application type of the Security Events Provider
          example: okta
          maxLength: 255
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      title: Security Events Provider Response
      type: object
    SecurityEventsProviderSettingsNonSSFCompliant:
      description: Security Events Provider with issuer and JWKS settings for signal
        ingestion
      properties:
        issuer:
          description: Issuer URL
          example: example.okta.com
          maxLength: 700
          type: string
        jwks_url:
          description: The public URL where the JWKS public key is uploaded
          example: https://example.okta.com/oauth2/v1/keys
          format: url
          maxLength: 1000
          type: string
      required:
      - issuer
      - jwks_url
      title: Provider with issuer and JWKS settings
      type: object
    SecurityEventsProviderSettingsResponse:
      description: Security Events Provider settings
      example:
        well_known_url: https://example.okta.com/.well-known/ssf-configuration
        issuer: example.okta.com
        jwks_url: https://example.okta.com/oauth2/v1/keys
      properties:
        issuer:
          description: Issuer URL
          example: example.okta.com
          maxLength: 700
          type: string
        jwks_url:
          description: The public URL where the JWKS public key is uploaded
          example: https://example.okta.com/oauth2/v1/keys
          format: url
          maxLength: 1000
          type: string
        well_known_url:
          description: The well-known URL of the Security Events Provider (the SSF
            transmitter)
          example: https://example.okta.com/.well-known/ssf-configuration
          format: url
          maxLength: 1000
          nullable: true
          type: string
      title: Security Events Provider settings
      type: object
    SecurityEventsProviderSettingsSSFCompliant:
      description: Security Events Provider with well-known URL setting
      properties:
        well_known_url:
          description: The published well-known URL of the Security Events Provider
            (the SSF transmitter)
          example: https://example.okta.com/.well-known/ssf-configuration
          format: url
          maxLength: 1000
          type: string
      required:
      - well_known_url
      title: Provider with well-known URL setting
      type: object
    SeedEnum:
      default: RANDOM
      description: Determines whether the generated password is the user's Okta password
        or a randomly generated password
      example: OKTA
      type: string
      x-okta-known-values:
      - OKTA
      - RANDOM
    SelfServicePasswordResetAction:
      allOf:
      - $ref: '#/components/schemas/PasswordPolicyRuleAction'
      - type: object
      - description: Enables or disables users to reset their own password and defines
          the authenticators and constraints needed to complete the reset
        properties:
          type:
            description: The type of rule action
            enum:
            - selfServicePasswordReset
            readOnly: true
            type: string
          requirement:
            $ref: '#/components/schemas/SsprRequirement'
    Session:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastFactorVerification: 2000-01-23T04:56:07.000+00:00
        idp:
          id: id
          type: type
        _links:
          self: null
        amr:
        - null
        - null
        id: id
        login: login
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastPasswordVerification: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        amr:
          description: Authentication method reference
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          description: A timestamp when the Session expires
          format: date-time
          readOnly: true
          type: string
        id:
          description: A unique key for the Session
          readOnly: true
          type: string
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          description: A timestamp when the user last performed multifactor authentication
          format: date-time
          readOnly: true
          type: string
        lastPasswordVerification:
          description: A timestamp when the user last performed the primary or step-up
            authentication with a password
          format: date-time
          readOnly: true
          type: string
        login:
          description: A unique identifier for the user (username)
          readOnly: true
          type: string
        status:
          type: string
          x-enumDescriptions:
            ACTIVE: The Session is established and fully validated.
            MFA_REQUIRED: "The Session is established, but requires second factor\
              \ verification."
            MFA_ENROLL: "The Session is established, but the user needs to enroll\
              \ a second factor."
          x-okta-known-values:
          - ACTIVE
          - MFA_ENROLL
          - MFA_REQUIRED
        userId:
          description: A unique key for the user
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    SessionAuthenticationMethod:
      type: string
      x-enumDescriptions:
        pwd: Password authentication. **Inline hook value:** `PASSWORD` **Example:**
          Standard password-based sign-in
        swk: Proof-of-possession (PoP) of a software key. **Inline hook value:** `POP_SOFTWARE_KEY`
          **Example:** Okta Verify with Push
        hwk: Proof-of-possession (PoP) of a hardware key. **Inline hook value:** `POP_HARDWARE_KEY`
          **Example:** Yubikey factor
        opt: "One-time password. **Inline hook value:** `ONE_TIME_PASSWORD`. **Example:**\
          \ Okta Verify, Google Authenticator"
        sms: SMS text message to the user at a registered number. **Inline hook value:**
          `SMS_MESSAGE`. **Example:** SMS factor
        tel: Telephone call to the user at a registered number. **Inline hook value:**
          `TELEPHONE_CALL`. **Example:** Phone call factor
        geo: Use of geo-location information. **Inline hook value:** `GEOLOCATION`.
          **Example:** IP Trust and Network Zone policy conditions
        fpt: Fingerprint biometric authentication. **Inline hook value:** `BIO_FINGERPRINT`.
          **Example:** Okta Verify with Touch ID
        kba: Knowledge-based authentication. **Inline hook value:** `KNOWLEDGE_BASED_AUTHENTICATION`.
          **Example:** Security Question factor
        mfa: Multifactor authentication. **Inline hook value:** `MULTIFACTOR_AUTHENTICATION`.
          **Example:** This value is present whenever any MFA factor verification
          is performed.
        mca: "Multiple-channel authentication. **Inline hook value:** `MULTIPLE_CHANNEL_AUTHENTICATION`.\
          \ **Example:** Authentication requires communication over more than one\
          \ channel, such as Internet and mobile network"
        sc: "Smart card authentication. **Inline hook value:** `SMART_CARD. **Example:**\
          \ User authenticated using a smart card, such as a Personal Identity Verification\
          \ (PIV) card or Common Access Card (CAC)"
      x-okta-known-values:
      - fpt
      - geo
      - hwk
      - kba
      - mca
      - mfa
      - otp
      - pwd
      - sc
      - sms
      - swk
      - tel
    SessionIdentityProvider:
      example:
        id: id
        type: type
      properties:
        id:
          description: "Identity Provider ID. If the `type` is `OKTA`, then the `id`\
            \ is the org ID."
          readOnly: true
          type: string
        type:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FEDERATION
          - LDAP
          - OKTA
          - SOCIAL
      type: object
    SessionIdentityProviderType:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
    SessionStatus:
      type: string
      x-enumDescriptions:
        ACTIVE: The Session is established and fully validated.
        MFA_REQUIRED: "The Session is established, but requires second factor verification."
        MFA_ENROLL: "The Session is established, but the user needs to enroll a second\
          \ factor."
      x-okta-known-values:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
    ShowSignInWithOV:
      description: Controls whether to show the Sign in with Okta Verify button on
        the Sign-In Widget
      type: string
      x-okta-known-values:
      - ALWAYS
      - NEVER
    SignInPage:
      allOf:
      - $ref: '#/components/schemas/CustomizablePage'
      - properties:
          contentSecurityPolicySetting:
            $ref: '#/components/schemas/ContentSecurityPolicySetting'
          widgetCustomizations:
            $ref: '#/components/schemas/SignInPage_allOf_widgetCustomizations'
          widgetVersion:
            $ref: '#/components/schemas/Version'
        type: object
    SignInPageTouchPointVariant:
      description: |
        Variant for the Okta sign-in page. You can publish a theme for sign-in page with different combinations of assets. Variants are preset combinations of those assets.
        > **Note:**  For a non-`OKTA_DEFAULT` variant, `primaryColorHex` is used for button background color and `primaryColorContrastHex` is used to optimize the opacity for button text.
      type: string
      x-enumDescriptions:
        BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the Theme"
        BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme. Uses
          `secondaryColorHex` as the background color for the Okta sign-in page.
        OKTA_DEFAULT: Uses the Okta logo and favicon with no background image. Uses
          the Okta colors on the Okta sign-in page.
      x-okta-known-values:
      - BACKGROUND_IMAGE
      - BACKGROUND_SECONDARY_COLOR
      - OKTA_DEFAULT
    SignOnInlineHook:
      properties:
        id:
          readOnly: false
          type: string
    SigningAlgorithm:
      type: string
      x-okta-known-values:
      - ES256
      - ES384
      - ES512
      - HS256
      - HS384
      - HS512
      - RS256
      - RS384
      - RS512
    SimulatePolicyBody:
      description: The request body required for a simulate policy operation.
      example:
        policyContext:
          ip: ip
          groups:
            ids:
            - ids
            - ids
          risk:
            level: LOW
          zones:
            ids:
            - ids
            - ids
          device:
            managed: true
            registered: true
            platform: platform
            assuranceId: assuranceId
          user:
            id: id
        policyTypes:
        - null
        - null
        appInstance: appInstance
      properties:
        appInstance:
          description: The application instance ID for a simulate operation
          type: string
        policyContext:
          $ref: '#/components/schemas/PolicyContext'
        policyTypes:
          description: "Supported policy types for a simulate operation. The default\
            \ value, `null`, returns all types."
          items:
            $ref: '#/components/schemas/PolicyTypeSimulation'
          type: array
      required:
      - appInstance
      type: object
    SimulatePolicyEvaluations:
      example:
        result:
          policies:
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
        policyType:
        - null
        - null
        evaluated:
          policies:
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
        status: status
        undefined:
          policies:
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            rules:
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            - name: name
              id: id
              conditions:
              - type: type
                status: status
              - type: type
                status: status
              status: status
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
      properties:
        evaluated:
          $ref: '#/components/schemas/SimulatePolicyEvaluations_evaluated'
        policyType:
          description: The policy type of the simulate operation
          items:
            $ref: '#/components/schemas/PolicyTypeSimulation'
          type: array
        result:
          $ref: '#/components/schemas/SimulatePolicyResult'
        status:
          description: The result of this entity evaluation
          type: string
          x-okta-known-values:
          - MATCH
          - NOT_MATCH
          - UNDEFINED
        undefined:
          $ref: '#/components/schemas/SimulatePolicyEvaluations_undefined'
      type: object
    SimulatePolicyResponse:
      description: The response body returned for a simulate policy operation. An
        array of `evaluations`.
      items:
        $ref: '#/components/schemas/SimulatePolicyEvaluations'
      type: array
    SimulatePolicyResult:
      description: The result of the policy evaluation
      example:
        policies:
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
      properties:
        policies:
          items:
            $ref: '#/components/schemas/SimulateResultPoliciesItems'
          type: array
      type: object
    SimulateResultConditions:
      example:
        type: type
        status: status
      properties:
        status:
          description: The result of this entity evaluation
          type: string
          x-okta-known-values:
          - MATCH
          - NOT_MATCH
          - UNDEFINED
        type:
          description: The type of condition
          type: string
      type: object
    SimulateResultPolicies:
      items:
        $ref: '#/components/schemas/SimulateResultPoliciesItems'
      type: array
    SimulateResultPoliciesItems:
      example:
        name: name
        rules:
        - name: name
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
        - name: name
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
        id: id
        conditions:
        - type: type
          status: status
        - type: type
          status: status
        status: status
      properties:
        conditions:
          description: List of all conditions involved for this policy evaluation
          items:
            $ref: '#/components/schemas/SimulateResultConditions'
          type: array
        id:
          description: ID of the specified policy type
          type: string
        name:
          description: Policy name
          type: string
        rules:
          items:
            $ref: '#/components/schemas/SimulateResultRules'
          type: array
        status:
          description: The result of this entity evaluation
          type: string
          x-okta-known-values:
          - MATCH
          - NOT_MATCH
          - UNDEFINED
      type: object
    SimulateResultRules:
      example:
        name: name
        id: id
        conditions:
        - type: type
          status: status
        - type: type
          status: status
        status: status
      properties:
        conditions:
          description: List of all conditions involved for this rule evaluation
          items:
            $ref: '#/components/schemas/SimulateResultConditions'
          type: array
        id:
          description: The unique ID number of the policy rule
          type: string
        name:
          description: The name of the policy rule
          type: string
        status:
          description: The result of this entity evaluation
          type: string
          x-okta-known-values:
          - MATCH
          - NOT_MATCH
          - UNDEFINED
      type: object
    SimulateResultStatus:
      description: The result of this entity evaluation
      type: string
      x-okta-known-values:
      - MATCH
      - NOT_MATCH
      - UNDEFINED
    SingleLogout:
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
      type: object
    SlackApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - slack
            example: slack
            type: string
          signOnMode:
            enum:
            - BROWSER_PLUGIN
            - SAML_2_0
            type: string
          settings:
            $ref: '#/components/schemas/SlackApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Slack app (key name: `slack`)

        To create a Slack app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Slack app only supports `BROWSER_PLUGIN` and `SAML_2_0` sign-on modes.
      example:
        name: slack
        label: Sample Slack App
        signOnMode: SAML_2_0
        settings:
          app:
            domain: my-company-domain
      title: Slack
      x-tags:
      - Application
      x-okta-defined-as:
        name: slack
    SlackApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/SlackApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    SlackApplicationSettingsApplication:
      description: Slack app instance properties
      properties:
        domain:
          description: The Slack app domain name
          type: string
        userEmailValue:
          description: The `User.Email` attribute value
          type: string
      required:
      - domain
      type: object
    SloParticipate:
      properties:
        bindingType:
          description: Request binding type
          enum:
          - POST
          - REDIRECT
          type: string
        enabled:
          description: Allows the app to participate in front-channel single logout.
          type: boolean
        logoutRequestUrl:
          description: URL where Okta sends the logout request.
          type: string
        sessionIndexRequired:
          description: Include user session details.
          type: boolean
      type: object
    SmsTemplate:
      example:
        template: template
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        translations: "{}"
        name: name
        id: id
        type: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          description: Human-readable name of the Template
          maxLength: 50
          minLength: 1
          type: string
        template:
          description: "Text of the Template, including any [macros](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Template/)"
          maxLength: 161
          minLength: 1
          type: string
        translations:
          description: |
            - Template translations are optionally provided when you want to localize the SMS messages. Translations are provided as an object that contains `key:value` pairs: the language and the translated Template text. The key portion is a two-letter country code that conforms to [ISO 639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php). The value is the translated SMS Template.
            - Just like with regular SMS Templates, the length of the SMS message can't exceed 160 characters.
          type: object
          x-okta-extensible: true
        type:
          description: Type of the Template
          maxLength: 50
          minLength: 1
          type: string
          x-okta-known-values:
          - SMS_VERIFY_CODE
      type: object
    SmsTemplateTranslations:
      description: |
        - Template translations are optionally provided when you want to localize the SMS messages. Translations are provided as an object that contains `key:value` pairs: the language and the translated Template text. The key portion is a two-letter country code that conforms to [ISO 639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php). The value is the translated SMS Template.
        - Just like with regular SMS Templates, the length of the SMS message can't exceed 160 characters.
      type: object
      x-okta-extensible: true
    SmsTemplateType:
      description: Type of the Template
      maxLength: 50
      minLength: 1
      type: string
      x-okta-known-values:
      - SMS_VERIFY_CODE
    SocialAuthToken:
      example:
        id: id
        scopes:
        - scopes
        - scopes
        tokenType: tokenType
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tokenAuthScheme: tokenAuthScheme
        token: token
      properties:
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
      type: object
    SourceLinks:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          schema:
            $ref: '#/components/schemas/SourceLinks_allOf_schema'
        type: object
    SpCertificate:
      properties:
        x5c:
          items:
            type: string
          type: array
      type: object
    SplunkEdition:
      description: Edition of the Splunk Cloud instance
      example: aws
      type: string
      x-okta-known-values:
      - aws
      - aws_govcloud
      - gcp
    SplunkHost:
      description: "The domain name for your Splunk Cloud instance. Don't include\
        \ `http` or `https` in the string. For example: `acme.splunkcloud.com`"
      example: acme.splunkcloud.com
      maxLength: 116
      minLength: 17
      type: string
    SplunkToken:
      description: "The HEC token for your Splunk Cloud HTTP Event Collector. The\
        \ token value is set at object creation, but isn't returned."
      example: 11111111-1111-2222-2222-222222222222
      pattern: "(?i)^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
      type: string
      writeOnly: true
    Sso:
      description: "Supported SSO protocol configurations. You must configure at least\
        \ one protocol: `oidc` or `saml`"
      properties:
        oidc:
          $ref: '#/components/schemas/Oidc'
        saml:
          $ref: '#/components/schemas/Saml'
      type: object
    SsprPrimaryRequirement:
      description: Defines the authenticators permitted for the initial authentication
        step of password recovery
      properties:
        methodConstraints:
          description: "Constraints on the values specified in the `methods` array.\
            \ Specifying a constraint limits methods to specific authenticator(s).\
            \ Currently, Google OTP is the only accepted constraint."
          items:
            $ref: '#/components/schemas/AuthenticatorMethodConstraint'
          type: array
          x-okta-lifecycle:
            lifecycle: GA
            isGenerallyAvailable: true
        methods:
          description: Authenticator methods allowed for the initial authentication
            step of password recovery. Method `otp` requires a constraint limiting
            it to a Google authenticator.
          items:
            enum:
            - push
            - sms
            - voice
            - email
            - otp
            type: string
          type: array
      type: object
    SsprRequirement:
      description: Describes the initial and secondary authenticator requirements
        a user needs to reset their password
      properties:
        primary:
          $ref: '#/components/schemas/SsprPrimaryRequirement'
        stepUp:
          $ref: '#/components/schemas/SsprStepUpRequirement'
      type: object
    SsprStepUpRequirement:
      description: |-
        Defines the secondary authenticators needed for password reset if `required` is true. The following are three valid configurations:
        * `required`=false
        * `required`=true with no methods to use any SSO authenticator
        * `required`=true with `security_question` as the method
      properties:
        methods:
          description: Authenticator methods required for secondary authentication
            step of password recovery. Specify this value only when `required` is
            true and `security_question` is permitted for the secondary authentication.
          items:
            enum:
            - security_question
            type: string
          type: array
        required:
          type: boolean
      type: object
    StandardRoleAssignmentSchema:
      properties:
        type:
          description: Standard role type
          type: string
      type: object
    StreamConfiguration:
      example:
        aud: https://example.com
        delivery:
          endpoint_url: https://example.com/
          method: https://schemas.openid.net/secevent/risc/delivery-method/push
          authorization_header: Basic dXNlcjpwYXNzd29yZA==
        events_supported:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        stream_id: esc1k235GIIztAuGK0g5
        format: iss_sub
        iss: "https://{yourOktaDomain}"
        events_delivered:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_requested:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
        min_verification_interval: 60
      properties:
        aud:
          $ref: '#/components/schemas/StreamConfiguration_aud'
        delivery:
          $ref: '#/components/schemas/StreamConfigurationDelivery'
        events_delivered:
          description: |-
            The events (mapped by the array of event type URIs) that the transmitter actually delivers to the SSF Stream.

            A read-only parameter that is set by the transmitter. If this parameter is included in the request, the value must match the expected value from the transmitter.
          example:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - https://schemas.openid.net/secevent/caep/event-type/credential-change
          items:
            format: uri
            type: string
          type: array
        events_requested:
          description: The events (mapped by the array of event type URIs) that the
            receiver wants to receive
          example:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - https://schemas.openid.net/secevent/caep/event-type/credential-change
          items:
            format: uri
            maxLength: 256
            type: string
          maxItems: 50
          type: array
        events_supported:
          description: |-
            An array of event type URIs that the transmitter supports.

            A read-only parameter that is set by the transmitter. If this parameter is included in the request, the value must match the expected value from the transmitter.
          example:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - https://schemas.openid.net/secevent/caep/event-type/credential-change
          items:
            format: uri
            type: string
          type: array
        format:
          description: The Subject Identifier format expected for any SET transmitted.
          enum:
          - iss_sub
          type: string
        iss:
          description: |-
            The issuer used in Security Event Tokens (SETs). This value is set as `iss` in the claim.

            A read-only parameter that is set by the transmitter. If this parameter is included in the request, the value must match the expected value from the transmitter.
          example: "https://{yourOktaDomain}"
          type: string
        min_verification_interval:
          description: |-
            The minimum amount of time, in seconds, between two verification requests.

            A read-only parameter that is set by the transmitter. If this parameter is included in the request, the value must match the expected value from the transmitter.
          example: 60
          nullable: true
          type: integer
        stream_id:
          description: The ID of the SSF Stream configuration
          example: esc1k235GIIztAuGK0g5
          type: string
      required:
      - delivery
      - events_requested
      title: Stream Configuration
      type: object
    StreamConfigurationCreateRequest:
      example:
        delivery:
          endpoint_url: https://example.com/
          method: https://schemas.openid.net/secevent/risc/delivery-method/push
          authorization_header: Basic dXNlcjpwYXNzd29yZA==
        format: iss_sub
        events_requested:
        - https://schemas.openid.net/secevent/caep/event-type/session-revoked
        - https://schemas.openid.net/secevent/caep/event-type/credential-change
      properties:
        delivery:
          $ref: '#/components/schemas/StreamConfigurationDelivery'
        events_requested:
          description: The events (mapped by the array of event type URIs) that the
            receiver wants to receive
          example:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - https://schemas.openid.net/secevent/caep/event-type/credential-change
          items:
            format: uri
            maxLength: 256
            type: string
          maxItems: 50
          type: array
        format:
          description: The Subject Identifier format expected for any SET transmitted.
          enum:
          - iss_sub
          type: string
      required:
      - delivery
      - events_requested
      title: Stream Configuration Create Request
      type: object
    StreamConfigurationDelivery:
      description: Contains information about the intended SET delivery method by
        the receiver
      example:
        endpoint_url: https://example.com/
        method: https://schemas.openid.net/secevent/risc/delivery-method/push
        authorization_header: Basic dXNlcjpwYXNzd29yZA==
      properties:
        authorization_header:
          description: The HTTP Authorization header that is included for each HTTP
            POST request
          example: Basic dXNlcjpwYXNzd29yZA==
          maxLength: 8192
          nullable: true
          type: string
        endpoint_url:
          description: The target endpoint URL where the transmitter delivers the
            SET using HTTP POST requests
          example: https://example.com/
          format: uri
          maxLength: 2048
          type: string
        method:
          description: The delivery method that the transmitter uses for delivering
            a SET
          enum:
          - https://schemas.openid.net/secevent/risc/delivery-method/push
          - urn:ietf:rfc:8935
          type: string
      required:
      - endpoint_url
      - method
      title: Stream Configuration Delivery
      type: object
    SubjectType:
      type: string
      x-okta-known-values:
      - pairwise
      - public
    SubmissionRequest:
      allOf:
      - $ref: '#/components/schemas/SubmissionResponse'
      required:
      - description
      - logo
      - name
    SubmissionResponse:
      properties:
        config:
          description: "List of org-level variables for the customer per-tenant configuration.\
            \ For example, a `subdomain` variable can be used in the ACS URL: `https://${org.subdomain}.example.com/saml/login`"
          items:
            $ref: '#/components/schemas/SubmissionResponse_config_inner'
          type: array
        description:
          description: A general description of your application and the benefits
            provided to your customers
          example: Your one source for in-season strawberry deals. Okta's Strawberry
            Central integration allow users to securely access those sweet deals.
          maxLength: 1024
          minLength: 1
          type: string
        id:
          description: OIN Integration ID
          example: acme_submissionapp_1
          readOnly: true
          type: string
        lastPublished:
          description: Timestamp when the OIN Integration was last published
          example: 2023-08-24T14:15:22.000Z
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the OIN Integration instance was last updated
          example: 2023-08-24T14:15:22.000Z
          readOnly: true
          type: string
        lastUpdatedBy:
          description: ID of the user who made the last update
          example: 00ub0oNGTSWTBKOLGLNR
          readOnly: true
          type: string
        logo:
          description: "URL to an uploaded application logo. This logo appears next\
            \ to your app integration name in the OIN catalog. You must first [Upload\
            \ an OIN Integration logo](/openapi/okta-management/management/tag/YourOinIntegrations/#tag/YourOinIntegrations/operation/uploadSubmissionLogo)\
            \ to obtain the logo URL before you can specify this value."
          example: https://acme.okta.com/bc/image/fileStoreRecord?id=fs03xxd3KmkDBwJU80g4
          format: uri
          type: string
        name:
          description: The app integration name. This is the main title used for your
            integration in the OIN catalog.
          example: Strawberry Central
          maxLength: 64
          minLength: 1
          type: string
        sso:
          $ref: '#/components/schemas/Sso'
        status:
          description: Status of the OIN Integration submission
          example: New
          readOnly: true
          type: string
      type: object
    Subscription:
      example:
        channels:
        - channels
        - channels
        _links:
          self:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
        notificationType: notificationType
        status: status
      properties:
        channels:
          description: |-
            An array of sources send notifications to users.
            > **Note**: Currently, Okta only allows `email` channels.
          items:
            type: string
          type: array
        notificationType:
          description: The type of notification
          type: string
          x-enumDescriptions:
            AD_AGENT: System notification sent when an AD agent disconnects or reconnects
            AGENT_AUTO_UPDATE_NOTIFICATION: System notification sent when an agent
              automatically updates
            APP_IMPORT: System notification sent with the status of an app user import
            CONNECTOR_AGENT: System notification sent when an on-premises provisioning
              or Okta on-prem MFA agent disconnects or reconnects
            IWA_AGENT: System notification sent when an IGA agent disconnects or reconnects
            LDAP_AGENT: System notification sent when an LDAP agent disconnects or
              reconnects
            OKTA_ANNOUNCEMENT: Okta communication sent for announcements and release
              notes
            OKTA_ISSUE: Okta communication sent for trust incident alerts and updates
            OKTA_UPDATE: Okta communication sent for scheduled system updates
            RATELIMIT_NOTIFICATION: System notification sent when an org reaches rate
              limit warning or violation thresholds
            REPORT_SUSPICIOUS_ACTIVITY: System notification sent when a user reports
              suspicious activity
            USER_DEPROVISION: System notification sent when a user is deprovisioned
              from apps
            USER_LOCKED_OUT: System notification sent when a user is locked out from
              logging in to Okta
          x-okta-known-values:
          - AD_AGENT
          - AGENT_AUTO_UPDATE_NOTIFICATION
          - AGENT_AUTO_UPDATE_NOTIFICATION_LDAP
          - APP_IMPORT
          - CONNECTOR_AGENT
          - IWA_AGENT
          - LDAP_AGENT
          - OKTA_ANNOUNCEMENT
          - OKTA_ISSUE
          - OKTA_UPDATE
          - RATELIMIT_NOTIFICATION
          - REPORT_SUSPICIOUS_ACTIVITY
          - USER_DEPROVISION
          - USER_LOCKED_OUT
        status:
          description: The status of the subscription
          type: string
          x-okta-known-values:
          - subscribed
          - unsubscribed
        _links:
          $ref: '#/components/schemas/Subscription__links'
      type: object
    SubscriptionStatus:
      description: The status of the subscription
      type: string
      x-okta-known-values:
      - subscribed
      - unsubscribed
    SupportedMethods:
      description: The supported methods of an Authenticator
      example:
        settings:
          algorithms:
          - null
          - null
          transactionTypes:
          - null
          - null
          keyProtection: keyProtection
        type: push
        status: status
      properties:
        settings:
          $ref: '#/components/schemas/SupportedMethods_settings'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          description: The type of authenticator method
          enum:
          - push
          type: string
      type: object
    SwaApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/SwaApplicationSettingsApplication'
        type: object
    SwaApplicationSettingsApplication:
      properties:
        buttonField:
          type: string
        buttonSelector:
          type: string
        checkbox:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        passwordSelector:
          type: string
        redirectUrl:
          type: string
        targetURL:
          type: string
        url:
          type: string
        usernameField:
          type: string
        userNameSelector:
          type: string
      type: object
    TelephonyRequest:
      properties:
        data:
          $ref: '#/components/schemas/TelephonyRequestData'
        eventType:
          description: The type of inline hook. The Telephony inline hook type is
            `com.okta.telephony.provider`.
          type: string
        requestType:
          description: "The type of inline hook request. For example, `com.okta.user.telephony.pre-enrollment`."
          type: string
        source:
          description: The ID and URL of the Telephony inline hook
          type: string
      type: object
    TelephonyRequestData:
      properties:
        context:
          $ref: '#/components/schemas/TelephonyRequestData_context'
        messageProfile:
          $ref: '#/components/schemas/TelephonyRequestData_messageProfile'
        userProfile:
          $ref: '#/components/schemas/TelephonyRequestData_userProfile'
      type: object
    TelephonyResponse:
      properties:
        commands:
          description: "The `commands` object specifies whether Okta accepts the end\
            \ user's sign-in credentials as valid or not. For the Telephony inline\
            \ hook, you typically only return one `commands` object with one array\
            \ element in it."
          items:
            $ref: '#/components/schemas/TelephonyResponse_commands_inner'
          type: array
      type: object
    TempPassword:
      example:
        tempPassword: tempPassword
      properties:
        tempPassword:
          readOnly: true
          type: string
      type: object
    TestInfo:
      description: Integration Testing Information
      properties:
        escalationSupportContact:
          description: An email for Okta to contact your company about your integration.
            This email isn't shared with customers.
          example: strawberry.support@example.com
          maxLength: 255
          type: string
        oidcTestConfiguration:
          $ref: '#/components/schemas/TestInfo_oidcTestConfiguration'
        samlTestConfiguration:
          $ref: '#/components/schemas/TestInfo_samlTestConfiguration'
        testAccount:
          $ref: '#/components/schemas/TestInfo_testAccount'
      required:
      - escalationSupportContact
      type: object
    ThemeResponse:
      example:
        primaryColorContrastHex: primaryColorContrastHex
        favicon: favicon
        _links:
          self: null
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        signInPageTouchPointVariant: signInPageTouchPointVariant
        loadingPageTouchPointVariant: OKTA_DEFAULT
        logo: logo
        id: id
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for email templates. You can publish a theme for email templates with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            FULL_THEME: Uses the Okta logo and Okta colors in email templates
            OKTA_DEFAULT: Uses the logo from the Theme. Uses `primaryColorHex` as
              the background color for buttons.
          x-okta-known-values:
          - FULL_THEME
          - OKTA_DEFAULT
        endUserDashboardTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the Okta End-User Dashboard. You can publish a theme for end-user dashboard with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            FULL_THEME: Uses the logo and favicon from the Theme. Uses `primaryColorHex`
              for the logo and the side navigation bar background color.
            LOGO_ON_FULL_WHITE_BACKGROUND: Uses the logo and favicon from the Theme.
              Uses white background color for the logo and the side navigation bar
              background color.
            OKTA_DEFAULT: Uses the Okta logo and favicon. Uses a white background
              color for the logo and the side navigation bar background color.
            WHITE_LOGO_BACKGROUND: "Uses the logo and favicon from the Theme, with\
              \ a white background color for the logo. Uses `primaryColorHex` for\
              \ the side navigation bar background color."
          x-okta-known-values:
          - FULL_THEME
          - LOGO_ON_FULL_WHITE_BACKGROUND
          - OKTA_DEFAULT
          - WHITE_LOGO_BACKGROUND
        errorPageTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the error page. You can publish a theme for error page with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the\
              \ Theme"
            BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme.
              Uses `secondaryColorHex` as the background color for the error page.
            OKTA_DEFAULT: "Uses the Okta logo, favicon, and background color"
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        loadingPageTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the Okta loading page. You can publish a theme for Okta loading page with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            NONE: Uses no loading page animation during the redirect
            OKTA_DEFAULT: Uses the default Okta loading page animation during the
              redirect
          x-okta-known-values:
          - NONE
          - OKTA_DEFAULT
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          description: Primary color contrast hex code
          type: string
        primaryColorHex:
          description: Primary color hex code
          type: string
        secondaryColorContrastHex:
          description: Secondary color contrast hex code
          type: string
        secondaryColorHex:
          description: Secondary color hex code
          type: string
        signInPageTouchPointVariant:
          description: |
            Variant for the Okta sign-in page. You can publish a theme for sign-in page with different combinations of assets. Variants are preset combinations of those assets.
            > **Note:**  For a non-`OKTA_DEFAULT` variant, `primaryColorHex` is used for button background color and `primaryColorContrastHex` is used to optimize the opacity for button text.
          type: string
          x-enumDescriptions:
            BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the\
              \ Theme"
            BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme.
              Uses `secondaryColorHex` as the background color for the Okta sign-in
              page.
            OKTA_DEFAULT: Uses the Okta logo and favicon with no background image.
              Uses the Okta colors on the Okta sign-in page.
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    ThirdPartyAdminSetting:
      description: The third-party admin setting
      example:
        thirdPartyAdmin: true
      properties:
        thirdPartyAdmin:
          type: boolean
      type: object
    ThreatInsightConfiguration:
      example:
        lastUpdated: 2020-09-08T20:53:20.882Z
        _links:
          self: null
        created: 2020-08-05T22:18:30.629Z
        excludeZones: []
        action: none
      properties:
        action:
          description: Specifies how Okta responds to authentication requests from
            suspicious IP addresses
          enum:
          - none
          - audit
          - block
          example: none
          type: string
          x-enumDescriptions:
            none: Indicates that ThreatInsight is disabled
            audit: Indicates that Okta logs suspicious requests to the System Log
            block: Indicates that Okta logs suspicious requests to the System Log
              and blocks the requests
        created:
          description: Timestamp when the ThreatInsight Configuration object was created
          example: 2020-08-05T22:18:30.629Z
          format: date-time
          readOnly: true
          type: string
        excludeZones:
          description: |-
            Accepts a list of [Network Zone](/openapi/okta-management/management/tag/NetworkZone/) IDs.
            IPs in the excluded network zones aren't logged or blocked.
            This ensures that traffic from known, trusted IPs isn't accidentally logged or blocked.
          example: []
          items:
            type: string
          type: array
        lastUpdated:
          description: Timestamp when the ThreatInsight Configuration object was last
            updated
          example: 2020-09-08T20:53:20.882Z
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - action
      type: object
    TimeDuration:
      description: "A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)."
      pattern: ^P(?:$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?:\d)(\d+H)?(\d+M)?(\d+S)?)?$
      type: string
    TokenAuthorizationServerPolicyRuleAction:
      properties:
        accessTokenLifetimeMinutes:
          description: Lifetime of the access token in minutes. The minimum is five
            minutes. The maximum is one day.
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
        refreshTokenLifetimeMinutes:
          description: Lifetime of the refresh token is the minimum access token lifetime.
          type: integer
        refreshTokenWindowMinutes:
          description: "Timeframe when the refresh token is valid. The minimum is\
            \ 10 minutes. The maximum is five years (2,628,000 minutes)."
          type: integer
      type: object
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      properties:
        id:
          readOnly: false
          type: string
      type: object
    TokenDeliveryMode:
      type: string
      x-okta-known-values:
      - poll
    TokenResponse:
      properties:
        access_token:
          description: An access token.
          type: string
        device_secret:
          description: An opaque device secret. This is returned if the `device_sso`
            scope is granted.
          type: string
        expires_in:
          description: The expiration time of the access token in seconds.
          type: integer
        id_token:
          description: An ID token. This is returned if the `openid` scope is granted.
          type: string
        issued_token_type:
          description: The type of token for token exchange.
          type: string
          x-okta-known-values:
          - urn:ietf:params:oauth:token-type:access_token
          - urn:ietf:params:oauth:token-type:id_token
          - urn:ietf:params:oauth:token-type:jwt
          - urn:ietf:params:oauth:token-type:refresh_token
          - urn:ietf:params:oauth:token-type:saml1
          - urn:ietf:params:oauth:token-type:saml2
          - urn:okta:oauth:token-type:web_sso_token
          - urn:x-oath:params:oauth:token-type:device-secret
        refresh_token:
          description: An opaque refresh token. This is returned if the `offline_access`
            scope is granted.
          type: string
        scope:
          description: The scopes contained in the access token.
          type: string
        token_type:
          description: The token type in a `/token` response. The value is generally
            `Bearer` except for a few instances of token exchange.
          type: string
          x-okta-known-values:
          - Bearer
          - N_A
      type: object
    TokenResponseTokenType:
      description: The token type in a `/token` response. The value is generally `Bearer`
        except for a few instances of token exchange.
      type: string
      x-okta-known-values:
      - Bearer
      - N_A
    TokenType:
      description: The type of token for token exchange.
      type: string
      x-okta-known-values:
      - urn:ietf:params:oauth:token-type:access_token
      - urn:ietf:params:oauth:token-type:id_token
      - urn:ietf:params:oauth:token-type:jwt
      - urn:ietf:params:oauth:token-type:refresh_token
      - urn:ietf:params:oauth:token-type:saml1
      - urn:ietf:params:oauth:token-type:saml2
      - urn:okta:oauth:token-type:web_sso_token
      - urn:x-oath:params:oauth:token-type:device-secret
    TrendMicroApexOneServiceApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - trendmicroapexoneservice
            example: trendmicroapexoneservice
            type: string
          signOnMode:
            enum:
            - SAML_2_0
            type: string
          settings:
            $ref: '#/components/schemas/TrendMicroApexOneServiceApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for Trend Micro Apex One as a Service app (key name: `trendmicroapexoneservice`)

        To create a Trend Micro Apex One as a Service app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Trend Micro Apex One as a Service app only supports `SAML_2_0` sign-on mode.
      example:
        name: trendmicroapexoneservice
        label: Sample Trend Micro Apex One as a Service App
        signOnMode: SAML_2_0
        settings:
          app:
            baseURL: https://acme.trendmicro.com
      title: Trend Micro Apex One Service
      x-tags:
      - Application
      x-okta-defined-as:
        name: trendmicroapexoneservice
    TrendMicroApexOneServiceApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/TrendMicroApexOneServiceApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    TrendMicroApexOneServiceApplicationSettingsApplication:
      description: Trend Micro Apex One as a Service app instance properties
      properties:
        baseURL:
          description: Base Trend Micro Apex One Service URL
          type: string
      required:
      - baseURL
      type: object
    TrustedOrigin:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        createdBy: createdBy
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        origin: origin
        name: name
        id: id
        scopes:
        - allowedOktaApps:
          - null
          - null
          type: type
        - allowedOktaApps:
          - null
          - null
          type: type
        status: status
      properties:
        created:
          description: Timestamp when the Trusted Origin was created
          format: date-time
          readOnly: true
          type: string
        createdBy:
          description: The ID of the user who created the Trusted Origin
          type: string
        id:
          description: Unique identifier for the Trusted Origin
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the Trusted Origin was last updated
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          description: The ID of the user who last updated the Trusted Origin
          type: string
        name:
          description: Unique name for the Trusted Origin
          maximum: 255
          type: string
        origin:
          description: "Unique origin URL for the Trusted Origin. The supported schemes\
            \ for this attribute are HTTP, HTTPS, FTP, Ionic 2, and Capacitor."
          maximum: 255
          type: string
        scopes:
          description: Array of Scope types that this Trusted Origin is used for
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
          maximum: 3
          type: array
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        _links:
          $ref: '#/components/schemas/LinksSelfAndLifecycle'
      type: object
    TrustedOriginName:
      description: Unique name for the Trusted Origin
      maximum: 255
      type: string
    TrustedOriginOrigin:
      description: "Unique origin URL for the Trusted Origin. The supported schemes\
        \ for this attribute are HTTP, HTTPS, FTP, Ionic 2, and Capacitor."
      maximum: 255
      type: string
    TrustedOriginScope:
      example:
        allowedOktaApps:
        - null
        - null
        type: type
      properties:
        allowedOktaApps:
          description: The allowed Okta apps for the Trusted Origin scope
          items:
            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
          type: array
        type:
          description: "The scope type. Supported values: When you use `IFRAME_EMBED`\
            \ as the scope type, leave the allowedOktaApps property \nempty to allow\
            \ iFrame embedding of only Okta sign-in pages. Include `OKTA_ENDUSER`\
            \ as a value for the allowedOktaApps \nproperty to allow iFrame embedding\
            \ of both Okta sign-in pages and the Okta End-User Dashboard.\n"
          type: string
          x-okta-known-values:
          - CORS
          - IFRAME_EMBED
          - REDIRECT
      type: object
    TrustedOriginScopeType:
      description: "The scope type. Supported values: When you use `IFRAME_EMBED`\
        \ as the scope type, leave the allowedOktaApps property \nempty to allow iFrame\
        \ embedding of only Okta sign-in pages. Include `OKTA_ENDUSER` as a value\
        \ for the allowedOktaApps \nproperty to allow iFrame embedding of both Okta\
        \ sign-in pages and the Okta End-User Dashboard.\n"
      type: string
      x-okta-known-values:
      - CORS
      - IFRAME_EMBED
      - REDIRECT
    TrustedOriginScopes:
      description: Array of Scope types that this Trusted Origin is used for
      items:
        $ref: '#/components/schemas/TrustedOriginScope'
      maximum: 3
      type: array
    TrustedOriginWrite:
      example:
        origin: origin
        name: name
        scopes:
        - allowedOktaApps:
          - null
          - null
          type: type
        - allowedOktaApps:
          - null
          - null
          type: type
      properties:
        name:
          description: Unique name for the Trusted Origin
          maximum: 255
          type: string
        origin:
          description: "Unique origin URL for the Trusted Origin. The supported schemes\
            \ for this attribute are HTTP, HTTPS, FTP, Ionic 2, and Capacitor."
          maximum: 255
          type: string
        scopes:
          description: Array of Scope types that this Trusted Origin is used for
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
          maximum: 3
          type: array
      type: object
    UIElement:
      description: Specifies the configuration of an input field on an enrollment
        form
      example:
        scope: scope
        options:
          format: text
        label: label
        type: type
      properties:
        label:
          description: Label name for the UI element
          type: string
        options:
          $ref: '#/components/schemas/UIElement_options'
        scope:
          description: Specifies the property bound to the input field. It must follow
            the format `#/properties/PROPERTY_NAME` where `PROPERTY_NAME` is a variable
            name for an attribute in `profile editor`.
          type: string
        type:
          description: Specifies the relationship between this input element and `scope`.
            The `Control` value specifies that this input controls the value represented
            by `scope`.
          type: string
      type: object
    UISchemaObject:
      description: Properties of the UI schema
      example:
        elements:
          scope: scope
          options:
            format: text
          label: label
          type: type
        label: Sign in
        type: type
        buttonLabel: Submit
      properties:
        buttonLabel:
          default: Submit
          description: Specifies the button label for the `Submit` button at the bottom
            of the enrollment form.
          type: string
        elements:
          $ref: '#/components/schemas/UIElement'
        label:
          default: Sign in
          description: Specifies the label at the top of the enrollment form under
            the logo.
          type: string
        type:
          description: Specifies the type of layout
          type: string
      type: object
    UISchemasResponseObject:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          self: null
        created: 2000-01-23T04:56:07.000+00:00
        uiSchema:
          elements:
            scope: scope
            options:
              format: text
            label: label
            type: type
          label: Sign in
          type: type
          buttonLabel: Submit
        id: id
      properties:
        created:
          description: Timestamp when the UI Schema was created (ISO-86001)
          format: date-time
          readOnly: true
          type: string
        id:
          description: Unique identifier for the UI Schema
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the UI Schema was last modified (ISO-86001)
          format: date-time
          readOnly: true
          type: string
        uiSchema:
          $ref: '#/components/schemas/UISchemaObject'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - _links
      - created
      - id
      - lastUpdated
      - uiSchema
      type: object
    UpdateDomain:
      example:
        brandId: bndul904tTZ6kWVhP0g3
      properties:
        brandId:
          description: The `id` of the brand used to replace the existing brand.
          example: bndul904tTZ6kWVhP0g3
          type: string
      required:
      - brandId
      type: object
    UpdateEmailDomain:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
    UpdateIamRoleRequest:
      example:
        description: description
        label: label
      properties:
        description:
          description: Description of the role
          type: string
        label:
          description: Unique label for the role
          type: string
      required:
      - description
      - label
      type: object
    UpdateRealmAssignmentRequest:
      example:
        name: name
        conditions:
          expression:
            value: value
          profileSourceId: profileSourceId
        priority: 0
        actions:
          assignUserToRealm:
            realmId: realmId
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        name:
          type: string
        priority:
          type: integer
      type: object
    UpdateRealmRequest:
      example:
        profile:
          realmType: PARTNER
          name: name
      properties:
        profile:
          $ref: '#/components/schemas/RealmProfile'
      type: object
    UpdateThemeRequest:
      example:
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        signInPageTouchPointVariant: signInPageTouchPointVariant
        primaryColorContrastHex: primaryColorContrastHex
        loadingPageTouchPointVariant: OKTA_DEFAULT
        _links:
          self: null
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
      properties:
        emailTemplateTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for email templates. You can publish a theme for email templates with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            FULL_THEME: Uses the Okta logo and Okta colors in email templates
            OKTA_DEFAULT: Uses the logo from the Theme. Uses `primaryColorHex` as
              the background color for buttons.
          x-okta-known-values:
          - FULL_THEME
          - OKTA_DEFAULT
        endUserDashboardTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the Okta End-User Dashboard. You can publish a theme for end-user dashboard with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            FULL_THEME: Uses the logo and favicon from the Theme. Uses `primaryColorHex`
              for the logo and the side navigation bar background color.
            LOGO_ON_FULL_WHITE_BACKGROUND: Uses the logo and favicon from the Theme.
              Uses white background color for the logo and the side navigation bar
              background color.
            OKTA_DEFAULT: Uses the Okta logo and favicon. Uses a white background
              color for the logo and the side navigation bar background color.
            WHITE_LOGO_BACKGROUND: "Uses the logo and favicon from the Theme, with\
              \ a white background color for the logo. Uses `primaryColorHex` for\
              \ the side navigation bar background color."
          x-okta-known-values:
          - FULL_THEME
          - LOGO_ON_FULL_WHITE_BACKGROUND
          - OKTA_DEFAULT
          - WHITE_LOGO_BACKGROUND
        errorPageTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the error page. You can publish a theme for error page with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the\
              \ Theme"
            BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme.
              Uses `secondaryColorHex` as the background color for the error page.
            OKTA_DEFAULT: "Uses the Okta logo, favicon, and background color"
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        loadingPageTouchPointVariant:
          default: OKTA_DEFAULT
          description: |
            Variant for the Okta loading page. You can publish a theme for Okta loading page with different combinations of assets. Variants are preset combinations of those assets.
          type: string
          x-enumDescriptions:
            NONE: Uses no loading page animation during the redirect
            OKTA_DEFAULT: Uses the default Okta loading page animation during the
              redirect
          x-okta-known-values:
          - NONE
          - OKTA_DEFAULT
        primaryColorContrastHex:
          description: Primary color contrast hex code
          type: string
        primaryColorHex:
          description: Primary color hex code
          type: string
        secondaryColorContrastHex:
          description: Secondary color contrast hex code
          type: string
        secondaryColorHex:
          description: Secondary color hex code
          type: string
        signInPageTouchPointVariant:
          description: |
            Variant for the Okta sign-in page. You can publish a theme for sign-in page with different combinations of assets. Variants are preset combinations of those assets.
            > **Note:**  For a non-`OKTA_DEFAULT` variant, `primaryColorHex` is used for button background color and `primaryColorContrastHex` is used to optimize the opacity for button text.
          type: string
          x-enumDescriptions:
            BACKGROUND_IMAGE: "Uses the logo, favicon, and background image from the\
              \ Theme"
            BACKGROUND_SECONDARY_COLOR: Uses the logo and favicon from the Theme.
              Uses `secondaryColorHex` as the background color for the Okta sign-in
              page.
            OKTA_DEFAULT: Uses the Okta logo and favicon with no background image.
              Uses the Okta colors on the Okta sign-in page.
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - emailTemplateTouchPointVariant
      - endUserDashboardTouchPointVariant
      - errorPageTouchPointVariant
      - primaryColorHex
      - secondaryColorHex
      - signInPageTouchPointVariant
      type: object
    UpdateUISchema:
      description: The updated request body properties
      example:
        uiSchema:
          elements:
            scope: scope
            options:
              format: text
            label: label
            type: type
          label: Sign in
          type: type
          buttonLabel: Submit
      properties:
        uiSchema:
          $ref: '#/components/schemas/UISchemaObject'
      type: object
    UpdateUserRequest:
      example:
        realmId: guo1bfiNtSnZYILxO0g4
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              iterationCount: 0
              salt: salt
              keySize: 6
              saltOrder: saltOrder
              workFactor: 3
              digestAlgorithm: digestAlgorithm
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>The
            ID of the Realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          type: string
          x-okta-lifecycle:
            lifecycle: EA
            isGenerallyAvailable: false
            SKUs: []
      type: object
    User:
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        transitioningToStatus: ACTIVE
        realmId: guo1bfiNtSnZYILxO0g4
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              iterationCount: 0
              salt: salt
              keySize: 6
              saltOrder: saltOrder
              workFactor: 3
              digestAlgorithm: digestAlgorithm
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          id: id
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        activated: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        activated:
          description: The timestamp when the user status transitioned to `ACTIVE`
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created:
          description: The timestamp when the user was created
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          description: The unique key for the user
          readOnly: true
          type: string
        lastLogin:
          description: The timestamp of the last login
          format: date-time
          nullable: true
          readOnly: true
          type: string
        lastUpdated:
          description: The timestamp when the user was last updated
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          description: The timestamp when the user's password was last updated
          format: date-time
          nullable: true
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>The
            ID of the Realm in which the user is residing
          example: guo1bfiNtSnZYILxO0g4
          readOnly: true
          type: string
          x-okta-lifecycle:
            lifecycle: EA
            isGenerallyAvailable: false
            SKUs: []
        status:
          description: The current status of the user
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DEPROVISIONED
          - LOCKED_OUT
          - PASSWORD_EXPIRED
          - PROVISIONED
          - RECOVERY
          - STAGED
          - SUSPENDED
        statusChanged:
          description: The timestamp when the status of the user last changed
          format: date-time
          nullable: true
          readOnly: true
          type: string
        transitioningToStatus:
          description: The target status of an in-progress asynchronous status transition.
            This property is only returned if the user's state is transitioning.
          enum:
          - ACTIVE
          - DEPROVISIONED
          - PROVISIONED
          nullable: true
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/User_type'
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          description: "If specified, includes embedded resources related to the user"
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/User__links'
      type: object
    UserActivationToken:
      example:
        activationUrl: activationUrl
        activationToken: activationToken
      properties:
        activationToken:
          readOnly: true
          type: string
        activationUrl:
          readOnly: true
          type: string
      type: object
    UserBlock:
      description: The description of the access block
      example:
        appliesTo: ANY_DEVICES
        type: DEVICE_BASED
      properties:
        appliesTo:
          description: The devices that the block applies to
          enum:
          - ANY_DEVICES
          - UNKNOWN_DEVICES
          readOnly: true
          type: string
          x-enumDescriptions:
            ANY_DEVICES: The account is blocked for all devices
            UNKNOWN_DEVICES: The account is only blocked for unknown devices
        type:
          description: Type of access block
          enum:
          - DEVICE_BASED
          readOnly: true
          type: string
      type: object
    UserCondition:
      description: Specifies a set of Users to be included or excluded
      properties:
        exclude:
          description: Users to be excluded
          items:
            type: string
          type: array
        include:
          description: Users to be included
          items:
            type: string
          type: array
      type: object
    UserCredentials:
      example:
        password:
          hook:
            type: type
          value: value
          hash:
            iterationCount: 0
            salt: salt
            keySize: 6
            saltOrder: saltOrder
            workFactor: 3
            digestAlgorithm: digestAlgorithm
            value: value
            algorithm: algorithm
        provider:
          name: name
          type: type
        recovery_question:
          answer: answer
          question: question
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      type: object
    UserFactor:
      discriminator:
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          push: '#/components/schemas/UserFactorPush'
          question: '#/components/schemas/UserFactorSecurityQuestion'
          sms: '#/components/schemas/UserFactorSMS'
          token: '#/components/schemas/UserFactorToken'
          token:hardware: '#/components/schemas/UserFactorHardware'
          token:hotp: '#/components/schemas/UserFactorCustomHOTP'
          token:software:totp: '#/components/schemas/UserFactorTOTP'
          u2f: '#/components/schemas/UserFactorU2F'
          web: '#/components/schemas/UserFactorWeb'
          webauthn: '#/components/schemas/UserFactorWebAuthn'
          hotp: '#/components/schemas/UserFactorCustomHOTP'
        propertyName: factorType
      properties:
        created:
          description: Timestamp when the Factor was enrolled
          example: 2022-08-25T00:31:00Z
          format: date-time
          readOnly: true
          type: string
        factorType:
          description: Type of Factor
          type: string
          x-okta-known-values:
          - call
          - email
          - push
          - question
          - signed_nonce
          - sms
          - token
          - token:hardware
          - token:hotp
          - token:software:totp
          - u2f
          - web
          - webauthn
        id:
          description: ID of the Factor
          example: caf8m6jbcvUH8mAep1d7
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp when the Factor was last updated
          example: 2022-08-25T00:31:00Z
          format: date-time
          readOnly: true
          type: string
        profile:
          description: Specific attributes related to the Factor
          type: object
        provider:
          description: Provider for the Factor
          type: string
        status:
          description: Status of the Factor
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DISABLED
          - ENROLLED
          - EXPIRED
          - INACTIVE
          - NOT_SETUP
          - PENDING_ACTIVATION
        vendorName:
          description: Name of the Factor vendor. This is usually the same as the
            provider except for On-Prem MFA where it depends on administrator settings.
          example: OKTA
          readOnly: true
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          type: object
      type: object
    UserFactorActivatePush:
      description: "Activation requests have a short lifetime and expire if activation\
        \ isn't completed before the indicated timestamp. If the activation expires,\
        \ use the returned `activate` link to restart the process."
      properties:
        expiresAt:
          description: Timestamp when the Factor verification attempt expires
          example: 2022-08-25T00:31:00Z
          format: date-time
          readOnly: true
          type: string
        factorResult:
          description: Result of a Factor verification
          type: string
          x-okta-known-values:
          - CANCELLED
          - ERROR
          - TIMEOUT
          - WAITING
      type: object
    UserFactorActivatePushResponse:
      description: Result of a Factor verification
      type: string
      x-okta-known-values:
      - CANCELLED
      - ERROR
      - TIMEOUT
      - WAITING
    UserFactorActivateRequest:
      description: |-
        Sends an asynchronous push notification to the device for approval by the user. You must poll the transaction to determine the state of the activation. See [Retrieve a Factor transaction status](./#tag/UserFactor/operation/getFactorTransactionStatus).

        No request body is required for `push` Factors.

        Activations have a short lifetime of several minutes and return a `TIMEOUT` if not completed before the timestamp specified in the `expiresAt` param. Use the published activate link to restart the activation process if the activation expires.
      nullable: true
      title: push
      type: object
    UserFactorActivateResponse:
      discriminator:
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          sms: '#/components/schemas/UserFactorSMS'
          push: '#/components/schemas/UserFactorActivatePush'
          token:software:totp: '#/components/schemas/UserFactorTOTP'
          u2f: '#/components/schemas/UserFactorU2F'
          webauthn: '#/components/schemas/UserFactorWebAuthn'
        propertyName: factorType
      properties:
        factorType:
          description: Type of the Factor
          enum:
          - call
          - email
          - sms
          - push
          - token:software:totp
          - u2f
          - webauthn
          type: string
        _links:
          $ref: '#/components/schemas/UserFactorActivateResponse__links'
      type: object
    UserFactorCall:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: call
          profile:
            $ref: '#/components/schemas/UserFactorCallProfile'
          provider:
            enum:
            - OKTA
            type: string
        type: object
      title: call
    UserFactorCallProfile:
      properties:
        phoneExtension:
          description: Extension of the associated `phoneNumber`
          example: "1234"
          maxLength: 15
          nullable: true
          type: string
        phoneNumber:
          description: "Phone number of the Factor. You should format phone numbers\
            \ to use the [E.164 standard](https://www.itu.int/rec/T-REC-E.164/)."
          example: +15554151337
          maxLength: 15
          pattern: "^\\+[1-9]\\d{1,14}$"
          type: string
      type: object
    UserFactorCustomHOTP:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorProfileId:
            description: "ID of an existing Custom TOTP Factor profile. To create\
              \ this, see [Custom TOTP Factor](https://help.okta.com/okta_help.htm?id=ext-mfa-totp)."
            type: string
          factorType:
            example: token:hotp
          profile:
            $ref: '#/components/schemas/UserFactorCustomHOTPProfile'
          provider:
            enum:
            - CUSTOM
            type: string
        type: object
      title: token:hotp
    UserFactorCustomHOTPProfile:
      properties:
        sharedSecret:
          description: Unique secret key used to generate the OTP
          example: 484f97be3213b117e3a20438e291540a
          type: string
      type: object
    UserFactorEmail:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: email
          profile:
            $ref: '#/components/schemas/UserFactorEmailProfile'
          provider:
            enum:
            - OKTA
            type: string
        type: object
      title: email
    UserFactorEmailProfile:
      properties:
        email:
          description: Email address of the user. Must be either the primary or secondary
            email address associated with the Okta user account.
          example: z.cool@example.com
          maxLength: 100
          type: string
      type: object
    UserFactorHardware:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: token:hardware
          profile:
            $ref: '#/components/schemas/UserFactorHardwareProfile'
          provider:
            enum:
            - YUBICO
            type: string
          verify:
            $ref: '#/components/schemas/UserFactorHardware_allOf_verify'
        type: object
      title: token:hardware
    UserFactorHardwareProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
    UserFactorLinks:
      allOf:
      - $ref: '#/components/schemas/LinksActivate'
      - $ref: '#/components/schemas/LinksCancel'
      - $ref: '#/components/schemas/LinksDeactivate'
      - $ref: '#/components/schemas/LinksEnroll'
      - $ref: '#/components/schemas/LinksFactor'
      - $ref: '#/components/schemas/LinksPoll'
      - $ref: '#/components/schemas/LinksQrcode'
      - $ref: '#/components/schemas/LinksQuestions'
      - $ref: '#/components/schemas/LinksResend'
      - $ref: '#/components/schemas/LinksSend'
      - $ref: '#/components/schemas/LinksSelf'
      - $ref: '#/components/schemas/LinksUser'
      - $ref: '#/components/schemas/LinksVerify'
      readOnly: true
    UserFactorPassCode:
      description: OTP for the current time window
      example: "1234567890"
      type: string
    UserFactorProvider:
      description: Provider for the Factor
      type: string
      x-okta-known-values:
      - CUSTOM
      - DUO
      - FIDO
      - GOOGLE
      - OKTA
      - RSA
      - SYMANTEC
      - YUBICO
    UserFactorPush:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          expiresAt:
            description: Timestamp when the Factor verification attempt expires
            example: 2022-08-25T00:31:00Z
            format: date-time
            readOnly: true
            type: string
          factorResult:
            $ref: '#/components/schemas/UserFactorResultType'
          factorType:
            example: push
          profile:
            $ref: '#/components/schemas/UserFactorPushProfile'
          provider:
            enum:
            - OKTA
            type: string
        type: object
      title: push
    UserFactorPushProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
        deviceToken:
          description: Token used to identify the device
          example: fwf7ku6bsiSCieh6y1d7
          type: string
        deviceType:
          description: Type of device
          example: SmartPhone_IPhone
          type: string
        name:
          description: Name of the device
          example: My Phone
          type: string
        platform:
          description: OS version of the associated device
          example: IOS
          type: string
        version:
          description: Installed version of Okta Verify
          example: "9.0"
          type: string
      type: object
    UserFactorPushTransaction:
      discriminator:
        mapping:
          WAITING: '#/components/schemas/UserFactorPushTransactionWaiting'
          SUCCESS: '#/components/schemas/UserFactorPushTransaction'
          REJECTED: '#/components/schemas/UserFactorPushTransactionRejected'
          TIMEOUT: '#/components/schemas/UserFactorPushTransactionTimeout'
        propertyName: factorResult
      properties:
        factorResult:
          description: Result of the verification transaction
          enum:
          - WAITING
          - SUCCESS
          - REJECTED
          - TIMEOUT
          type: string
      type: object
    UserFactorPushTransactionRejected:
      allOf:
      - $ref: '#/components/schemas/UserFactorPushTransaction'
      - properties:
          profile:
            $ref: '#/components/schemas/UserFactorPushTransactionRejected_allOf_profile'
          _links:
            $ref: '#/components/schemas/UserFactorPushTransactionRejected_allOf__links'
        type: object
    UserFactorPushTransactionSuccess:
      $ref: '#/components/schemas/UserFactorPushTransaction'
    UserFactorPushTransactionTimeout:
      allOf:
      - $ref: '#/components/schemas/UserFactorPushTransaction'
      - properties:
          profile:
            $ref: '#/components/schemas/UserFactorPushTransactionRejected_allOf_profile'
          _links:
            $ref: '#/components/schemas/UserFactorPushTransactionRejected_allOf__links'
        type: object
    UserFactorPushTransactionWaiting:
      allOf:
      - $ref: '#/components/schemas/UserFactorPushTransaction'
      - properties:
          profile:
            $ref: '#/components/schemas/UserFactorPushTransactionRejected_allOf_profile'
          _links:
            $ref: '#/components/schemas/UserFactorPushTransactionWaiting_allOf__links'
        type: object
    UserFactorResultType:
      description: Result of a Factor verification attempt
      readOnly: true
      type: string
      x-okta-known-values:
      - CANCELLED
      - CHALLENGE
      - ERROR
      - FAILED
      - PASSCODE_REPLAYED
      - REJECTED
      - SUCCESS
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - WAITING
    UserFactorSMS:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: sms
          profile:
            $ref: '#/components/schemas/UserFactorSMSProfile'
          provider:
            enum:
            - OKTA
            type: string
        type: object
      title: sms
    UserFactorSMSProfile:
      properties:
        phoneNumber:
          description: "Phone number of the Factor. You should format phone numbers\
            \ to use the [E.164 standard](https://www.itu.int/rec/T-REC-E.164/)."
          example: +15554151337
          maxLength: 15
          pattern: "^\\+[1-9]\\d{1,14}$"
          type: string
      type: object
    UserFactorSecurityQuestion:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: question
          profile:
            $ref: '#/components/schemas/UserFactorSecurityQuestionProfile'
          provider:
            enum:
            - OKTA
            type: string
        type: object
      title: question
    UserFactorSecurityQuestionProfile:
      example:
        answer: answer
        question: disliked_food
        questionText: What is the food you least liked as a child?
      properties:
        answer:
          description: Answer to the question
          minLength: 4
          type: string
          writeOnly: true
        question:
          description: Unique key for the question
          enum:
          - disliked_food
          - name_of_first_plush_toy
          - first_award
          - favorite_security_question
          - favorite_toy
          - first_computer_game
          - favorite_movie_quote
          - first_sports_team_mascot
          - first_music_purchase
          - favorite_art_piece
          - grandmother_favorite_desert
          - first_thing_cooked
          - childhood_dream_job
          - first_kiss_location
          - place_where_significant_other_was_met
          - favorite_vacation_location
          - new_years_two_thousand
          - favorite_speaker_actor
          - favorite_book_movie_character
          - favorite_sports_player
          example: disliked_food
          type: string
        questionText:
          description: Human-readable text displayed to the user
          example: What is the food you least liked as a child?
          readOnly: true
          type: string
      type: object
    UserFactorSignatureData:
      description: Base64-encoded signature data from the WebAuthn authenticator
      type: string
    UserFactorStatus:
      description: Status of the Factor
      example: ACTIVE
      readOnly: true
      type: string
      x-okta-known-values:
      - ACTIVE
      - DISABLED
      - ENROLLED
      - EXPIRED
      - INACTIVE
      - NOT_SETUP
      - PENDING_ACTIVATION
    UserFactorSupported:
      example:
        provider: provider
        _embedded:
          key: "{}"
        _links: null
        factorType: factorType
        vendorName: OKTA
        enrollment: OPTIONAL
        status: ACTIVE
      properties:
        enrollment:
          description: Indicates if the Factor is required for the specified user
          enum:
          - OPTIONAL
          - REQUIRED
          example: OPTIONAL
          type: string
        factorType:
          description: Type of Factor
          type: string
          x-okta-known-values:
          - call
          - email
          - push
          - question
          - signed_nonce
          - sms
          - token
          - token:hardware
          - token:hotp
          - token:software:totp
          - u2f
          - web
          - webauthn
        provider:
          description: Provider for the Factor
          type: string
          x-okta-known-values:
          - CUSTOM
          - DUO
          - FIDO
          - GOOGLE
          - OKTA
          - RSA
          - SYMANTEC
          - YUBICO
        status:
          description: Status of the Factor
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DISABLED
          - ENROLLED
          - EXPIRED
          - INACTIVE
          - NOT_SETUP
          - PENDING_ACTIVATION
        vendorName:
          description: Name of the Factor vendor. This is usually the same as the
            provider except for On-Prem MFA where it depends on administrator settings.
          example: OKTA
          readOnly: true
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          description: Embedded resources related to the Factor
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
      type: object
    UserFactorTOTP:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: token:software:totp
          profile:
            $ref: '#/components/schemas/UserFactorTOTPProfile'
          provider:
            enum:
            - OKTA
            - GOOGLE
            type: string
        type: object
      title: token:software:totp
    UserFactorTOTPProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
    UserFactorToken:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: token
          profile:
            $ref: '#/components/schemas/UserFactorTokenProfile'
          provider:
            enum:
            - RSA
            - SYMANTEC
            type: string
          verify:
            $ref: '#/components/schemas/UserFactorToken_allOf_verify'
        type: object
      title: token
    UserFactorTokenProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
    UserFactorTokenVerifyRSA:
      properties:
        passCode:
          description: OTP for the current time window
          example: "5275875498"
          type: string
      title: RSA SecurID
      type: object
    UserFactorTokenVerifySymantec:
      properties:
        nextPassCode:
          description: OTP for the next time window
          example: 3956685498
          type: integer
        passCode:
          description: OTP for the current time window
          example: "5275875498"
          type: string
      title: Symantec VIP
      type: object
    UserFactorType:
      description: Type of Factor
      type: string
      x-okta-known-values:
      - call
      - email
      - push
      - question
      - signed_nonce
      - sms
      - token
      - token:hardware
      - token:hotp
      - token:software:totp
      - u2f
      - web
      - webauthn
    UserFactorU2F:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: u2f
          profile:
            $ref: '#/components/schemas/UserFactorU2FProfile'
          provider:
            enum:
            - FIDO
            type: string
        type: object
      title: u2f
    UserFactorU2FProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
    UserFactorVerifyRequest:
      description: "Sends an asynchronous push notification to the device for approval\
        \ by the user. You must poll the transaction to determine the state of the\
        \ verification. See [Retrieve a Factor transaction status](./#tag/UserFactor/operation/getFactorTransactionStatus)."
      nullable: true
      title: push
      type: object
    UserFactorVerifyResponse:
      example:
        _embedded:
          key: "{}"
        _links: null
        factorResult: factorResult
        factorMessage: factorMessage
        expiresAt: 2022-08-25T00:31:00Z
      properties:
        expiresAt:
          description: Timestamp when the verification expires
          example: 2022-08-25T00:31:00Z
          format: date-time
          readOnly: true
          type: string
        factorMessage:
          description: Optional display message for Factor verification
          nullable: true
          readOnly: true
          type: string
        factorResult:
          description: Result of a Factor verification
          type: string
          x-enumDescriptions:
            CANCELED: User canceled the verification
            CHALLENGE: Okta issued a verification challenge
            ERROR: Verification encountered an unexpected server error
            EXPIRED: User didn't complete the verification within the allowed time
              window
            FAILED: Verification failed
            PASSCODE_REPLAYED: User previously verified the Factor within the same
              time window. Another verification is required during another time window.
            REJECTED: User rejected the verification
            SUCCESS: User completed the verification
            TIMEOUT: Okta didn't complete the verification within the allowed time
              window
            TIME_WINDOW_EXCEEDED: User completed the verification outside of the allowed
              time window. Another verification is required.
            WAITING: Verification is in progress
          x-okta-known-values:
          - CHALLENGE
          - ERROR
          - EXPIRED
          - FAILED
          - PASSCODE_REPLAYED
          - REJECTED
          - SUCCESS
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - WAITING
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
      type: object
    UserFactorVerifyResult:
      description: Result of a Factor verification
      type: string
      x-enumDescriptions:
        CANCELED: User canceled the verification
        CHALLENGE: Okta issued a verification challenge
        ERROR: Verification encountered an unexpected server error
        EXPIRED: User didn't complete the verification within the allowed time window
        FAILED: Verification failed
        PASSCODE_REPLAYED: User previously verified the Factor within the same time
          window. Another verification is required during another time window.
        REJECTED: User rejected the verification
        SUCCESS: User completed the verification
        TIMEOUT: Okta didn't complete the verification within the allowed time window
        TIME_WINDOW_EXCEEDED: User completed the verification outside of the allowed
          time window. Another verification is required.
        WAITING: Verification is in progress
      x-okta-known-values:
      - CHALLENGE
      - ERROR
      - EXPIRED
      - FAILED
      - PASSCODE_REPLAYED
      - REJECTED
      - SUCCESS
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - WAITING
    UserFactorWeb:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: web
          profile:
            $ref: '#/components/schemas/UserFactorWebProfile'
          provider:
            enum:
            - DUO
            type: string
        type: object
      title: web
    UserFactorWebAuthn:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - properties:
          factorType:
            example: webauthn
          profile:
            $ref: '#/components/schemas/UserFactorWebAuthnProfile'
          provider:
            enum:
            - FIDO
            type: string
        type: object
      title: webauthn
    UserFactorWebAuthnProfile:
      properties:
        authenticatorName:
          description: Human-readable name of the authenticator
          example: MacBook Touch ID
          type: string
        credentialId:
          description: ID for the Factor credential
          example: AHoOEhwvYiMv6SSwLp7KYRNttXtg_kYgQoQiEIWPFH_T3Ztp5Vj3bQ5H0LypIFR8ka8kfiCJ3I5qVpxrsd6JTMWKcE3xNh_U2QVF0Kwlan8Fiw
          type: string
      type: object
    UserFactorWebProfile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
    UserGetSingleton:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          _embedded:
            $ref: '#/components/schemas/UserGetSingleton_allOf__embedded'
        type: object
    UserIdentifierConditionEvaluatorPattern:
      description: Used in the User Identifier Condition object. Specifies the details
        of the patterns to match against.
      properties:
        matchType:
          description: "The type of pattern. For regex, use `EXPRESSION`."
          type: string
          x-okta-known-values:
          - CONTAINS
          - EQUALS
          - EXPRESSION
          - STARTS_WITH
          - SUFFIX
        value:
          description: The regex expression of a simple match string
          type: string
      type: object
    UserIdentifierMatchType:
      description: "The type of pattern. For regex, use `EXPRESSION`."
      type: string
      x-okta-known-values:
      - CONTAINS
      - EQUALS
      - EXPRESSION
      - STARTS_WITH
      - SUFFIX
    UserIdentifierPolicyRuleCondition:
      properties:
        attribute:
          type: string
        patterns:
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
          type: array
        type:
          type: string
          x-okta-known-values:
          - ATTRIBUTE
          - IDENTIFIER
      type: object
    UserIdentifierType:
      type: string
      x-okta-known-values:
      - ATTRIBUTE
      - IDENTIFIER
    UserIdentityProviderLinkRequest:
      example:
        externalId: externalId
      properties:
        externalId:
          type: string
      type: object
    UserLifecycleAttributePolicyRuleCondition:
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
      type: object
    UserLockoutSettings:
      example:
        preventBruteForceLockoutFromUnknownDevices: false
      properties:
        preventBruteForceLockoutFromUnknownDevices:
          default: false
          description: Prevents brute-force lockout from unknown devices for the password
            authenticator.
          type: boolean
      type: object
    UserNextLogin:
      type: string
      x-okta-known-values:
      - changePassword
    UserPolicyRuleCondition:
      description: Specifies a set of Users to be included or excluded
      properties:
        exclude:
          description: Users to be excluded
          items:
            type: string
          type: array
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          description: Users to be included
          items:
            type: string
          type: array
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
      type: object
    UserProfile:
      additionalProperties: true
      description: "Specifies the default and custom profile properties for a user.\n\
        \nThe default user profile is based on the [System for Cross-domain Identity\
        \ Management: Core Schema](https://datatracker.ietf.org/doc/html/rfc7643).\n\
        The only permitted customizations of the default profile are to update permissions,\
        \ change whether the `firstName` and `lastName` properties are nullable, and\
        \ \nspecify a [pattern](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation)\
        \ for `login`. You can use the Profile Editor in the administrator UI\nor\
        \ the [Schemas API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)\
        \ to make schema modifications.\n\nYou can extend user profiles with custom\
        \ properties. You must first add the custom property to the user profile schema\
        \ before you reference it.\nYou can use the Profile Editor in the Admin console\
        \ or the [Schemas API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)\
        \ to manage schema extensions.\n\nCustom attributes may contain HTML tags.\
        \ It's the client's responsibility to escape or encode this data before displaying\
        \ it. Use [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\
        \ to prevent cross-site scripting."
      example:
        profileUrl: profileUrl
        lastName: lastName
        zipCode: zipCode
        preferredLanguage: preferredLanguage
        city: city
        displayName: displayName
        timezone: timezone
        locale: locale
        login: login
        title: title
        employeeNumber: employeeNumber
        division: division
        honorificSuffix: honorificSuffix
        countryCode: countryCode
        state: state
        department: department
        email: email
        manager: manager
        costCenter: costCenter
        nickName: nickName
        secondEmail: secondEmail
        honorificPrefix: honorificPrefix
        managerId: managerId
        firstName: firstName
        primaryPhone: primaryPhone
        postalAddress: postalAddress
        mobilePhone: mobilePhone
        streetAddress: streetAddress
        organization: organization
        middleName: middleName
        userType: userType
      properties:
        city:
          description: The city or locality of the user's address (`locality`)
          maxLength: 128
          nullable: true
          type: string
        costCenter:
          description: Name of the cost center assigned to a user
          nullable: true
          type: string
        countryCode:
          description: The country name component of the user's address (`country`)
          maxLength: 2
          nullable: true
          type: string
        department:
          description: Name of the user's department
          type: string
        displayName:
          description: Name of the user suitable for display to end users
          nullable: true
          type: string
        division:
          description: Name of the user's division
          nullable: true
          type: string
        email:
          description: "The primary email address of the user. For validation, see\
            \ [RFC 5322 Section 3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3)."
          format: email
          maxLength: 100
          minLength: 5
          type: string
        employeeNumber:
          description: The organization or company assigned unique identifier for
            the user
          type: string
        firstName:
          description: Given name of the user (`givenName`)
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        honorificPrefix:
          description: "Honorific prefix(es) of the user, or title in most Western\
            \ languages"
          nullable: true
          type: string
        honorificSuffix:
          description: Honorific suffix(es) of the user
          nullable: true
          type: string
        lastName:
          description: The family name of the user (`familyName`)
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        locale:
          description: |-
            The user's default location for purposes of localizing items such as currency, date time format, numerical representations, and so on.
            A locale value is a concatenation of the ISO 639-1 two-letter language code, an underscore, and the ISO 3166-1 two-letter country code. For example, en_US specifies the language English and country US. This value is `en_US` by default.
          type: string
        login:
          description: "The unique identifier for the user (`username`). For validation,\
            \ see [Login pattern validation](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation).\
            \ See also [Okta login](https://developer.okta.com/docs/reference/api/users/#okta-login)."
          maxLength: 100
          minLength: 5
          type: string
        manager:
          description: The `displayName` of the user's manager
          nullable: true
          type: string
        managerId:
          description: The `id` of the user's manager
          nullable: true
          type: string
        middleName:
          description: The middle name of the user
          nullable: true
          type: string
        mobilePhone:
          description: The mobile phone number of the user
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        nickName:
          description: The casual way to address the user in real life
          nullable: true
          type: string
        organization:
          description: Name of the the user's organization
          nullable: true
          type: string
        postalAddress:
          description: Mailing address component of the user's address
          maxLength: 4096
          nullable: true
          type: string
        preferredLanguage:
          description: The user's preferred written or spoken language
          nullable: true
          type: string
        primaryPhone:
          description: The primary phone number of the user such as a home number
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        profileUrl:
          description: "The URL of the user's online profile. For example, a web page.\
            \ See [URL](https://datatracker.ietf.org/doc/html/rfc1808)."
          nullable: true
          type: string
        secondEmail:
          description: The secondary email address of the user typically used for
            account recovery
          format: email
          maxLength: 100
          minLength: 5
          nullable: true
          type: string
        state:
          description: The state or region component of the user's address (`region`)
          maxLength: 128
          nullable: true
          type: string
        streetAddress:
          description: The full street address component of the user's address
          maxLength: 1024
          nullable: true
          type: string
        timezone:
          description: The user's time zone
          nullable: true
          type: string
        title:
          description: "The user's title, such as Vice President"
          nullable: true
          type: string
        userType:
          description: "The property used to describe the organization-to-user relationship,\
            \ such as employee or contractor"
          nullable: true
          type: string
        zipCode:
          description: The ZIP code or postal code component of the user's address
            (`postalCode`)
          maxLength: 50
          nullable: true
          type: string
      type: object
    UserProvisioningApplicationFeature:
      allOf:
      - $ref: '#/components/schemas/ApplicationFeature'
      - type: object
      - properties:
          capabilities:
            $ref: '#/components/schemas/CapabilitiesObject'
    UserSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          self: null
        created: created
        name: name
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              profileUrl:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              lastName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              zipCode:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              preferredLanguage:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              city:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              displayName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              timezone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              locale:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              login:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              title:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              employeeNumber:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              division:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              honorificSuffix:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              countryCode:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              state:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              department:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              email:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              manager:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              costCenter:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              nickName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              secondEmail:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              honorificPrefix:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              managerId:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              firstName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              primaryPhone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              postalAddress:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              mobilePhone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              streetAddress:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              organization:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              middleName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              userType:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    UserSchemaAttribute:
      example:
        minLength: 6
        externalNamespace: externalNamespace
        pattern: pattern
        description: description
        union: union
        title: title
        type: type
        enum:
        - enum
        - enum
        required: true
        master:
          priority:
          - type: type
            value: value
          - type: type
            value: value
          type: type
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        externalName: externalName
        scope: scope
        unique: unique
        mutability: mutability
        items:
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          type: type
          enum:
          - enum
          - enum
        maxLength: 0
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          nullable: true
          type: integer
        minLength:
          nullable: true
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        pattern:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          type: string
          x-okta-known-values:
          - NONE
          - SELF
        title:
          type: string
        type:
          type: string
          x-okta-known-values:
          - array
          - boolean
          - integer
          - number
          - string
        union:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENABLE
        unique:
          type: string
      type: object
      x-okta-allow-null-property-value-for-updates: true
    UserSchemaAttributeEnum:
      example:
        const: const
        title: title
      properties:
        const:
          type: string
        title:
          type: string
      type: object
    UserSchemaAttributeItems:
      example:
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        type: type
        enum:
        - enum
        - enum
      properties:
        enum:
          items:
            type: string
          type: array
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        type:
          type: string
      type: object
    UserSchemaAttributeMaster:
      example:
        priority:
        - type: type
          value: value
        - type: type
          value: value
        type: type
      properties:
        priority:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
          type: array
        type:
          type: string
          x-okta-known-values:
          - OKTA
          - OVERRIDE
          - PROFILE_MASTER
      type: object
    UserSchemaAttributeMasterPriority:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    UserSchemaAttributeMasterType:
      type: string
      x-okta-known-values:
      - OKTA
      - OVERRIDE
      - PROFILE_MASTER
    UserSchemaAttributePermission:
      example:
        principal: principal
        action: action
      properties:
        action:
          type: string
        principal:
          type: string
      type: object
    UserSchemaAttributeScope:
      type: string
      x-okta-known-values:
      - NONE
      - SELF
    UserSchemaAttributeType:
      type: string
      x-okta-known-values:
      - array
      - boolean
      - integer
      - number
      - string
    UserSchemaAttributeUnion:
      type: string
      x-okta-known-values:
      - DISABLE
      - ENABLE
    UserSchemaBase:
      example:
        id: id
        type: type
        properties:
          profileUrl:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          lastName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          zipCode:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          preferredLanguage:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          city:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          displayName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          timezone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          locale:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          login:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          title:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          employeeNumber:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          division:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          honorificSuffix:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          countryCode:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          state:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          department:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          email:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          manager:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          costCenter:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          nickName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          secondEmail:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          honorificPrefix:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          managerId:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          firstName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          primaryPhone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          postalAddress:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          mobilePhone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          streetAddress:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          organization:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          middleName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          userType:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    UserSchemaBaseProperties:
      example:
        profileUrl:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        lastName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        zipCode:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        preferredLanguage:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        city:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        displayName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        timezone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        locale:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        login:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        title:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        employeeNumber:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        division:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        honorificSuffix:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        countryCode:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        state:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        department:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        email:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        manager:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        costCenter:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        nickName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        secondEmail:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        honorificPrefix:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        managerId:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        firstName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        primaryPhone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        postalAddress:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        mobilePhone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        streetAddress:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        organization:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        middleName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        userType:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
      properties:
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
      type: object
    UserSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            profileUrl:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            lastName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            zipCode:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            preferredLanguage:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            city:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            displayName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            timezone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            locale:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            login:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            title:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            employeeNumber:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            division:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            honorificSuffix:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            countryCode:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            state:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            department:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            email:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            manager:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            costCenter:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            nickName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            secondEmail:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            honorificPrefix:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            managerId:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            firstName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            primaryPhone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            postalAddress:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            mobilePhone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            streetAddress:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            organization:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            middleName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            userType:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
      type: object
    UserSchemaProperties:
      example:
        profile:
          allOf:
          - $ref: $ref
          - $ref: $ref
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
      type: object
    UserSchemaPropertiesProfile:
      example:
        allOf:
        - $ref: $ref
        - $ref: $ref
      properties:
        allOf:
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
          type: array
      type: object
    UserSchemaPropertiesProfileItem:
      example:
        $ref: $ref
      properties:
        $ref:
          type: string
      type: object
    UserSchemaPublic:
      example:
        id: id
        type: type
        properties:
          key:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    UserStatus:
      description: The current status of the user
      readOnly: true
      type: string
      x-okta-known-values:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
    UserStatusPolicyRuleCondition:
      properties:
        value:
          type: string
          x-okta-known-values:
          - ACTIVATING
          - ACTIVE
          - DELETED
          - DELETING
          - EXPIRED_PASSWORD
          - INACTIVE
          - PENDING
          - SUSPENDED
      type: object
    UserType:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        default: true
        createdBy: createdBy
        _links: null
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        description: description
        id: id
      properties:
        created:
          description: A timestamp from when the User Type was created
          format: date-time
          readOnly: true
          type: string
        createdBy:
          description: The user ID of the account that created the User Type
          readOnly: true
          type: string
        default:
          description: A boolean value to indicate if this is the default User Type
          readOnly: true
          type: boolean
        description:
          description: The human-readable description of the User Type
          type: string
        displayName:
          description: The human-readable name of the User Type
          type: string
        id:
          description: The unique key for the User Type
          readOnly: true
          type: string
        lastUpdated:
          description: A timestamp from when the User Type was most recently updated
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          description: The user ID of the most recent account to edit the User Type
          readOnly: true
          type: string
        name:
          description: "The name of the User Type. The name must start with A-Z or\
            \ a-z and contain only A-Z, a-z, 0-9, or underscore (_) characters. \n\
            \ This value becomes read-only after creation and can't be updated."
          type: string
        _links:
          $ref: '#/components/schemas/UserTypeLinks'
      required:
      - displayName
      - name
      type: object
    UserTypeCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
    UserTypeLinks:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          schema:
            $ref: '#/components/schemas/SourceLinks_allOf_schema'
        type: object
    UserTypePostRequest:
      example:
        displayName: displayName
        description: description
      properties:
        description:
          description: The updated human-readable description of the User Type
          type: string
        displayName:
          description: The updated human-readable display name for the User Type
          type: string
      type: object
    UserTypePutRequest:
      example:
        displayName: displayName
        name: name
        description: description
      properties:
        description:
          description: The human-readable description of the User Type
          type: string
        displayName:
          description: The human-readable name of the User Type
          type: string
        name:
          description: The name of the existing type
          type: string
      required:
      - description
      - displayName
      - name
      type: object
    UserVerificationEnum:
      description: "User verification setting. Possible values `DISCOURAGED` (the\
        \ authenticator isn't asked to perform user verification, but may do so at\
        \ its discretion), `PREFERRED` (the client uses an authenticator capable of\
        \ user verification if possible), or `REQUIRED`(the client uses only an authenticator\
        \ capable of user verification)"
      type: string
      x-okta-known-values:
      - DISCOURAGED
      - PREFERRED
      - REQUIRED
    VerificationMethod:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
          type: array
        factorMode:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
      type: object
    Version:
      description: "The version specified as a [Semantic Version](https://semver.org/)."
      pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\\
        d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
        +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      type: string
    WebAuthnAttachment:
      description: Method attachment
      type: string
      x-okta-known-values:
      - ANY
      - BUILT_IN
      - ROAMING
    WebAuthnCredRequest:
      description: "Credential request object for the initialized credential, along\
        \ with the enrollment and key identifiers to associate with the credential"
      properties:
        authenticatorEnrollmentId:
          description: ID for a WebAuthn Preregistration Factor in Okta
          type: string
        credRequestJwe:
          description: Encrypted JWE of credential request for the fulfillment provider
          type: string
        keyId:
          description: ID for the Okta response key-pair used to encrypt and decrypt
            credential requests and responses
          type: string
      type: object
    WebAuthnCredResponse:
      description: "Credential response object for enrolled credential details, along\
        \ with enrollment and key identifiers to associate the credential"
      properties:
        authenticatorEnrollmentId:
          description: ID for a WebAuthn Preregistration Factor in Okta
          type: string
        credResponseJWE:
          description: Encrypted JWE of credential response from the fulfillment provider
          type: string
      type: object
    WebAuthnPreregistrationFactor:
      description: User Factor variant used for WebAuthn Preregistration Factors
      properties:
        created:
          description: Timestamp indicating when the Factor was enrolled
          format: date-time
          readOnly: true
          type: string
        factorType:
          description: Type of Factor
          type: string
          x-okta-known-values:
          - call
          - email
          - push
          - question
          - signed_nonce
          - sms
          - token
          - token:hardware
          - token:hotp
          - token:software:totp
          - u2f
          - web
          - webauthn
        id:
          description: ID of the Factor
          readOnly: true
          type: string
        lastUpdated:
          description: Timestamp indicating when the Factor was last updated
          format: date-time
          readOnly: true
          type: string
        profile:
          description: Specific attributes related to the Factor
          type: object
        provider:
          description: Provider for the Factor
          type: string
          x-okta-known-values:
          - CUSTOM
          - DUO
          - FIDO
          - GOOGLE
          - OKTA
          - RSA
          - SYMANTEC
          - YUBICO
        status:
          description: Status of the Factor
          example: ACTIVE
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DISABLED
          - ENROLLED
          - EXPIRED
          - INACTIVE
          - NOT_SETUP
          - PENDING_ACTIVATION
        vendorName:
          description: Name of the Factor vendor. This is usually the same as the
            provider.
          example: OKTA
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/LinksSelf'
      type: object
    WellKnownAppAuthenticatorConfiguration:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        settings:
          userVerification: userVerification
        createdDate: 2000-01-23T04:56:07.000+00:00
        supportedMethods:
        - settings:
            algorithms:
            - null
            - null
            transactionTypes:
            - null
            - null
            keyProtection: keyProtection
          type: push
          status: status
        - settings:
            algorithms:
            - null
            - null
            transactionTypes:
            - null
            - null
            keyProtection: keyProtection
          type: push
          status: status
        name: name
        authenticatorId: authenticatorId
        appAuthenticatorEnrollEndpoint: appAuthenticatorEnrollEndpoint
        type: app
        key: key
        orgId: orgId
      properties:
        appAuthenticatorEnrollEndpoint:
          description: The authenticator enrollment endpoint
          type: string
        authenticatorId:
          description: The unique identifier of the app authenticator
          type: string
        createdDate:
          description: Timestamp when the Authenticator was created
          format: date-time
          type: string
        key:
          description: A human-readable string that identifies the Authenticator
          type: string
          x-okta-known-values:
          - custom_app
          - duo
          - external_idp
          - google_otp
          - okta_email
          - okta_password
          - okta_verify
          - onprem_mfa
          - phone_number
          - security_key
          - security_question
          - smart_card_idp
          - symantec_vip
          - webauthn
          - yubikey_token
        lastUpdated:
          description: Timestamp when the Authenticator was last modified
          format: date-time
          type: string
        name:
          description: The authenticator display name
          type: string
        orgId:
          description: The `id` of the Okta Org
          type: string
        settings:
          $ref: '#/components/schemas/WellKnownAppAuthenticatorConfiguration_settings'
        supportedMethods:
          items:
            $ref: '#/components/schemas/SupportedMethods'
          type: array
        type:
          description: The type of Authenticator
          enum:
          - app
          type: string
      type: object
    WellKnownOrgMetadata:
      example:
        pipeline: pipeline
        settings:
          analyticsCollectionEnabled: true
          bugReportingEnabled: true
          omEnabled: true
        _links:
          organization:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
          alternate:
            templated: true
            hints:
              allow:
              - null
              - null
            name: name
            href: href
            type: type
        id: id
      properties:
        id:
          description: The unique identifier of the Org
          type: string
        pipeline:
          description: "The authentication pipeline of the org. `idx` means the org\
            \ is using the Identity Engine, while `v1` means the org is using the\
            \ Classic authentication pipeline."
          type: string
          x-okta-known-values:
          - idx
          - v1
        settings:
          $ref: '#/components/schemas/WellKnownOrgMetadataSettings'
        _links:
          $ref: '#/components/schemas/WellKnownOrgMetadata__links'
      type: object
    WellKnownOrgMetadataSettings:
      example:
        analyticsCollectionEnabled: true
        bugReportingEnabled: true
        omEnabled: true
      properties:
        analyticsCollectionEnabled:
          type: boolean
        bugReportingEnabled:
          type: boolean
        omEnabled:
          description: Whether the legacy Okta Mobile application is enabled for the
            org
          type: boolean
      type: object
    WellKnownSSFMetadata:
      description: Metadata about Okta as a transmitter and relevant information for
        configuration.
      example:
        configuration_endpoint: "https://{yourOktaDomain}/api/v1/ssf/stream"
        delivery_methods_supported:
        - https://schemas.openid.net/secevent/risc/delivery-method/push
        - urn:ietf:rfc:8935
        jwks_uri: "https://{yourOktaDomain}/oauth2/v1/keys"
        issuer: "https://{yourOktaDomain}"
      properties:
        configuration_endpoint:
          description: The URL of the SSF Stream configuration endpoint
          example: "https://{yourOktaDomain}/api/v1/ssf/stream"
          format: uri
          type: string
        delivery_methods_supported:
          description: An array of supported SET delivery methods
          example:
          - https://schemas.openid.net/secevent/risc/delivery-method/push
          - urn:ietf:rfc:8935
          items:
            format: uri
            type: string
          type: array
        issuer:
          description: The issuer used in Security Event Tokens. This value is set
            as `iss` in the claim.
          example: "https://{yourOktaDomain}"
          type: string
        jwks_uri:
          description: The URL of the JSON Web Key Set (JWKS) that contains the signing
            keys for validating the signatures of Security Event Tokens (SETs)
          example: "https://{yourOktaDomain}/oauth2/v1/keys"
          format: uri
          type: string
      title: Shared Signals Framework Metadata
      type: object
    WidgetGeneration:
      type: string
      x-okta-known-values:
      - G2
      - G3
    WsFederationApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - properties:
          credentials:
            $ref: '#/components/schemas/ApplicationCredentials'
          name:
            description: '`template_wsfed` is the key name for a WS-Federated app
              instance with a SAML 2.0 token'
            enum:
            - template_wsfed
            type: string
          settings:
            $ref: '#/components/schemas/WsFederationApplicationSettings'
        required:
        - name
        - settings
        type: object
      x-okta-defined-as:
        name: template_wsfed
    WsFederationApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - properties:
          app:
            $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
        type: object
    WsFederationApplicationSettingsApplication:
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
      type: object
    ZoomUsApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - zoomus
            example: zoomus
            type: string
          signOnMode:
            enum:
            - SAML_2_0
            type: string
          settings:
            $ref: '#/components/schemas/ZoomUsApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Zoom app (key name: `zoomus`)

        To create a Zoom app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Zoom app only supports `SAML_2_0` sign-on mode.
      example:
        name: zoomus
        label: Sample Zoom App
        signOnMode: SAML_2_0
        settings:
          app:
            subDomain: my-zoom-subdomain
      title: Zoom
      x-tags:
      - Application
      x-okta-defined-as:
        name: zoomus
    ZoomUsApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/ZoomUsApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    ZoomUsApplicationSettingsApplication:
      description: Zoom app instance properties
      properties:
        subDomain:
          description: Your Zoom subdomain
          type: string
      required:
      - subDomain
      type: object
    ZscalerbyzApplication:
      allOf:
      - $ref: '#/components/schemas/OINApplication'
      - type: object
      - properties:
          name:
            enum:
            - zscalerbyz
            example: zscalerbyz
            type: string
          signOnMode:
            enum:
            - BROWSER_PLUGIN
            - SAML_2_0
            type: string
          settings:
            $ref: '#/components/schemas/ZscalerbyzApplicationSettings'
        required:
        - label
        - name
        - settings
      description: |
        Schema for the Zscaler 2.0 app (key name: `zscalerbyz`)

        To create a Zscaler 2.0 app, use the [Create an Application](/openapi/okta-management/management/tag/Application/#tag/Application/operation/createApplication) request with the following parameters in the request body.
        > **Note:** The Zscaler 2.0 app only supports `BROWSER_PLUGIN` and `SAML_2_0` sign-on modes.
      example:
        name: zscalerbyz
        label: Sample Zscaler 2.0 App
        signOnMode: SAML_2_0
      title: Zscaler 2.0
      x-tags:
      - Application
      x-okta-defined-as:
        name: zscalerbyz
    ZscalerbyzApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
      - properties:
          app:
            $ref: '#/components/schemas/ZscalerbyzApplicationSettingsApplication'
          signOn:
            $ref: '#/components/schemas/OINSaml20ApplicationSettingsSignOn'
        required:
        - app
    ZscalerbyzApplicationSettingsApplication:
      description: Zscaler app instance properties
      properties:
        siteDomain:
          description: Your Zscaler domain
          type: string
      type: object
    appLink:
      properties:
        login:
          $ref: '#/components/schemas/HrefObjectAppLink'
        logo:
          $ref: '#/components/schemas/HrefObjectLogoLink'
      readOnly: true
      type: object
    createdProperty:
      description: Timestamp when the object was created
      format: date-time
      readOnly: true
      type: string
    enabledPagesType:
      title: enabledPages
      type: string
      x-enumDescriptions:
        SIGN_IN: User sign-in page
        SSPR: Self-service Password Recovery page
        SSR: Self-service Registration page
      x-okta-known-values:
      - SIGN_IN
      - SSPR
      - SSR
    lastUpdatedProperty:
      description: Timestamp when the object was last updated
      format: date-time
      readOnly: true
      type: string
    postAPIServiceIntegrationInstance:
      allOf:
      - $ref: '#/components/schemas/APIServiceIntegrationInstance'
      - properties:
          clientSecret:
            description: The client secret for the API Service Integration instance.
              This property is only returned in a POST response.
            readOnly: true
            type: string
        type: object
    postAPIServiceIntegrationInstanceRequest:
      properties:
        grantedScopes:
          description: "The list of Okta management scopes granted to the API Service\
            \ Integration instance. See [Okta management OAuth 2.0 scopes](/oauth2/#okta-admin-management)."
          example:
          - okta.logs.read
          items:
            type: string
          type: array
        type:
          description: "The type of the API service integration. This string is an\
            \ underscore-concatenated, lowercased API service integration name. For\
            \ example, `my_api_log_integration`."
          example: my_app_cie
          type: string
      required:
      - grantedScopes
      - type
      type: object
    profile:
      additionalProperties:
        properties: {}
        type: object
      description: Specific profile properties for the privileged account
      readOnly: true
      type: object
    subject:
      nullable: false
      properties:
        format:
          description: The user identifier
          enum:
          - opaque
          nullable: false
          type: string
          writeOnly: true
        id:
          description: ID of the user
          nullable: false
          type: string
          writeOnly: true
      type: object
    userLink:
      properties:
        user:
          $ref: '#/components/schemas/HrefObjectUserLink'
      type: object
    schemas-JsonWebKey:
      description: "A [JSON Web Key (JWK)](https://tools.ietf.org/html/rfc7517) is\
        \ a JSON representation of a cryptographic key. Okta can use these keys to\
        \ verify the signature of a JWT when provided for the `private_key_jwt` client\
        \ authentication method or for a signed authorize request object. Okta supports\
        \ both RSA and Elliptic Curve (EC) keys."
      discriminator:
        mapping:
          EC: '#/components/schemas/JsonWebKeyEC'
          RSA: '#/components/schemas/JsonWebKeyRsa'
        propertyName: kty
      properties:
        alg:
          type: string
          x-okta-known-values:
          - ES256
          - ES384
          - ES512
          - HS256
          - HS384
          - HS512
          - RS256
          - RS384
          - RS512
        kid:
          description: The unique identifier of the key
          type: string
        kty:
          description: The type of public key
          type: string
          x-okta-known-values:
          - EC
          - RSA
        status:
          description: The status of the public key
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        use:
          description: The intended use of the public key
          type: string
          x-okta-known-values:
          - enc
          - sig
      type: object
    JsonWebKeyEC:
      allOf:
      - $ref: '#/components/schemas/schemas-JsonWebKey'
      - properties:
          x:
            description: The public x coordinate for the elliptic curve point
            type: string
          "y":
            description: The public y coordinate for the elliptic curve point
            type: string
        type: object
    JsonWebKeyRsa:
      allOf:
      - $ref: '#/components/schemas/schemas-JsonWebKey'
      - properties:
          e:
            description: The key exponent of a RSA key
            type: string
          "n":
            description: The modulus of the RSA key
            type: string
        type: object
    JsonWebKeyType:
      description: The type of public key
      type: string
      x-okta-known-values:
      - EC
      - RSA
    JsonWebKeyStatus:
      description: The status of the public key
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    JsonWebKeyUse:
      description: The intended use of the public key
      type: string
      x-okta-known-values:
      - enc
      - sig
    listApplications_200_response_inner:
      discriminator:
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/Saml11Application'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
        propertyName: signOnMode
      oneOf:
      - $ref: '#/components/schemas/AutoLoginApplication'
      - $ref: '#/components/schemas/BasicAuthApplication'
      - $ref: '#/components/schemas/BookmarkApplication'
      - $ref: '#/components/schemas/BrowserPluginApplication'
      - $ref: '#/components/schemas/OpenIdConnectApplication'
      - $ref: '#/components/schemas/Saml11Application'
      - $ref: '#/components/schemas/SamlApplication'
      - $ref: '#/components/schemas/SecurePasswordStoreApplication'
      - $ref: '#/components/schemas/WsFederationApplication'
    updateDefaultProvisioningConnectionForApplication_request:
      oneOf:
      - $ref: '#/components/schemas/ProvisioningConnectionTokenRequest'
      - $ref: '#/components/schemas/ProvisioningConnectionOauthRequest'
    listFeaturesForApplication_200_response_inner:
      discriminator:
        mapping:
          USER_PROVISIONING: '#/components/schemas/UserProvisioningApplicationFeature'
          INBOUND_PROVISIONING: '#/components/schemas/InboundProvisioningApplicationFeature'
        propertyName: name
      oneOf:
      - $ref: '#/components/schemas/UserProvisioningApplicationFeature'
      - $ref: '#/components/schemas/InboundProvisioningApplicationFeature'
    updateFeatureForApplication_request:
      oneOf:
      - $ref: '#/components/schemas/CapabilitiesObject'
      - $ref: '#/components/schemas/CapabilitiesInboundProvisioningObject'
    uploadApplicationLogo_request:
      properties:
        file:
          description: |
            The image file containing the logo.

            The file must be in PNG, JPG, SVG, or GIF format, and less than one MB in size.
            For best results, use an image with a transparent background and a square dimension of 200 x 200 pixels to prevent upscaling.
          format: binary
          type: string
      required:
      - file
      type: object
    listAuthenticators_200_response_inner:
      discriminator:
        mapping:
          custom_app: '#/components/schemas/AuthenticatorKeyCustomApp'
          duo: '#/components/schemas/AuthenticatorKeyDuo'
          okta_email: '#/components/schemas/AuthenticatorKeyEmail'
          google_otp: '#/components/schemas/AuthenticatorKeyGoogleOtp'
          external_idp: '#/components/schemas/AuthenticatorKeyExternalIdp'
          okta_password: '#/components/schemas/AuthenticatorKeyPassword'
          okta_verify: '#/components/schemas/AuthenticatorKeyOktaVerify'
          onprem_mfa: '#/components/schemas/AuthenticatorKeyOnprem'
          phone_number: '#/components/schemas/AuthenticatorKeyPhone'
          security_key: '#/components/schemas/AuthenticatorKeySecurityKey'
          security_question: '#/components/schemas/AuthenticatorKeySecurityQuestion'
          symantec_vip: '#/components/schemas/AuthenticatorKeySymantecVip'
          smart_card_idp: '#/components/schemas/AuthenticatorKeySmartCard'
          webauthn: '#/components/schemas/AuthenticatorKeyWebauthn'
          yubikey_token: '#/components/schemas/AuthenticatorKeyYubikey'
        propertyName: key
      oneOf:
      - $ref: '#/components/schemas/AuthenticatorKeyCustomApp'
      - $ref: '#/components/schemas/AuthenticatorKeyDuo'
      - $ref: '#/components/schemas/AuthenticatorKeyEmail'
      - $ref: '#/components/schemas/AuthenticatorKeyGoogleOtp'
      - $ref: '#/components/schemas/AuthenticatorKeyExternalIdp'
      - $ref: '#/components/schemas/AuthenticatorKeyPassword'
      - $ref: '#/components/schemas/AuthenticatorKeyOktaVerify'
      - $ref: '#/components/schemas/AuthenticatorKeyOnprem'
      - $ref: '#/components/schemas/AuthenticatorKeyPhone'
      - $ref: '#/components/schemas/AuthenticatorKeySecurityKey'
      - $ref: '#/components/schemas/AuthenticatorKeySecurityQuestion'
      - $ref: '#/components/schemas/AuthenticatorKeySymantecVip'
      - $ref: '#/components/schemas/AuthenticatorKeySmartCard'
      - $ref: '#/components/schemas/AuthenticatorKeyWebauthn'
      - $ref: '#/components/schemas/AuthenticatorKeyYubikey'
    listAuthenticatorMethods_200_response_inner:
      discriminator:
        mapping:
          sms: '#/components/schemas/AuthenticatorMethodSimple'
          voice: '#/components/schemas/AuthenticatorMethodSimple'
          email: '#/components/schemas/AuthenticatorMethodSimple'
          push: '#/components/schemas/AuthenticatorMethodPush'
          signed_nonce: '#/components/schemas/AuthenticatorMethodSignedNonce'
          totp: '#/components/schemas/AuthenticatorMethodTotp'
          otp: '#/components/schemas/AuthenticatorMethodOtp'
          password: '#/components/schemas/AuthenticatorMethodSimple'
          webauthn: '#/components/schemas/AuthenticatorMethodWebAuthn'
          security_question: '#/components/schemas/AuthenticatorMethodSimple'
          idp: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          duo: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
          cert: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AuthenticatorMethodSimple'
      - $ref: '#/components/schemas/AuthenticatorMethodPush'
      - $ref: '#/components/schemas/AuthenticatorMethodSignedNonce'
      - $ref: '#/components/schemas/AuthenticatorMethodTotp'
      - $ref: '#/components/schemas/AuthenticatorMethodOtp'
      - $ref: '#/components/schemas/AuthenticatorMethodWebAuthn'
      - $ref: '#/components/schemas/AuthenticatorMethodWithVerifiableProperties'
    listBehaviorDetectionRules_200_response_inner:
      discriminator:
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BehaviorRuleAnomalousLocation'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousIP'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousDevice'
      - $ref: '#/components/schemas/BehaviorRuleVelocity'
    uploadBrandThemeBackgroundImage_request:
      description: "The file must be in PNG, JPG, or GIF format and less than 2 MB\
        \ in size."
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    uploadBrandThemeFavicon_request:
      description: The file must be in PNG or ICO format and have a 1:1 ratio with
        a maximum dimension of 512 x 512
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    uploadBrandThemeLogo_request:
      description: "The file must be in PNG, JPG, or GIF format and less than 100kB\
        \ in size. For best results use landscape orientation, a transparent background,\
        \ and a minimum size of 300px by 50px to prevent upscaling."
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    listDeviceAssurancePolicies_200_response_inner:
      discriminator:
        mapping:
          WINDOWS: '#/components/schemas/DeviceAssuranceWindowsPlatform'
          MACOS: '#/components/schemas/DeviceAssuranceMacOSPlatform'
          CHROMEOS: '#/components/schemas/DeviceAssuranceChromeOSPlatform'
          IOS: '#/components/schemas/DeviceAssuranceIOSPlatform'
          ANDROID: '#/components/schemas/DeviceAssuranceAndroidPlatform'
        propertyName: platform
      oneOf:
      - $ref: '#/components/schemas/DeviceAssuranceWindowsPlatform'
      - $ref: '#/components/schemas/DeviceAssuranceMacOSPlatform'
      - $ref: '#/components/schemas/DeviceAssuranceChromeOSPlatform'
      - $ref: '#/components/schemas/DeviceAssuranceIOSPlatform'
      - $ref: '#/components/schemas/DeviceAssuranceAndroidPlatform'
    listLogStreams_200_response_inner:
      discriminator:
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAws'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunk'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LogStreamAws'
      - $ref: '#/components/schemas/LogStreamSplunk'
    replaceLogStream_request:
      discriminator:
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAwsPutSchema'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunkPutSchema'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LogStreamAwsPutSchema'
      - $ref: '#/components/schemas/LogStreamSplunkPutSchema'
    listPolicies_200_response_inner:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdpDiscoveryPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
          CONTINUOUS_ACCESS: '#/components/schemas/ContinuousAccessPolicy'
          ENTITY_RISK: '#/components/schemas/EntityRiskPolicy'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessPolicy'
      - $ref: '#/components/schemas/IdpDiscoveryPolicy'
      - $ref: '#/components/schemas/MultifactorEnrollmentPolicy'
      - $ref: '#/components/schemas/OktaSignOnPolicy'
      - $ref: '#/components/schemas/PasswordPolicy'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicy'
      - $ref: '#/components/schemas/ContinuousAccessPolicy'
      - $ref: '#/components/schemas/EntityRiskPolicy'
    listPolicyRules_200_response_inner:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
          IDP_DISCOVERY: '#/components/schemas/IdpDiscoveryPolicyRule'
          CONTINUOUS_ACCESS: '#/components/schemas/ContinuousAccessPolicyRule'
          ENTITY_RISK: '#/components/schemas/EntityRiskPolicyRule'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessPolicyRule'
      - $ref: '#/components/schemas/PasswordPolicyRule'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicyRule'
      - $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      - $ref: '#/components/schemas/OktaSignOnPolicyRule'
      - $ref: '#/components/schemas/IdpDiscoveryPolicyRule'
      - $ref: '#/components/schemas/ContinuousAccessPolicyRule'
      - $ref: '#/components/schemas/EntityRiskPolicyRule'
    listPushProviders_200_response_inner:
      discriminator:
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
        propertyName: providerType
      oneOf:
      - $ref: '#/components/schemas/APNSPushProvider'
      - $ref: '#/components/schemas/FCMPushProvider'
    listSubscriptionsRole_roleRef_parameter:
      oneOf:
      - $ref: '#/components/schemas/RoleType'
      - title: roleId
        type: string
    getSsfStreams_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/StreamConfiguration'
        title: List of Stream Configurations
        type: array
      - $ref: '#/components/schemas/StreamConfiguration'
    listFactors_200_response_inner:
      discriminator:
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          push: '#/components/schemas/UserFactorPush'
          question: '#/components/schemas/UserFactorSecurityQuestion'
          sms: '#/components/schemas/UserFactorSMS'
          token: '#/components/schemas/UserFactorToken'
          token:hardware: '#/components/schemas/UserFactorHardware'
          token:hotp: '#/components/schemas/UserFactorCustomHOTP'
          token:software:totp: '#/components/schemas/UserFactorTOTP'
          u2f: '#/components/schemas/UserFactorU2F'
          web: '#/components/schemas/UserFactorWeb'
          webauthn: '#/components/schemas/UserFactorWebAuthn'
          hotp: '#/components/schemas/UserFactorCustomHOTP'
        propertyName: factorType
      oneOf:
      - $ref: '#/components/schemas/UserFactorCall'
      - $ref: '#/components/schemas/UserFactorEmail'
      - $ref: '#/components/schemas/UserFactorPush'
      - $ref: '#/components/schemas/UserFactorSecurityQuestion'
      - $ref: '#/components/schemas/UserFactorSMS'
      - $ref: '#/components/schemas/UserFactorToken'
      - $ref: '#/components/schemas/UserFactorHardware'
      - $ref: '#/components/schemas/UserFactorCustomHOTP'
      - $ref: '#/components/schemas/UserFactorTOTP'
      - $ref: '#/components/schemas/UserFactorU2F'
      - $ref: '#/components/schemas/UserFactorWeb'
      - $ref: '#/components/schemas/UserFactorWebAuthn'
    resendEnrollFactor_request:
      discriminator:
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          sms: '#/components/schemas/UserFactorSMS'
        propertyName: factorType
      oneOf:
      - $ref: '#/components/schemas/UserFactorCall'
      - $ref: '#/components/schemas/UserFactorEmail'
      - $ref: '#/components/schemas/UserFactorSMS'
    getFactorTransactionStatus_200_response:
      discriminator:
        mapping:
          WAITING: '#/components/schemas/UserFactorPushTransactionWaiting'
          SUCCESS: '#/components/schemas/UserFactorPushTransaction'
          REJECTED: '#/components/schemas/UserFactorPushTransactionRejected'
          TIMEOUT: '#/components/schemas/UserFactorPushTransactionTimeout'
        propertyName: factorResult
      oneOf:
      - $ref: '#/components/schemas/UserFactorPushTransactionWaiting'
      - $ref: '#/components/schemas/UserFactorPushTransaction'
      - $ref: '#/components/schemas/UserFactorPushTransactionRejected'
      - $ref: '#/components/schemas/UserFactorPushTransactionTimeout'
    listNetworkZones_200_response_inner:
      discriminator:
        mapping:
          IP: '#/components/schemas/IPNetworkZone'
          DYNAMIC: '#/components/schemas/DynamicNetworkZone'
          DYNAMIC_V2: '#/components/schemas/EnhancedDynamicNetworkZone'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPNetworkZone'
      - $ref: '#/components/schemas/DynamicNetworkZone'
      - $ref: '#/components/schemas/EnhancedDynamicNetworkZone'
    assignRoleToClient_request:
      oneOf:
      - $ref: '#/components/schemas/StandardRoleAssignmentSchema'
      - $ref: '#/components/schemas/CustomRoleAssignmentSchema'
    ApiToken_network:
      description: The Network Condition of the API Token
      example:
        include:
        - include
        - include
        connection: connection
        exclude:
        - exclude
        - exclude
      properties:
        connection:
          description: The connection type of the Network Condition
          type: string
        include:
          description: List of included IP network zones
          items:
            type: string
          type: array
        exclude:
          description: List of excluded IP network zones
          items:
            type: string
          type: array
      type: object
    AppCustomHrefObject_hints:
      description: Describes allowed HTTP verbs for the `href`
      properties:
        allow:
          items:
            type: string
          type: array
      type: object
    ApplicationFeature__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - readOnly: true
    ApplicationGroupAssignment__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          app:
            $ref: '#/components/schemas/HrefObjectAppLink'
          group:
            $ref: '#/components/schemas/HrefObjectGroupLink'
        type: object
    ApplicationLayout_rule:
      properties:
        effect:
          type: string
        condition:
          $ref: '#/components/schemas/ApplicationLayoutRuleCondition'
      type: object
    ApplicationLayouts__links:
      properties:
        general:
          items:
            $ref: '#/components/schemas/HrefObject'
          type: array
        signOn:
          items:
            $ref: '#/components/schemas/HrefObject'
          type: array
        provisioning:
          items:
            $ref: '#/components/schemas/HrefObject'
          type: array
      readOnly: true
      type: object
    AuthServerLinks_allOf_claims:
      allOf:
      - description: Link to the authorization server claims
      - $ref: '#/components/schemas/HrefObject'
    AuthServerLinks_allOf_policies:
      allOf:
      - description: Link to the authorization server policies
      - $ref: '#/components/schemas/HrefObject'
    AuthServerLinks_allOf_rotateKey:
      allOf:
      - description: Link to the authorization server key rotation
      - $ref: '#/components/schemas/HrefObject'
    AuthServerLinks_allOf_scopes:
      allOf:
      - description: Link to the authorization server scopes
      - $ref: '#/components/schemas/HrefObject'
    AuthenticatorKeyCustomApp_allOf_provider_configuration_apns:
      properties:
        id:
          description: "ID of the APNs (Apple Push Notification Service) [configurations](https://developer.okta.com/docs/reference/api/push-providers/)"
          type: string
        appBundleId:
          description: "AppBundleId of the APNs (Apple Push Notification Service)\
            \ [configurations](https://developer.okta.com/docs/reference/api/push-providers/)"
          type: string
        debugAppBundleId:
          description: "DebugAppBundleId of the APNs (Apple Push Notification Service)\
            \ [configurations](https://developer.okta.com/docs/reference/api/push-providers/)"
          type: string
      type: object
      example: null
    AuthenticatorKeyCustomApp_allOf_provider_configuration_fcm:
      properties:
        id:
          description: "ID of the FCM (Firebase Cloud Messaging Service) [configurations](https://developer.okta.com/docs/reference/api/push-providers/)"
          type: string
      type: object
      example: null
    AuthenticatorKeyCustomApp_allOf_provider_configuration:
      description: The configuration of the provider
      properties:
        apns:
          $ref: '#/components/schemas/AuthenticatorKeyCustomApp_allOf_provider_configuration_apns'
        fcm:
          $ref: '#/components/schemas/AuthenticatorKeyCustomApp_allOf_provider_configuration_fcm'
      type: object
      example: null
    AuthenticatorKeyCustomApp_allOf_provider:
      properties:
        type:
          description: Provider type
          enum:
          - PUSH
          type: string
        configuration:
          $ref: '#/components/schemas/AuthenticatorKeyCustomApp_allOf_provider_configuration'
      type: object
      example: null
    AuthenticatorKeyCustomApp_allOf_settings:
      properties:
        userVerification:
          description: User verification setting
          type: string
          x-okta-known-values:
          - PREFERRED
          - REQUIRED
        appInstanceId:
          description: "The application instance ID. For custom_app, you need to create\
            \ an OIDC native app using the [Apps API](https://developer.okta.com/docs/reference/api/apps/)\
            \ with `Authorization Code` and `Refresh Token` grant types. You can leave\
            \ both `Sign-in redirect URIs` and `Sign-out redirect URIs` as the default\
            \ values."
          type: string
      type: object
      example: null
    AuthenticatorKeyDuo_allOf_provider_configuration_userNameTemplate:
      properties:
        template:
          description: The Duo Security user template name
          type: string
      type: object
      example: null
    AuthenticatorKeyDuo_allOf_provider_configuration:
      properties:
        host:
          description: The Duo Security API hostname
          type: string
        integrationKey:
          description: The Duo Security integration key
          type: string
        secretKey:
          description: The Duo Security secret key
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorKeyDuo_allOf_provider_configuration_userNameTemplate'
      type: object
      example: null
    AuthenticatorKeyDuo_allOf_provider:
      properties:
        type:
          description: Provider type
          enum:
          - DUO
          type: string
        configuration:
          $ref: '#/components/schemas/AuthenticatorKeyDuo_allOf_provider_configuration'
      type: object
      example: null
    AuthenticatorKeyEmail_allOf_settings:
      properties:
        allowedFor:
          description: The allowed types of uses for the Authenticator
          type: string
          x-okta-known-values:
          - any
          - none
          - recovery
          - sso
        tokenLifetimeInMinutes:
          default: 5
          description: Specifies the lifetime of an email token. Default value is
            5 minutes.
          type: number
      type: object
      example: null
    AuthenticatorKeyOktaVerify_allOf_settings:
      properties:
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        userVerification:
          description: "User verification setting. Possible values `DISCOURAGED` (the\
            \ authenticator isn't asked to perform user verification, but may do so\
            \ at its discretion), `PREFERRED` (the client uses an authenticator capable\
            \ of user verification if possible), or `REQUIRED`(the client uses only\
            \ an authenticator capable of user verification)"
          type: string
          x-okta-known-values:
          - DISCOURAGED
          - PREFERRED
          - REQUIRED
        appInstanceId:
          description: The application instance ID
          type: string
      type: object
      example: null
    AuthenticatorKeyPhone_allOf_settings:
      properties:
        allowedFor:
          description: The allowed types of uses for the Authenticator
          type: string
          x-okta-known-values:
          - any
          - none
          - recovery
          - sso
      type: object
      example: null
    AuthenticatorMethodPush_allOf_settings:
      properties:
        algorithms:
          items:
            $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
          type: array
        keyProtection:
          description: Indicates whether you must use a hardware key store
          type: string
          x-okta-known-values:
          - ANY
          - HARDWARE
        transactionTypes:
          items:
            $ref: '#/components/schemas/AuthenticatorMethodTransactionType'
          type: array
      type: object
      example: null
    AuthenticatorMethodSignedNonce_allOf_settings:
      properties:
        algorithms:
          items:
            $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
          type: array
        keyProtection:
          description: Indicates whether you must use a hardware key store
          type: string
          x-okta-known-values:
          - ANY
          - HARDWARE
        showSignInWithOV:
          description: Controls whether to show the Sign in with Okta Verify button
            on the Sign-In Widget
          type: string
          x-okta-known-values:
          - ALWAYS
          - NEVER
      type: object
      example: null
    AuthenticatorMethodTotp_allOf_settings:
      properties:
        timeIntervalInSeconds:
          description: Time interval for TOTP in seconds
          type: integer
        encoding:
          description: The shared secret encoding
          type: string
          x-okta-known-values:
          - base32
          - base64
          - hexadecimal
        algorithm:
          description: HMAC algorithm
          type: string
          x-okta-known-values:
          - HMacSHA1
          - HMacSHA256
          - HMacSHA512
        passCodeLength:
          description: Number of digits in an OTP value
          maximum: 10
          minimum: 6
          multipleOf: 2
          type: integer
      type: object
      example: null
    AuthenticatorMethodWebAuthn_allOf_settings:
      properties:
        aaguidGroups:
          description: <x-lifecycle class="ea"></x-lifecycle> The FIDO2 AAGUID groups
            available to the WebAuthn authenticator
          items:
            $ref: '#/components/schemas/AAGUIDGroupObject'
          type: array
        userVerification:
          description: "User verification setting. Possible values `DISCOURAGED` (the\
            \ authenticator isn't asked to perform user verification, but may do so\
            \ at its discretion), `PREFERRED` (the client uses an authenticator capable\
            \ of user verification if possible), or `REQUIRED`(the client uses only\
            \ an authenticator capable of user verification)"
          type: string
          x-okta-known-values:
          - DISCOURAGED
          - PREFERRED
          - REQUIRED
        attachment:
          description: Method attachment
          type: string
          x-okta-known-values:
          - ANY
          - BUILT_IN
          - ROAMING
      type: object
      example: null
    BundleEntitlement__links:
      allOf:
      - properties:
          values:
            $ref: '#/components/schemas/HrefObject'
    BundleEntitlementsResponse__links:
      anyOf:
      - $ref: '#/components/schemas/LinksSelf'
      - $ref: '#/components/schemas/LinksNext'
      nullable: true
    CaepDeviceComplianceChangeEvent_reason_admin:
      allOf:
      - $ref: '#/components/schemas/SecurityEventReason'
      - description: A localized administrative message intended for logging and auditing.<br>Either
          `reason_admin` or `reason_user` is required.
        type: object
    CaepDeviceComplianceChangeEvent_reason_user:
      allOf:
      - $ref: '#/components/schemas/SecurityEventReason'
      - description: A localized message intended for the end user.<br>Either `reason_admin`
          or `reason_user` is required.
        type: object
    ContinuousAccessPolicyRule_allOf_actions_continuousAccess:
      description: This object contains a `failureActions` array that defines the
        specific action to take when Continuous Access evaluation detects a failure.
      properties:
        failureActions:
          description: An array of objects that define the action. It can be empty
            or contain two `action` value pairs.
          items:
            $ref: '#/components/schemas/ContinuousAccessFailureActionsObject'
          type: array
      type: object
      example: null
    ContinuousAccessPolicyRule_allOf_actions:
      description: The action to take in response to a failure of the reevaluated
        global session policy or authentication polices.
      properties:
        continuousAccess:
          $ref: '#/components/schemas/ContinuousAccessPolicyRule_allOf_actions_continuousAccess'
      type: object
      example: null
    ContinuousAccessPolicyRule_allOf_conditions:
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
      example: null
    ContinuousAccessPolicyRuleRunWorkflow_workflow:
      description: This action runs a workflow
      properties:
        id:
          description: The `id` of the workflow that runs.
          type: integer
      type: object
    ContinuousAccessPolicyRuleTerminateSession_slo:
      properties:
        appSelectionMode:
          description: "This property defines the session to terminate - everyone,\
            \ no one, or a specific app instance."
          enum:
          - SPECIFIC
          - ALL
          - NONE
          type: string
        appInstanceIds:
          description: This property defines the app instance access to terminate.
            Only include this property when `appSelectionMode` is set to `SPECIFIC`.
          items:
            type: string
          type: array
      type: object
    CreateUserRequest_type:
      description: "The ID of the user type. Add this value if you want to create\
        \ a user with a non-default [user type](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/).\n\
        The user type determines which [schema](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)\
        \ applies to that user. After a user has been created, the user can \nonly\
        \ be assigned a different user type by an administrator through a full replacement\
        \ (`PUT`) operation."
      example:
        id: id
      properties:
        id:
          description: The ID of the user type
          type: string
      type: object
    DeviceAssuranceAndroidPlatform_allOf_diskEncryptionType:
      properties:
        include:
          items:
            $ref: '#/components/schemas/DiskEncryptionTypeAndroid'
          type: array
      type: object
      example: null
    DeviceAssuranceAndroidPlatform_allOf_screenLockType:
      properties:
        include:
          items:
            $ref: '#/components/schemas/ScreenLockType'
          type: array
      type: object
      example: null
    DeviceAssuranceChromeOSPlatform_allOf_thirdPartySignalProviders:
      description: Settings for third-party signal providers (based on the `CHROMEOS`
        platform)
      properties:
        dtc:
          $ref: '#/components/schemas/DTCChromeOS'
      type: object
      example: null
    DeviceAssuranceMacOSPlatform_allOf_diskEncryptionType:
      properties:
        include:
          items:
            $ref: '#/components/schemas/DiskEncryptionTypeDesktop'
          type: array
      type: object
      example: null
    DeviceAssuranceMacOSPlatform_allOf_thirdPartySignalProviders:
      description: Settings for third-party signal providers (based on the `MACOS`
        platform)
      properties:
        dtc:
          $ref: '#/components/schemas/DTCMacOS'
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      example: null
    DeviceAssuranceWindowsPlatform_allOf_thirdPartySignalProviders:
      description: Settings for third-party signal providers (based on the `WINDOWS`
        platform)
      properties:
        dtc:
          $ref: '#/components/schemas/DTCWindows'
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      example: null
    DeviceList_allOf__embedded:
      description: List of associated users for the device if the `expand=user` query
        parameter is specified in the request. Use `expand=userSummary` to get only
        a summary of each associated user for the device.
      properties:
        users:
          description: Users for the device
          items:
            $ref: '#/components/schemas/DeviceUser'
          type: array
      readOnly: true
      type: object
      example: null
    DomainLinks_allOf_brand:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: The associated brand
    DomainLinks_allOf_certificate:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: The certificate link references the domain certificate
    DomainLinks_allOf_verify:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: The verify link verifies the domain and transitions the domain
          status to `VERIFIED`
    EmailCustomization_allOf__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          self:
            $ref: '#/components/schemas/HrefObject'
          template:
            $ref: '#/components/schemas/HrefObject'
          preview:
            $ref: '#/components/schemas/HrefObject'
          test:
            $ref: '#/components/schemas/HrefObject'
    EmailDefaultContent_allOf__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          template:
            $ref: '#/components/schemas/HrefObject'
          preview:
            $ref: '#/components/schemas/HrefObject'
          test:
            $ref: '#/components/schemas/HrefObject'
      type: object
    EmailDomainResponseWithEmbedded__embedded:
      example:
        brands:
        - agreeToCustomPrivacyPolicy: true
          defaultApp:
            appInstanceId: appInstanceId
            appLinkName: appLinkName
            classicApplicationUri: classicApplicationUri
          isDefault: true
          removePoweredByOkta: false
          name: name
          id: id
          emailDomainId: emailDomainId
          locale: locale
          customPrivacyPolicyUrl: customPrivacyPolicyUrl
        - agreeToCustomPrivacyPolicy: true
          defaultApp:
            appInstanceId: appInstanceId
            appLinkName: appLinkName
            classicApplicationUri: classicApplicationUri
          isDefault: true
          removePoweredByOkta: false
          name: name
          id: id
          emailDomainId: emailDomainId
          locale: locale
          customPrivacyPolicyUrl: customPrivacyPolicyUrl
      properties:
        brands:
          items:
            $ref: '#/components/schemas/Brand'
          type: array
      readOnly: true
      type: object
    EmailPreview__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          contentSource:
            $ref: '#/components/schemas/HrefObject'
          template:
            $ref: '#/components/schemas/HrefObject'
          test:
            $ref: '#/components/schemas/HrefObject'
          defaultContent:
            $ref: '#/components/schemas/HrefObject'
    EmailSettingsResponse__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          self:
            $ref: '#/components/schemas/HrefObject'
          template:
            $ref: '#/components/schemas/HrefObject'
    EmailTemplateResponse__embedded:
      example:
        customizationCount: 0
        settings:
          _links: null
          recipients: ALL_USERS
      properties:
        settings:
          $ref: '#/components/schemas/EmailSettingsResponse'
        customizationCount:
          type: integer
      readOnly: true
      type: object
    EmailTemplateResponse__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          settings:
            $ref: '#/components/schemas/HrefObject'
          defaultContent:
            $ref: '#/components/schemas/HrefObject'
          customizations:
            $ref: '#/components/schemas/HrefObject'
          test:
            $ref: '#/components/schemas/HrefObject'
    EnhancedDynamicNetworkZone_allOf_asns:
      description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>The
        list of ASNs associated with an Enhanced Dynamic Network Zone
      properties:
        include:
          description: An array of ASNs to include for an Enhanced Dynamic Network
            Zone
          items:
            type: string
          type: array
      type: object
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      example: null
    EnhancedDynamicNetworkZone_allOf_locations:
      description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>The
        list of geolocations to include or exclude for an Enhanced Dynamic Network
        Zone
      properties:
        include:
          description: An array of geolocations to include for an Enhanced Dynamic
            Network Zone
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          maximum: 75
          nullable: true
          type: array
        exclude:
          description: An array of geolocations to exclude for an Enhanced Dynamic
            Network Zone
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          maximum: 75
          nullable: true
          type: array
      type: object
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      example: null
    EnhancedDynamicNetworkZone_allOf_ipServiceCategories:
      description: "<div class=\"x-lifecycle-container\"><x-lifecycle class=\"ea\"\
        ></x-lifecycle></div>IP services, such as a proxy or VPN, to include or exclude\
        \ for an Enhanced Dynamic Network Zone"
      properties:
        include:
          description: IP services to include for an Enhanced Dynamic Network Zone
          items:
            $ref: '#/components/schemas/IPServiceCategory'
          maximum: 75
          type: array
        exclude:
          description: IP services to exclude for an Enhanced Dynamic Network Zone
          items:
            $ref: '#/components/schemas/IPServiceCategory'
          maximum: 75
          type: array
      type: object
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      example: null
    EntityRiskPolicyRule_allOf_actions_entityRisk:
      description: The object that contains the `actions` array
      properties:
        actions:
          description: The `entityRisk` object's `actions` array can be empty or contain
            one of two `action` object value pairs. This object determines the specific
            response to a risk event.
          items:
            $ref: '#/components/schemas/EntityRiskPolicyRuleActionsObject'
          type: array
      type: object
      example: null
    EntityRiskPolicyRule_allOf_actions:
      description: The action to take based on the risk event
      properties:
        entityRisk:
          $ref: '#/components/schemas/EntityRiskPolicyRule_allOf_actions_entityRisk'
      type: object
      example: null
    EntityRiskPolicyRule_allOf_conditions_riskDetectionTypes:
      description: "An object that references detected risk events. This object can\
        \ have an `include` parameter or an `exclude` parameter, but not both."
      properties:
        exclude:
          description: An array of detected risk events to exclude in the entity policy
            rule
          items:
            $ref: '#/components/schemas/DetectedRiskEvents'
          type: array
        include:
          description: An array of detected risk events to include in the entity policy
            rule
          items:
            $ref: '#/components/schemas/DetectedRiskEvents'
          type: array
      type: object
      example: null
    EntityRiskPolicyRule_allOf_conditions_EntityRisk:
      description: The risk score level of the entity risk policy rule
      properties:
        level:
          enum:
          - ANY
          - LOW
          - MEDIUM
          - HIGH
          type: string
      type: object
      example: null
    EntityRiskPolicyRule_allOf_conditions:
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        riskDetectionTypes:
          $ref: '#/components/schemas/EntityRiskPolicyRule_allOf_conditions_riskDetectionTypes'
        EntityRisk:
          $ref: '#/components/schemas/EntityRiskPolicyRule_allOf_conditions_EntityRisk'
      type: object
      example: null
    EventHook__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          deactivate:
            $ref: '#/components/schemas/HrefObject'
          verify:
            $ref: '#/components/schemas/HrefObject'
    Feature__links_allOf_dependents:
      description: Link to feature dependents
      properties:
        href:
          description: Link URI
          readOnly: true
          type: string
      readOnly: true
      type: object
    Feature__links_allOf_dependencies:
      description: Link to feature dependencies
      properties:
        href:
          description: Link URI
          readOnly: true
          type: string
      readOnly: true
      type: object
    Feature__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          dependents:
            $ref: '#/components/schemas/Feature__links_allOf_dependents'
          dependencies:
            $ref: '#/components/schemas/Feature__links_allOf_dependencies'
    GovernanceBundle__links:
      allOf:
      - properties:
          entitlements:
            $ref: '#/components/schemas/HrefObject'
    GovernanceBundlesResponse__links:
      anyOf:
      - $ref: '#/components/schemas/LinksSelf'
      - $ref: '#/components/schemas/LinksNext'
    Group__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          apps:
            $ref: '#/components/schemas/HrefObject'
          logo:
            items:
              $ref: '#/components/schemas/HrefObject'
            type: array
          source:
            $ref: '#/components/schemas/HrefObject'
          users:
            $ref: '#/components/schemas/HrefObject'
    IamRole__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          permissions:
            $ref: '#/components/schemas/HrefObject'
    IdentityProvider__links:
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          acs:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: SAML 2.0 Assertion Consumer Service URL for the Okta SP
          authorize:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: OAuth 2.0 authorization endpoint for the IdP OAuth 2.0 Authorization
              Code flow
          clientRedirectUri:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: Redirect URI for the OAuth 2.0 Authorization Code flow
          metadata:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: "Federation metadata document for the IdP (for example: SAML\
              \ 2.0 Metadata)"
          users:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: IdP users
          deactivate:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: Deactivate IdP
          activate:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: Activate IdP
          keys:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: IdP keys
      type: object
    IdpPolicyRuleAction_idp:
      properties:
        providers:
          description: List of configured Identity Providers that a given Rule can
            route to. Ability to define multiple providers is a part of the Okta Identity
            Engine. This allows users to choose a Provider when they sign in. Contact
            support for information on the Identity Engine.
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
          type: array
        idpSelectionType:
          type: string
          x-okta-known-values:
          - DYNAMIC
          - SPECIFIC
        matchCriteria:
          description: Required if `idpSelectionType` is set to `DYNAMIC`
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionMatchCriteria'
          type: array
      type: object
    ImportScheduleObject_fullImport:
      allOf:
      - $ref: '#/components/schemas/ImportScheduleSettings'
      - description: Determines the full import schedule
    ImportScheduleObject_incrementalImport:
      allOf:
      - $ref: '#/components/schemas/ImportScheduleSettings'
      - description: Determines the incremental import schedule
    InlineHookRequestObject_request_url:
      description: The URL of the API endpoint
      properties:
        value:
          description: The URL value of the API endpoint
          type: string
      type: object
    InlineHookRequestObject_request:
      description: The API request that triggered the inline hook
      properties:
        id:
          description: The unique identifier that Okta assigned to the API request
          type: string
        method:
          description: The HTTP request method of the API request
          type: string
        url:
          $ref: '#/components/schemas/InlineHookRequestObject_request_url'
        ipAddress:
          description: The IP address of the client that made the API request
          type: string
      type: object
    LinksActivate_activate:
      allOf:
      - description: "Activates an enrolled Factor. See [Activate a Factor](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/activateFactor)"
      - $ref: '#/components/schemas/HrefObject'
    LinksCancel_cancel:
      allOf:
      - description: Cancels a `push` factor challenge with a `WAITING` status.
      - $ref: '#/components/schemas/HrefObject'
    LinksDeactivate_deactivate:
      allOf:
      - description: "Deactivates the Factor. See [Unenroll a Factor](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/unenrollFactor)"
      - $ref: '#/components/schemas/HrefObject'
    LinksEnroll_enroll:
      allOf:
      - description: "Enrolls a supported Factor. See [Enroll a Factor](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/enrollFactor)"
      - $ref: '#/components/schemas/HrefObject'
    LinksFactor_factor:
      allOf:
      - description: Link to the Factor resource
      - $ref: '#/components/schemas/HrefObject'
    LinksPoll_poll:
      allOf:
      - description: Polls the Factor resource for status information. Always use
          the `poll` link instead of manually constructing your own URL.
      - $ref: '#/components/schemas/HrefObject'
    LinksQrcode_qrcode:
      allOf:
      - description: QR code that encodes the push activation code needed for enrollment
          on the device
      - $ref: '#/components/schemas/HrefObject'
    LinksQuestions_question:
      allOf:
      - description: "Lists all supported security questions. See [List all Supported\
          \ Security Questions](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/listSupportedSecurityQuestions)"
      - $ref: '#/components/schemas/HrefObject'
    LinksResend_resend:
      allOf:
      - description: "Resends the factor enrollment challenge. See [Resend a Factor\
          \ enrollment](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/resendEnrollFactor)"
      - $ref: '#/components/schemas/HrefObject'
    LinksSend_send:
      allOf:
      - description: Sends an activation link through email or sms for users who can't
          scan the QR code
      - $ref: '#/components/schemas/HrefObject'
    LinksUser_user:
      allOf:
      - description: Returns information on the specified user
      - $ref: '#/components/schemas/HrefObject'
    LinksVerify_verify:
      allOf:
      - description: "Verifies the Factor resource. See [Verify a Factor](/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor)"
      - $ref: '#/components/schemas/HrefObject'
    LogTarget_changeDetails:
      description: |-
        Details on the target's changes. Not all event types support the `changeDetails` property, and not all
        target objects contain the `changeDetails` property.You must include a property within the object. When
        querying on this property, you can't search on the `to` or `from` objects alone. You must include a
        property within the object.
      example:
        from:
          key: "{}"
        to:
          key: "{}"
      properties:
        from:
          additionalProperties:
            properties: {}
            type: object
          description: The original properties of the target
          type: object
        to:
          additionalProperties:
            properties: {}
            type: object
          description: The updated properties of the target
          type: object
      type: object
    MultifactorEnrollmentPolicyAuthenticatorSettings_constraints:
      minimum: 0
      nullable: true
      properties:
        aaguidGroups:
          items:
            type: string
            uniqueItems: true
          type: array
      type: object
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    MultifactorEnrollmentPolicyAuthenticatorSettings_enroll:
      properties:
        self:
          type: string
          x-okta-known-values:
          - NOT_ALLOWED
          - OPTIONAL
          - REQUIRED
      type: object
    OAuth2RefreshToken__embedded:
      description: The embedded resources related to the object if the `expand` query
        parameter is specified
      example:
        scopes:
        - _links:
            scope: ""
          displayName: displayName
          name: name
          description: description
          id: id
        - _links:
            scope: ""
          displayName: displayName
          name: name
          description: description
          id: id
      properties:
        scopes:
          description: The scope objects attached to the Token
          items:
            $ref: '#/components/schemas/OAuth2RefreshTokenScope'
          type: array
      readOnly: true
      type: object
    OAuth2RefreshToken__links_allOf_revoke_allOf_hints:
      properties:
        allow:
          items:
            default: DELETE
            enum:
            - DELETE
            type: string
          type: array
    OAuth2RefreshToken__links_allOf_revoke:
      allOf:
      - $ref: '#/components/schemas/AppCustomHrefObject'
      - properties:
          hints:
            $ref: '#/components/schemas/OAuth2RefreshToken__links_allOf_revoke_allOf_hints'
      description: Link to revoke the refresh Token
    OAuth2RefreshToken__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          app:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the app resource
          revoke:
            $ref: '#/components/schemas/OAuth2RefreshToken__links_allOf_revoke'
          client:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the client resource
          user:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the user resource
          authorizationServer:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the Token authorization server resource
        type: object
    OAuth2RefreshTokenScope__links:
      description: "Specifies link relations (see [Web Linking](https://www.rfc-editor.org/rfc/rfc8288))\
        \ available for the current status of an application using the [JSON Hypertext\
        \ Application Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)\
        \ specification. This object is used for dynamic discovery of related resources\
        \ and lifecycle operations."
      example:
        scope: ""
      properties:
        scope:
          allOf:
          - $ref: '#/components/schemas/AppCustomHrefObject'
          description: Link to Scope resource
      type: object
    OAuth2ScopeConsentGrant__embedded_scope:
      example:
        id: okta.users.read
      properties:
        id:
          description: The name of the Okta scope for which consent is granted
          example: okta.users.read
          type: string
      type: object
    OAuth2ScopeConsentGrant__embedded:
      description: Embedded resources related to the Grant
      example:
        scope:
          id: okta.users.read
      properties:
        scope:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrant__embedded_scope'
      readOnly: true
      type: object
    OAuth2ScopeConsentGrant__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          app:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the app resource
          client:
            allOf:
            - $ref: '#/components/schemas/AppCustomHrefObject'
            description: Link to the client resource
        type: object
      - readOnly: true
    OSVersion_dynamicVersionRequirement:
      description: <div class="x-lifecycle-container"><x-lifecycle class="ea"></x-lifecycle></div>Contains
        the necessary properties for a dynamic version requirement
      properties:
        type:
          description: Indicates the type of the dynamic OS version requirement
          enum:
          - MINIMUM
          - EXACT
          - EXACT_ANY_SUPPORTED
          type: string
          x-enumDescriptions:
            MINIMUM: The device version must be equal to or newer than the dynamically
              determined version. `distanceFromLatestMajor` must be specified for
              this type.
            EXACT: The device version must be on the same major version as the dynamically
              determined version. `distanceFromLatestMajor` must be specified for
              this type.
            EXACT_ANY_SUPPORTED: The device version must be on a major version which
              is supported. You can't specify `distanceFromLatestMajor` for this type.
        distanceFromLatestMajor:
          description: Indicates the distance from the latest major version
          maximum: 1
          minimum: 0
          type: integer
        latestSecurityPatch:
          description: Indicates whether the device needs to be on the latest security
            patch
          type: boolean
      type: object
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    OSVersionConstraint_dynamicVersionRequirement:
      description: Contains the necessary properties for a dynamic Windows version
        requirement
      properties:
        type:
          description: Indicates the type of the dynamic Windows version requirement
          enum:
          - MINIMUM
          - EXACT
          - EXACT_ANY_SUPPORTED
          - NOT_ALLOWED
          type: string
          x-enumDescriptions:
            MINIMUM: The device version must be equal to or newer than the dynamically
              determined Windows version. `distanceFromLatestMajor` must be specified
              for this type.
            EXACT: The device version must be on the same major version as the dynamically
              determined Windows version. `distanceFromLatestMajor` must be specified
              for this type.
            EXACT_ANY_SUPPORTED: The device version must be on a Windows major version
              which is supported. You can't specify `distanceFromLatestMajor` for
              this type.
            NOT_ALLOWED: The device version isn't allowed. You can't specify `distanceFromLatestMajor`
              or `latestSecurityPatch` for this type.
        distanceFromLatestMajor:
          description: Indicates the distance from the latest Windows major version
          maximum: 1
          minimum: 0
          type: integer
        latestSecurityPatch:
          description: Indicates whether the policy requires Windows devices to be
            on the latest security patch
          type: boolean
      type: object
    OperationResponse_assignmentOperation_configuration_actions_assignUserToRealm:
      example:
        realmId: realmId
      properties:
        realmId:
          type: string
      type: object
    OperationResponse_assignmentOperation_configuration_actions:
      example:
        assignUserToRealm:
          realmId: realmId
      properties:
        assignUserToRealm:
          $ref: '#/components/schemas/OperationResponse_assignmentOperation_configuration_actions_assignUserToRealm'
      type: object
    OperationResponse_assignmentOperation_configuration:
      example:
        name: name
        id: id
        conditions:
          expression:
            value: value
          profileSourceId: profileSourceId
        actions:
          assignUserToRealm:
            realmId: realmId
      properties:
        actions:
          $ref: '#/components/schemas/OperationResponse_assignmentOperation_configuration_actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        id:
          type: string
        name:
          type: string
      type: object
    OperationResponse_assignmentOperation:
      example:
        configuration:
          name: name
          id: id
          conditions:
            expression:
              value: value
            profileSourceId: profileSourceId
          actions:
            assignUserToRealm:
              realmId: realmId
      properties:
        configuration:
          $ref: '#/components/schemas/OperationResponse_assignmentOperation_configuration'
      type: object
    OptInStatusResponse__links:
      allOf:
      - properties:
          optInStatus:
            $ref: '#/components/schemas/HrefObject'
    OrgCAPTCHASettings__links:
      description: Link relations for the CAPTCHA settings object
      example:
        self:
          templated: true
          hints:
            allow:
            - null
            - null
          name: name
          href: href
          type: type
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    PageRoot__embedded:
      example:
        preview:
          pageContent: pageContent
        default:
          pageContent: pageContent
        customized:
          pageContent: pageContent
        previewUrl: https://openapi-generator.tech
        customizedUrl: https://openapi-generator.tech
      properties:
        default:
          $ref: '#/components/schemas/CustomizablePage'
        customized:
          $ref: '#/components/schemas/CustomizablePage'
        customizedUrl:
          format: uri
          type: string
        preview:
          $ref: '#/components/schemas/CustomizablePage'
        previewUrl:
          format: uri
          type: string
      readOnly: true
      type: object
    PageRoot__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          default:
            $ref: '#/components/schemas/HrefObject'
          customized:
            $ref: '#/components/schemas/HrefObject'
          preview:
            $ref: '#/components/schemas/HrefObject'
    PasswordImportRequestData_action:
      description: This object specifies the default action Okta is set to take. Okta
        takes this action if your external service sends an empty HTTP 204 response.
        You can override the default action by returning a commands object in your
        response specifying the action to take.
      properties:
        credential:
          default: UNVERIFIED
          description: "The status of the user credential, either `UNVERIFIED` or\
            \ `VERIFIED`"
          type: string
      type: object
    PasswordImportRequestData_context_credential:
      properties:
        username:
          description: The `username` that the end user supplied when attempting to
            sign in to Okta.
          type: string
        password:
          description: The `password` that the end user supplied when attempting to
            sign in to Okta.
          type: string
      type: object
    PasswordImportRequestData_context:
      properties:
        request:
          $ref: '#/components/schemas/InlineHookRequestObject'
        credential:
          $ref: '#/components/schemas/PasswordImportRequestData_context_credential'
      type: object
    PasswordImportResponse_commands_inner_value:
      description: |-
        The parameter value of the command.
        * To indicate that the supplied credentials are valid, supply a type property set to `com.okta.action.update` together with a value property set to `{"credential": "VERIFIED"}`.
        * To indicate that the supplied credentials are invalid, supply a type property set to `com.okta.action.update` together with a value property set to `{"credential": "UNVERIFIED"}`.
          Alternatively, you can send an empty response (`204`). By default, the `data.action.credential` is always set to `UNVERIFIED`.
      properties:
        credential:
          enum:
          - UNVERIFIED
          - VERIFIED
          type: string
      type: object
    PasswordImportResponse_commands_inner:
      properties:
        type:
          description: "The location where you specify the command. For the password\
            \ import inline hook, there's only one command, `com.okta.action.update`."
          type: string
        value:
          $ref: '#/components/schemas/PasswordImportResponse_commands_inner_value'
      type: object
    PerClientRateLimitSettings_useCaseModeOverrides:
      description: A map of Per-Client Rate Limit Use Case to the applicable PerClientRateLimitMode.
        Overrides the `defaultMode` property for the specified use cases.
      example:
        LOGIN_PAGE: LOGIN_PAGE
        OIE_APP_INTENT: OIE_APP_INTENT
        OAUTH2_AUTHORIZE: OAUTH2_AUTHORIZE
      properties:
        LOGIN_PAGE:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENFORCE
          - PREVIEW
        OAUTH2_AUTHORIZE:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENFORCE
          - PREVIEW
        OIE_APP_INTENT:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENFORCE
          - PREVIEW
      type: object
    Permission__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          role:
            $ref: '#/components/schemas/HrefObject'
    PolicyContext_device:
      example:
        managed: true
        registered: true
        platform: platform
        assuranceId: assuranceId
      properties:
        platform:
          description: "The platform of the device, for example, IOS."
          type: string
        registered:
          description: If the device is registered
          type: boolean
        managed:
          description: If the device is managed
          type: boolean
        assuranceId:
          description: The device assurance policy ID for the simulation
          type: string
      type: object
    PolicyContext_groups:
      description: "An array of Group IDs for the simulate operation. Only user IDs\
        \ or Group IDs are allowed, not both."
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
            uniqueItems: true
          type: array
      required:
      - ids
      type: object
    PolicyContext_risk:
      description: The risk rule condition level
      example:
        level: LOW
      properties:
        level:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
      type: object
    PolicyContext_user:
      description: "The user ID for the simulate operation. Only user IDs or Group\
        \ IDs are allowed, not both."
      example:
        id: id
      properties:
        id:
          description: The unique ID number for the user.
          type: string
      required:
      - id
      type: object
    PolicyContext_zones:
      description: The zone ID under the network rule condition.
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          items:
            type: string
          type: array
      type: object
    PolicyMapping__links_allOf_application:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: Link to the mapped application
    PolicyMapping__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          application:
            $ref: '#/components/schemas/PolicyMapping__links_allOf_application'
    ResourceSelectorResponseSchema__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          resources:
            $ref: '#/components/schemas/HrefObject'
    ResourceSelectorResponseWithoutSelfLinkSchema__links:
      allOf:
      - properties:
          resources:
            $ref: '#/components/schemas/HrefObject'
    ResourceSet__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          resources:
            $ref: '#/components/schemas/HrefObject'
          bindings:
            $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingMembers__links:
      allOf:
      - $ref: '#/components/schemas/LinksNext'
      - properties:
          binding:
            $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingResponse__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          bindings:
            $ref: '#/components/schemas/HrefObject'
          resource-set:
            $ref: '#/components/schemas/HrefObject'
    ResourceSetBindingRole__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          members:
            $ref: '#/components/schemas/HrefObject'
    ResourceSetResources__links:
      allOf:
      - $ref: '#/components/schemas/LinksNext'
      - properties:
          resource-set:
            $ref: '#/components/schemas/HrefObject'
    Saml_acs_inner:
      properties:
        index:
          description: Index of ACS URL. You can't reuse the same index in the ACS
            URL array.
          example: 0
          maximum: 65535
          minimum: 0
          type: number
        url:
          description: Assertion Consumer Service (ACS) URL
          example: "https://${org.subdomain}.example.com/saml/login"
          format: uri
          maxLength: 1024
          type: string
      type: object
    SecurityEventsProviderRequest_settings:
      description: Information about the Security Events Provider for signal ingestion
      oneOf:
      - $ref: '#/components/schemas/SecurityEventsProviderSettingsSSFCompliant'
      - $ref: '#/components/schemas/SecurityEventsProviderSettingsNonSSFCompliant'
      type: object
    SignInPage_allOf_widgetCustomizations:
      properties:
        signInLabel:
          type: string
        usernameLabel:
          type: string
        usernameInfoTip:
          type: string
        passwordLabel:
          type: string
        passwordInfoTip:
          type: string
        showPasswordVisibilityToggle:
          type: boolean
        showUserIdentifier:
          type: boolean
        forgotPasswordLabel:
          type: string
        forgotPasswordUrl:
          type: string
        unlockAccountLabel:
          type: string
        unlockAccountUrl:
          type: string
        helpLabel:
          type: string
        helpUrl:
          type: string
        customLink1Label:
          type: string
        customLink1Url:
          type: string
        customLink2Label:
          type: string
        customLink2Url:
          type: string
        authenticatorPageCustomLinkLabel:
          type: string
        authenticatorPageCustomLinkUrl:
          type: string
        classicRecoveryFlowEmailOrUsernameLabel:
          type: string
        widgetGeneration:
          type: string
          x-okta-known-values:
          - G2
          - G3
      type: object
      example: null
    SimulatePolicyEvaluations_evaluated:
      description: A list of evaluated but not matched policies and rules
      example:
        policies:
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
      properties:
        policies:
          items:
            $ref: '#/components/schemas/SimulateResultPoliciesItems'
          type: array
      type: object
    SimulatePolicyEvaluations_undefined:
      description: A list of undefined but not matched policies and rules
      example:
        policies:
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
        - name: name
          rules:
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          - name: name
            id: id
            conditions:
            - type: type
              status: status
            - type: type
              status: status
            status: status
          id: id
          conditions:
          - type: type
            status: status
          - type: type
            status: status
          status: status
      properties:
        policies:
          items:
            $ref: '#/components/schemas/SimulateResultPoliciesItems'
          type: array
      type: object
    SourceLinks_allOf_schema:
      allOf:
      - $ref: '#/components/schemas/HrefObject'
      - description: The associated schema
    StreamConfiguration_aud:
      description: |-
        The audience used in the SET. This value is set as `aud` in the claim.

        A read-only parameter that is set by the transmitter. If this parameter is included in the request, the value must match the expected value from the transmitter.
      example: https://example.com
      oneOf:
      - example: https://example.com
        format: uri
        type: string
      - items:
          example: https://example.com
          format: uri
          type: string
        type: array
    SubmissionResponse_config_inner:
      properties:
        label:
          description: Display name of the variable in the Admin Console
          example: Subdomain
          type: string
        name:
          description: Name of the variable
          example: subdomain
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    Subscription__links:
      description: Discoverable resources related to the subscription
      example:
        self:
          templated: true
          hints:
            allow:
            - null
            - null
          name: name
          href: href
          type: type
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    SupportedMethods_settings:
      example:
        algorithms:
        - null
        - null
        transactionTypes:
        - null
        - null
        keyProtection: keyProtection
      properties:
        keyProtection:
          description: Indicates whether you must use a hardware key store
          type: string
          x-okta-known-values:
          - ANY
          - HARDWARE
        algorithms:
          description: The encryption algorithm for this authenticator method
          items:
            $ref: '#/components/schemas/AuthenticatorMethodAlgorithm'
          type: array
        transactionTypes:
          description: The transaction type for this authenticator method
          items:
            $ref: '#/components/schemas/AuthenticatorMethodTransactionType'
          type: array
      type: object
    TelephonyRequestData_context:
      properties:
        request:
          $ref: '#/components/schemas/InlineHookRequestObject'
      type: object
    TelephonyRequestData_messageProfile:
      description: Message profile specifies information about the telephony (sms/voice)
        message to be sent to the Okta user
      properties:
        msgTemplate:
          description: Default or Okta org configured sms or voice message template
          type: string
        phoneNumber:
          description: The Okta's user's phone number
          type: string
        otpExpires:
          description: The time when OTP expires
          type: string
        deliveryChannel:
          description: The channel for OTP delivery - SMS or voice
          type: string
        otpCode:
          description: The OTP code requested by the Okta user
          type: string
        locale:
          description: The locale associated with the Okta user
          type: string
      type: object
    TelephonyRequestData_userProfile:
      description: User profile specifies information about the Okta user
      properties:
        firstName:
          description: The user's first name
          type: string
        lastName:
          description: The user's last name
          type: string
        login:
          description: The user's Okta login
          type: string
        userId:
          description: The user's Okta user ID
          type: string
      type: object
    TelephonyResponse_commands_inner_value_inner:
      properties:
        status:
          description: Status of telephony callout
          enum:
          - SUCCESSFUL
          - PENDING
          - FAILED
          type: string
          x-enumDescriptions:
            SUCCESSFUL: External web service was able to deliver the OTP to the Requester.
            PENDING: External web service wasn't able to confirm delivery of the OTP
              to the Requester.
            FAILED: External web service was unable to deliver the OTP to the Requester.
        provider:
          description: Telephony provider for sms/voice
          type: string
        transactionId:
          description: Transaction ID for sms/voice
          type: string
        transactionMetadata:
          description: Any relevant metadata for the telephony transaction
          type: string
      type: object
    TelephonyResponse_commands_inner:
      properties:
        type:
          description: "The location where you specify the command. For the Telephony\
            \ inline hook, there's only one command, `com.okta.telephony.action`."
          type: string
        value:
          description: "The status of the telephony operation along with optional\
            \ additional information about the provider, transaction ID and any other\
            \ transaction metadata."
          items:
            $ref: '#/components/schemas/TelephonyResponse_commands_inner_value_inner'
          type: array
      type: object
    TestInfo_oidcTestConfiguration:
      description: OIDC test details
      properties:
        idp:
          description: "Read only.<br>Indicates if your integration supports IdP-initiated\
            \ sign-in flows. If [`sso.oidc.initiateLoginUri`](/openapi/okta-management/management/tag/YourOinIntegrations/#tag/YourOinIntegrations/operation/createSubmission!path=sso/oidc/initiateLoginUri&t=request)\
            \ is specified, this property is set to `true`. If [`sso.oidc.initiateLoginUri`](/openapi/okta-management/management/tag/YourOinIntegrations/#tag/YourOinIntegrations/operation/createSubmission!path=sso/oidc/initiateLoginUri&t=request)\
            \ isn't set for the integration submission, this property is set to `false`"
          readOnly: true
          type: boolean
        sp:
          description: Read only.<br>Indicates if your integration supports SP-initiated
            sign-in flows and is always set to `true` for OIDC SSO
          readOnly: true
          type: boolean
        jit:
          description: Indicates if your integration supports Just-In-Time (JIT) provisioning
          type: boolean
        spInitiateUrl:
          description: URL for SP-initiated sign-in flows (required if `sp = true`)
          example: https://test.example.com/strawberry/oidc/sp-init
          format: uri
          maxLength: 512
          type: string
      required:
      - spInitiateUrl
      type: object
    TestInfo_samlTestConfiguration:
      description: SAML test details
      properties:
        idp:
          description: Indicates if your integration supports IdP-initiated sign-in
          type: boolean
        sp:
          description: Indicates if your integration supports SP-initiated sign-in
          type: boolean
        jit:
          description: Indicates if your integration supports Just-In-Time (JIT) provisioning
          type: boolean
        spInitiateUrl:
          description: URL for SP-initiated sign-in flows (required if `sp = true`)
          example: https://test.example.com/strawberry/saml/sp-init
          format: uri
          maxLength: 512
          type: string
        spInitiateDescription:
          description: Instructions on how to sign in to your app using the SP-initiated
            flow (required if `sp = true`)
          example: Go to your app URL from a browser and enter your username
          maxLength: 2048
          type: string
      required:
      - spInitiateUrl
      type: object
    TestInfo_testAccount:
      description: "An account on a test instance of your app with admin privileges.\
        \ A test admin account is required by Okta for integration testing. During\
        \ OIN QA testing, an Okta analyst uses this admin account to configure your\
        \ app for the various test case flows."
      properties:
        url:
          description: The sign-in URL to a test instance of your app
          example: https://example.com/strawberry/login
          format: uri
          maxLength: 512
          type: string
        username:
          description: The username for your app admin account
          example: test@example.com
          maxLength: 255
          type: string
        password:
          description: The password for your app admin account
          example: sUperP@ssw0rd
          maxLength: 255
          type: string
        instructions:
          description: "Additional instructions to test the app integration, including\
            \ instructions for obtaining test accounts"
          example: Go to your app URL from a browser and enter your credentials
          maxLength: 2048
          type: string
      required:
      - password
      - url
      - username
      type: object
    UIElement_options:
      description: UI Schema element options object
      example:
        format: text
      properties:
        format:
          description: Specifies how the input appears
          enum:
          - text
          - radio
          - select
          - checkbox
          - radio_yes_no
          - radio_true_false
          type: string
          x-enumDescriptions:
            text: The default format for the majority of property types.
            radio: Radio button options. This option is only available for `string`
              data types with an `enum` or `one of` constraint.
            select: Displays input as a dropdown list. This option is only available
              for the `country-code` data type or a string data type with an enum
              or one of constraint.
            checkbox: Displays input as a checkbox. This option is only available
              for Boolean data types.
            radio_yes_no: "Displays input as two radio buttons, one with the option\
              \ `yes` and the other `no`. This option is only available for Boolean\
              \ data types."
            radio_true_false: "Displays input as two radio buttons, one with the option\
              \ `true` and the other `false`. This option is only available for Boolean\
              \ data types."
      type: object
    User_type:
      description: |-
        The user type that determines the schema for the user's profile. The `type` property is a map that identifies
        the [User Types](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/#tag/UserType)).
        Currently it contains a single element, `id`. It can be specified when creating a new user, and may be updated by an administrator on a full replace of an existing user (but not a partial update).
      example:
        id: id
      properties:
        id:
          description: The ID of the user type
          type: string
      type: object
    User__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - properties:
          self:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to the individual user
          activate:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to activate the user
          resetPassword:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to reset the user's password
          resetFactors:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to reset the user's factors
          expirePassword:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to expire the user's password
          forgotPassword:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to initiate a forgot password operation
          changeRecoveryQuestion:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to change the user's recovery question
          deactivate:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to deactivate a user
          reactivate:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to reactivate the user
          changePassword:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to change the user's password
          schema:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to the user's profile schema
          suspend:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to suspend the user
          unsuspend:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to unsuspend the user
          unlock:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to unlock the locked-out user
          type:
            allOf:
            - $ref: '#/components/schemas/HrefObject'
            description: URL to the user type
        type: object
      - readOnly: true
      description: |-
        Specifies link relations (see [Web Linking](https://datatracker.ietf.org/doc/html/rfc8288) available for the current status of a user.
        The Links object is used for dynamic discovery of related resources, lifecycle operations, and credential operations. The Links object is read-only.

        For an individual user result, the Links object contains a full set of link relations available for that user as determined by your policies.
        For a collection of users, the Links object contains only the `self` link. Operations that return a collection of Users include List Users and List Group Members.
    UserFactorActivateResponse__links:
      allOf:
      - $ref: '#/components/schemas/LinksSelf'
      - $ref: '#/components/schemas/LinksUser'
      - $ref: '#/components/schemas/LinksVerify'
    UserFactorHardware_allOf_verify:
      properties:
        passCode:
          description: OTP for the current time window
          example: cccccceukngdfgkukfctkcvfidnetljjiknckkcjulji
          type: string
      type: object
      example: null
    UserFactorPushTransactionRejected_allOf_profile:
      properties:
        credentialId:
          description: ID for the Factor credential
          example: dade.murphy@example.com
          type: string
      type: object
      example: null
    UserFactorPushTransactionRejected_allOf__links:
      allOf:
      - $ref: '#/components/schemas/LinksVerify'
      - $ref: '#/components/schemas/UserFactor'
    UserFactorPushTransactionWaiting_allOf__links:
      allOf:
      - $ref: '#/components/schemas/LinksPoll'
      - $ref: '#/components/schemas/LinksCancel'
    UserFactorToken_allOf_verify:
      oneOf:
      - $ref: '#/components/schemas/UserFactorTokenVerifyRSA'
      - $ref: '#/components/schemas/UserFactorTokenVerifySymantec'
    UserGetSingleton_allOf__embedded:
      description: The embedded resources related to the object if the `expand` query
        parameter is specified
      properties:
        blocks:
          description: A list of access block details for the user account
          items:
            $ref: '#/components/schemas/UserBlock'
          type: array
      type: object
      example: null
    WellKnownAppAuthenticatorConfiguration_settings:
      example:
        userVerification: userVerification
      properties:
        userVerification:
          description: User verification setting
          type: string
          x-okta-known-values:
          - PREFERRED
          - REQUIRED
      type: object
    WellKnownOrgMetadata__links:
      example:
        organization:
          templated: true
          hints:
            allow:
            - null
            - null
          name: name
          href: href
          type: type
        alternate:
          templated: true
          hints:
            allow:
            - null
            - null
          name: name
          href: href
          type: type
      properties:
        alternate:
          $ref: '#/components/schemas/HrefObject'
        organization:
          $ref: '#/components/schemas/HrefObject'
      type: object
  securitySchemes:
    apiToken:
      description: "Pass the API token as the Authorization header value prefixed\
        \ with SSWS: `Authorization: SSWS {API Token}`"
      in: header
      name: Authorization
      type: apiKey
    oauth2:
      description: "Pass the access_token as the value of the Authorization header:\
        \ `Authorization: Bearer {access_token}`"
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            okta.agentPools.manage: Allows the app to create and manage agent pools
              in your Okta organization
            okta.agentPools.read: Allows the app to read agent pools in your Okta
              organization
            okta.apiTokens.manage: Allows the app to manage API Tokens in your Okta
              organization
            okta.apiTokens.read: Allows the app to read API Tokens in your Okta organization
            okta.appGrants.manage: Allows the app to create and manage grants in your
              Okta organization
            okta.appGrants.read: Allows the app to read grants in your Okta organization
            okta.apps.manage: Allows the app to create and manage Apps in your Okta
              organization
            okta.apps.read: Allows the app to read information about Apps in your
              Okta organization
            okta.authenticators.manage: "Allows the app to manage all authenticators.\
              \ For example, enrollments or resets."
            okta.authenticators.read: Allows the app to read org authenticators information
            okta.authorizationServers.manage: Allows the app to create and manage
              Authorization Servers in your Okta organization
            okta.authorizationServers.read: Allows the app to read information about
              Authorization Servers in your Okta organization
            okta.behaviors.manage: Allows the app to create and manage behavior detection
              rules in your Okta organization
            okta.behaviors.read: Allows the app to read behavior detection rules in
              your Okta organization
            okta.brands.manage: Allows the app to create and manage Brands and Themes
              in your Okta organization
            okta.brands.read: Allows the app to read information about Brands and
              Themes in your Okta organization
            okta.captchas.manage: Allows the app to create and manage CAPTCHAs in
              your Okta organization
            okta.captchas.read: Allows the app to read information about CAPTCHAs
              in your Okta organization
            okta.deviceAssurance.manage: Allows the app to manage device assurances
            okta.deviceAssurance.read: Allows the app to read device assurances
            okta.devices.manage: Allows the app to manage device status transitions
              and delete a device
            okta.devices.read: Allows the app to read the existing device's profile
              and search devices
            okta.directories.groups.manage: Allows the app to manage AD/LDAP Groups
              for your Okta organization
            okta.domains.manage: Allows the app to manage custom Domains for your
              Okta organization
            okta.domains.read: Allows the app to read information about custom Domains
              for your Okta organization
            okta.emailDomains.manage: Allows the app to manage Email Domains for your
              Okta organization
            okta.emailDomains.read: Allows the app to read information about Email
              Domains for your Okta organization
            okta.emailServers.manage: Allows the app to manage Email Servers for your
              Okta organization
            okta.emailServers.read: Allows the app to read information about Email
              Servers for your Okta organization
            okta.eventHooks.manage: Allows the app to create and manage Event Hooks
              in your Okta organization
            okta.eventHooks.read: Allows the app to read information about Event Hooks
              in your Okta organization
            okta.features.manage: Allows the app to create and manage Features in
              your Okta organization
            okta.features.read: Allows the app to read information about Features
              in your Okta organization
            okta.groups.manage: Allows the app to manage existing groups in your Okta
              organization
            okta.groups.read: Allows the app to read information about groups and
              their members in your Okta organization
            okta.identitySources.manage: Allows the custom identity sources to manage
              user entities in your Okta organization
            okta.identitySources.read: Allows to read session information for custom
              identity sources in your Okta organization
            okta.idps.manage: Allows the app to create and manage Identity Providers
              in your Okta organization
            okta.idps.read: Allows the app to read information about Identity Providers
              in your Okta organization
            okta.inlineHooks.manage: Allows the app to create and manage Inline Hooks
              in your Okta organization
            okta.inlineHooks.read: Allows the app to read information about Inline
              Hooks in your Okta organization
            okta.linkedObjects.manage: Allows the app to manage linked object definitions
              in your Okta organization
            okta.linkedObjects.read: Allows the app to read linked object definitions
              in your Okta organization
            okta.logStreams.manage: Allows the app to create and manage log streams
              in your Okta organization
            okta.logStreams.read: Allows the app to read information about log streams
              in your Okta organization
            okta.logs.read: Allows the app to read information about System Log entries
              in your Okta organization
            okta.manifests.manage: Allows the app to manage OIN submissions in your
              Okta organization
            okta.manifests.read: Allows the app to read OIN submissions in your Okta
              organization
            okta.networkZones.manage: Allows the app to create and manage Network
              Zones in your Okta organization
            okta.networkZones.read: Allows the app to read Network Zones in your Okta
              organization
            okta.oauthIntegrations.manage: Allows the app to create and manage API
              service Integration instances in your Okta organization
            okta.oauthIntegrations.read: Allows the app to read API service Integration
              instances in your Okta organization
            okta.orgs.manage: Allows the app to manage organization-specific details
              for your Okta organization
            okta.orgs.read: Allows the app to read organization-specific details about
              your Okta organization
            okta.policies.manage: Allows the app to manage policies in your Okta organization
            okta.policies.read: Allows the app to read information about policies
              in your Okta organization
            okta.principalRateLimits.manage: Allows the app to create and manage Principal
              Rate Limits in your Okta organization
            okta.principalRateLimits.read: Allows the app to read information about
              Principal Rate Limits in your Okta organization
            okta.privilegedResources.manage: Allows the app to create privileged resources
              and manage their details
            okta.privilegedResources.read: Allows the app to read the details of existing
              privileged resources
            okta.profileMappings.manage: Allows the app to manage user profile mappings
              in your Okta organization
            okta.profileMappings.read: Allows the app to read user profile mappings
              in your Okta organization
            okta.pushProviders.manage: Allows the app to create and manage push notification
              providers such as APNs and FCM
            okta.pushProviders.read: Allows the app to read push notification providers
              such as APNs and FCM
            okta.rateLimits.manage: Allows the app to create and manage rate limits
              in your Okta organization
            okta.rateLimits.read: Allows the app to read information about rate limits
              in your Okta organization
            okta.realmAssignments.manage: Allows a user to manage realm assignments
            okta.realmAssignments.read: Allows a user to read realm assignments
            okta.realms.manage: Allows the app to create new realms and to manage
              their details
            okta.realms.read: Allows the app to read the existing realms and their
              details
            okta.resourceSelectors.manage: Allows the app to manage resource selectors
              in your Okta org
            okta.resourceSelectors.read: Allows the app to read resource selectors
              in your Okta org
            okta.riskEvents.manage: Allows the app to publish risk events to your
              Okta organization
            okta.riskProviders.manage: Allows the app to create and manage risk provider
              integrations in your Okta organization
            okta.riskProviders.read: Allows the app to read all risk provider integrations
              in your Okta organization
            okta.roles.manage: Allows the app to manage administrative role assignments
              for users in your Okta organization. Delegated admins with this permission
              can only manage user credential fields and not the credential values
              themselves.
            okta.roles.read: Allows the app to read administrative role assignments
              for users in your Okta organization. Delegated admins with this permission
              can only manage user credential fields and not the credential values
              themselves.
            okta.schemas.manage: Allows the app to create and manage Schemas in your
              Okta organization
            okta.schemas.read: Allows the app to read information about Schemas in
              your Okta organization
            okta.securityEventsProviders.manage: Allows the app to create and manage
              Security Events Providers in your Okta organization
            okta.securityEventsProviders.read: Allows the app to read information
              about Security Events Providers in your Okta organization
            okta.sessions.manage: Allows the app to manage all sessions in your Okta
              organization
            okta.sessions.read: Allows the app to read all sessions in your Okta organization
            okta.templates.manage: Allows the app to manage all custom templates in
              your Okta organization
            okta.templates.read: Allows the app to read all custom templates in your
              Okta organization
            okta.threatInsights.manage: Allows the app to manage all ThreatInsight
              configurations in your Okta organization
            okta.threatInsights.read: Allows the app to read all ThreatInsight configurations
              in your Okta organization
            okta.trustedOrigins.manage: Allows the app to manage all Trusted Origins
              in your Okta organization
            okta.trustedOrigins.read: Allows the app to read all Trusted Origins in
              your Okta organization
            okta.uischemas.manage: Allows the app to manage all the UI Schemas in
              your Okta organization
            okta.uischemas.read: Allows the app to read all the UI Schemas in your
              Okta organization
            okta.userTypes.manage: Allows the app to manage user types in your Okta
              organization
            okta.userTypes.read: Allows the app to read user types in your Okta organization
            okta.users.manage: Allows the app to create new users and to manage all
              users' profile and credentials information
            okta.users.read: Allows the app to read the existing users' profiles and
              credentials
            ssf.manage: Allows the app to create and manage Shared Signals Framework
              (SSF) in your Okta organization
            ssf.read: Allows the app to read information about Shared Signals Framework
              (SSF) in your Okta organization
          tokenUrl: /oauth2/v1/token
      type: oauth2
x-webhooks:
  CreateTelephonyInlineHook:
    post:
      summary: Create an Okta Telephony Inline Hook
      description: "Creates an Okta Telephony inline hook request. This is an automated\
        \ request from Okta to your third-party service endpoint.\n\nThe objects that\
        \ you return in the JSON payload of your response to this Okta request are\
        \ an array of one or more objects,\nwhich specify the Okta commands to execute.\n\
        \n>**Note:** The size of your response payload must be less than 256 KB.\n\
        \nSee also:\n* For a general introduction to Okta inline hooks, see [Inline\
        \ hooks](https://developer.okta.com/docs/concepts/inline-hooks/)\n* For information\
        \ on the API for registering external service endpoints with Okta, see [Inline\
        \ Hooks Management API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/)\n\
        * For an example implementation of a telephony inline hook, see [Telephony\
        \ inline hook ](https://developer.okta.com/docs/guides/telephony-inline-hook)\n\
        \n### About\n\nThe Okta telephony inline hook allows you to integrate your\
        \ own custom code into Okta flows that send SMS or voice call messages. You\
        \ can integrate this hook with enrollment, authentication, and recovery flows\
        \ that involve the phone authenticator. Okta uses your external provider to\
        \ deliver the one-time passcode (OTP) to the Requester. The provider can respond\
        \ with commands that indicate if the delivery was successful or not.\n\nYou\
        \ can have only one active telephony inline hook per org.\n\nWhen you create\
        \ a telephony inline hook, you must include the `authScheme` parameter. See\
        \ [Create inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createInlineHook)\
        \ and the [authScheme object](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createInlineHook!path=channel/0/config/authScheme&t=request)\n\
        \n### Timeout behavior\n\nIf the provider response times out, Okta attempts\
        \ to send the OTP using the Okta telephony providers. See [Troubleshoot](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createTelephonyInlineHook/#troubleshoot).\n\
        \n### Troubleshoot\n\nThis section explains several common causes of failure\
        \ for telephony inline hooks.\n\nNote: Administrators can use the [Okta System\
        \ Log](https://developer.okta.com/docs/reference/api/system-log/) to view\
        \ errors. See the Troubleshooting section in the inline hooks topic for details\
        \ on events captured by the Okta System Log.\n\n| Issue                  \
        \                                                             | Impact   \
        \                                                                        \
        \               | Error Visibility                          | \n|-------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------|-------------------------------------------|\n\
        |External service fails to communicate or times out                      \
        \             | Inline hook operation is skipped, OTP is sent to the Requester\
        \ using an Okta telephony provider | Administrators only                 \
        \      |\n|External service responds with any HTTP status code besides `200`\
        \                    | Inline hook operation is skipped, OTP is sent to the\
        \ Requester using an Okta telephony provider | Administrators only       \
        \                | \n|External service returns an error object           \
        \                                  | Inline hook operation fails, OTP is sent\
        \ to the Requester using an Okta telephony provider      | Administrators,\
        \ developers, and end users |\n|Hook response is malformed or can't be mapped\
        \ to the expected API response           | Inline hook operation is skipped\
        \                                                                | Administrators\
        \ only                       |\n|Request header doesn't include an `authScheme`\
        \                                       | Inline hook operation is skipped\
        \                                                                | Administrators\
        \ only                       |\n|Response uses an invalid status         \
        \                                             | Inline hook operation is skipped\
        \                                                                | Administrators\
        \ only                       |\n|Operation adds an active telephony inline\
        \ hook when a hook exists                    | Inline hook operation is skipped\
        \                                                                | Administrators\
        \ only                       |"
      operationId: createTelephonyInlineHook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/InlineHookBasePayload'
              - $ref: '#/components/schemas/TelephonyRequest'
            examples:
              TelephonyPayloadExample:
                $ref: '#/components/examples/TelephonyPayloadExample'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelephonyResponse'
              examples:
                TelephonySuccessResponse:
                  $ref: '#/components/examples/TelephonySuccessResponse'
                TelephonyFailureResponse:
                  $ref: '#/components/examples/TelephonyFailureResponse'
        "403":
          $ref: '#/components/responses/ErrorAccessDenied403'
      security:
      - apiToken: []
      - oauth2: []
      tags:
      - InlineHook
