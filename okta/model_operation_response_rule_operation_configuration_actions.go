/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

Copyright 2018 - Present Okta, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

API version: 5.1.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package okta

import (
	"encoding/json"
)

// OperationResponseRuleOperationConfigurationActions struct for OperationResponseRuleOperationConfigurationActions
type OperationResponseRuleOperationConfigurationActions struct {
	AssignUserToRealm    *OperationResponseRuleOperationConfigurationActionsAssignUserToRealm `json:"assignUserToRealm,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OperationResponseRuleOperationConfigurationActions OperationResponseRuleOperationConfigurationActions

// NewOperationResponseRuleOperationConfigurationActions instantiates a new OperationResponseRuleOperationConfigurationActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationResponseRuleOperationConfigurationActions() *OperationResponseRuleOperationConfigurationActions {
	this := OperationResponseRuleOperationConfigurationActions{}
	return &this
}

// NewOperationResponseRuleOperationConfigurationActionsWithDefaults instantiates a new OperationResponseRuleOperationConfigurationActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationResponseRuleOperationConfigurationActionsWithDefaults() *OperationResponseRuleOperationConfigurationActions {
	this := OperationResponseRuleOperationConfigurationActions{}
	return &this
}

// GetAssignUserToRealm returns the AssignUserToRealm field value if set, zero value otherwise.
func (o *OperationResponseRuleOperationConfigurationActions) GetAssignUserToRealm() OperationResponseRuleOperationConfigurationActionsAssignUserToRealm {
	if o == nil || o.AssignUserToRealm == nil {
		var ret OperationResponseRuleOperationConfigurationActionsAssignUserToRealm
		return ret
	}
	return *o.AssignUserToRealm
}

// GetAssignUserToRealmOk returns a tuple with the AssignUserToRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationResponseRuleOperationConfigurationActions) GetAssignUserToRealmOk() (*OperationResponseRuleOperationConfigurationActionsAssignUserToRealm, bool) {
	if o == nil || o.AssignUserToRealm == nil {
		return nil, false
	}
	return o.AssignUserToRealm, true
}

// HasAssignUserToRealm returns a boolean if a field has been set.
func (o *OperationResponseRuleOperationConfigurationActions) HasAssignUserToRealm() bool {
	if o != nil && o.AssignUserToRealm != nil {
		return true
	}

	return false
}

// SetAssignUserToRealm gets a reference to the given OperationResponseRuleOperationConfigurationActionsAssignUserToRealm and assigns it to the AssignUserToRealm field.
func (o *OperationResponseRuleOperationConfigurationActions) SetAssignUserToRealm(v OperationResponseRuleOperationConfigurationActionsAssignUserToRealm) {
	o.AssignUserToRealm = &v
}

func (o OperationResponseRuleOperationConfigurationActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssignUserToRealm != nil {
		toSerialize["assignUserToRealm"] = o.AssignUserToRealm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OperationResponseRuleOperationConfigurationActions) UnmarshalJSON(bytes []byte) (err error) {
	varOperationResponseRuleOperationConfigurationActions := _OperationResponseRuleOperationConfigurationActions{}

	err = json.Unmarshal(bytes, &varOperationResponseRuleOperationConfigurationActions)
	if err == nil {
		*o = OperationResponseRuleOperationConfigurationActions(varOperationResponseRuleOperationConfigurationActions)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "assignUserToRealm")
		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullableOperationResponseRuleOperationConfigurationActions struct {
	value *OperationResponseRuleOperationConfigurationActions
	isSet bool
}

func (v NullableOperationResponseRuleOperationConfigurationActions) Get() *OperationResponseRuleOperationConfigurationActions {
	return v.value
}

func (v *NullableOperationResponseRuleOperationConfigurationActions) Set(val *OperationResponseRuleOperationConfigurationActions) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationResponseRuleOperationConfigurationActions) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationResponseRuleOperationConfigurationActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationResponseRuleOperationConfigurationActions(val *OperationResponseRuleOperationConfigurationActions) *NullableOperationResponseRuleOperationConfigurationActions {
	return &NullableOperationResponseRuleOperationConfigurationActions{value: val, isSet: true}
}

func (v NullableOperationResponseRuleOperationConfigurationActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationResponseRuleOperationConfigurationActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
