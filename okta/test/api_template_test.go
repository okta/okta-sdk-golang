/*
Okta Admin Management

Testing TemplateAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package okta

import (
	"context"
	"testing"

	openapiclient "github.com/okta/okta-sdk-golang/v6/okta"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_okta_TemplateAPIService(t *testing.T) {

	configuration, err := openapiclient.NewConfiguration()
	require.Nil(t, err)
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TemplateAPIService CreateSmsTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TemplateAPI.CreateSmsTemplate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateAPIService DeleteSmsTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var templateId string

		httpRes, err := apiClient.TemplateAPI.DeleteSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateAPIService GetSmsTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateAPI.GetSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateAPIService ListSmsTemplates", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.TemplateAPI.ListSmsTemplates(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateAPIService ReplaceSmsTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateAPI.ReplaceSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TemplateAPIService UpdateSmsTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var templateId string

		resp, httpRes, err := apiClient.TemplateAPI.UpdateSmsTemplate(context.Background(), templateId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
