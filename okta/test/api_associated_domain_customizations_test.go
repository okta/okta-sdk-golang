/*
Okta Admin Management

Testing AssociatedDomainCustomizationsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package okta

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/okta/okta-sdk-golang/v6/okta"
)

func Test_okta_AssociatedDomainCustomizationsAPIService(t *testing.T) {

	configuration, err := openapiclient.NewConfiguration()
	require.Nil(t, err)
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AssociatedDomainCustomizationsAPIService GetAllWellKnownURIs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var brandId string

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetAllWellKnownURIs(context.Background(), brandId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService GetAppleAppSiteAssociationWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetAppleAppSiteAssociationWellKnownURI(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService GetAssetLinksWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetAssetLinksWellKnownURI(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService GetBrandWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var brandId string
		var path string

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetBrandWellKnownURI(context.Background(), brandId, path).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService GetRootBrandWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var brandId string
		var path string

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetRootBrandWellKnownURI(context.Background(), brandId, path).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService GetWebAuthnWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.GetWebAuthnWellKnownURI(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AssociatedDomainCustomizationsAPIService ReplaceBrandWellKnownURI", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var brandId string
		var path string

		resp, httpRes, err := apiClient.AssociatedDomainCustomizationsAPI.ReplaceBrandWellKnownURI(context.Background(), brandId, path).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
