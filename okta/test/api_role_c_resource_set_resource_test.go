/*
Okta Admin Management

Testing RoleCResourceSetResourceAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package okta

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/okta/okta-sdk-golang/v6/okta"
)

func Test_okta_RoleCResourceSetResourceAPIService(t *testing.T) {

	configuration, err := openapiclient.NewConfiguration()
	require.Nil(t, err)
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RoleCResourceSetResourceAPIService AddResourceSetResource", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string

		resp, httpRes, err := apiClient.RoleCResourceSetResourceAPI.AddResourceSetResource(context.Background(), resourceSetIdOrLabel).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoleCResourceSetResourceAPIService AddResourceSetResources", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string

		resp, httpRes, err := apiClient.RoleCResourceSetResourceAPI.AddResourceSetResources(context.Background(), resourceSetIdOrLabel).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoleCResourceSetResourceAPIService DeleteResourceSetResource", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string
		var resourceId string

		httpRes, err := apiClient.RoleCResourceSetResourceAPI.DeleteResourceSetResource(context.Background(), resourceSetIdOrLabel, resourceId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoleCResourceSetResourceAPIService GetResourceSetResource", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string
		var resourceId string

		resp, httpRes, err := apiClient.RoleCResourceSetResourceAPI.GetResourceSetResource(context.Background(), resourceSetIdOrLabel, resourceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoleCResourceSetResourceAPIService ListResourceSetResources", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string

		resp, httpRes, err := apiClient.RoleCResourceSetResourceAPI.ListResourceSetResources(context.Background(), resourceSetIdOrLabel).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RoleCResourceSetResourceAPIService ReplaceResourceSetResource", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var resourceSetIdOrLabel string
		var resourceId string

		resp, httpRes, err := apiClient.RoleCResourceSetResourceAPI.ReplaceResourceSetResource(context.Background(), resourceSetIdOrLabel, resourceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
